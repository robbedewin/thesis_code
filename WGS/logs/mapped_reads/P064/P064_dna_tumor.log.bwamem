Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000188 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510995, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 453, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (400.00, 202.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.80, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 369.243 CPU sec, 83.740 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511015, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1245, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1237.20, 880.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.58, 61.80)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 1359, 2857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7663)
[0000][PE] mean and std.dev: (1498.00, 1189.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 366.511 CPU sec, 72.870 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510464, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 954, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6797)
[0000][PE] mean and std.dev: (1048.62, 836.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.55, 61.84)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 619, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (748.00, 644.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 359.269 CPU sec, 96.282 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511135, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.94, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 353.026 CPU sec, 110.613 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511099, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 1004, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (805.56, 544.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.77, 61.90)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1037, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1000.00, 676.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 351.988 CPU sec, 109.747 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511134, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 240, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (342.29, 291.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.82, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 355.821 CPU sec, 119.040 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511604, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 1084, 3624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10518)
[0000][PE] mean and std.dev: (2254.13, 2571.13)
[0000][PE] low and high boundaries for proper pairs: (1, 13965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 351.876 CPU sec, 114.216 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510910, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.04, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 987, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (973.40, 867.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 349.761 CPU sec, 83.189 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511212, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (986, 1156, 4717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12179)
[0000][PE] mean and std.dev: (2495.18, 2406.57)
[0000][PE] low and high boundaries for proper pairs: (1, 15910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 1045, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (746.89, 424.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 349.734 CPU sec, 102.921 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511507, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.18, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1243, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (966.45, 557.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 354.901 CPU sec, 95.066 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511281, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 1018, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (732.11, 406.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.11, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 1254, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6709)
[0000][PE] mean and std.dev: (1151.00, 1012.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 357.966 CPU sec, 86.311 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510644, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 651, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6515)
[0000][PE] mean and std.dev: (1492.25, 1612.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.96, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 355.617 CPU sec, 81.948 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511190, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (424, 719, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1023.75, 1016.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 355.291 CPU sec, 68.644 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511013, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 698, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (715.46, 624.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 709, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1109.08, 897.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 356.453 CPU sec, 64.677 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510788, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1186, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (1065.80, 771.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 62.21)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1368, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1532.23, 1048.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 351.720 CPU sec, 69.212 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511491, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (970, 1401, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1495.00, 944.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.93, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1134, 3182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7942)
[0000][PE] mean and std.dev: (1793.45, 1548.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 353.914 CPU sec, 66.374 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511043, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.97, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 786, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1916)
[0000][PE] mean and std.dev: (582.33, 380.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 353.990 CPU sec, 65.893 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511224, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 422, 2895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8183)
[0000][PE] mean and std.dev: (1268.75, 1374.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.18, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1623, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1474.94, 861.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 353.639 CPU sec, 76.194 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510862, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1390, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1051.58, 981.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7163)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 354.406 CPU sec, 66.670 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510994, 4, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 664, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (723.94, 512.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 351.433 CPU sec, 67.979 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511432, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1654, 6830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20072)
[0000][PE] mean and std.dev: (2547.41, 2755.34)
[0000][PE] low and high boundaries for proper pairs: (1, 26693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.58, 62.33)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 349.683 CPU sec, 71.943 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510795, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1156, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1042.38, 869.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.44, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1718, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6316)
[0000][PE] mean and std.dev: (1754.60, 1395.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 355.079 CPU sec, 61.773 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510517, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1071, 1922, 4681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11901)
[0000][PE] mean and std.dev: (2604.90, 1917.97)
[0000][PE] low and high boundaries for proper pairs: (1, 15511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.55, 62.18)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 818, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1370.71, 1647.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 355.961 CPU sec, 62.319 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510942, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 932, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (768.31, 594.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.37, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 1265, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (1126.90, 964.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 352.067 CPU sec, 66.723 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511424, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 353.060 CPU sec, 68.155 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511095, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 340, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (941.57, 1072.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1258, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1329.08, 1110.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 355.298 CPU sec, 70.157 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510725, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 412, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (577.17, 525.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1064, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1141.09, 648.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 358.255 CPU sec, 69.008 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511340, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 373, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (829.24, 837.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1244, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1206.73, 697.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 351.184 CPU sec, 69.541 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511232, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 1116, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5612)
[0000][PE] mean and std.dev: (1104.29, 1089.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.23, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 987, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (1055.74, 730.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 349.818 CPU sec, 59.187 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511093, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1139, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (858.50, 538.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.40, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1399, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8495)
[0000][PE] mean and std.dev: (1699.11, 1292.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 350.156 CPU sec, 71.629 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510462, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.33, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1323, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (1902.80, 1696.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8794)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 357.250 CPU sec, 80.847 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510436, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.45, 62.04)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 695, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (944.93, 816.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 359.304 CPU sec, 79.712 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511587, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 518, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (688.75, 654.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 358.084 CPU sec, 75.847 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511112, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 1722, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1469.85, 1039.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7744)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 357.958 CPU sec, 71.905 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511511, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1285, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7299)
[0000][PE] mean and std.dev: (1306.50, 1230.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1150, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (1048.57, 439.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 353.852 CPU sec, 62.700 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510951, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1568, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1260.13, 836.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.40, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 1500, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7418)
[0000][PE] mean and std.dev: (1760.60, 1576.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 352.399 CPU sec, 53.274 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511634, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 433, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6224)
[0000][PE] mean and std.dev: (1293.00, 1197.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.33, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1227, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1549.64, 1236.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 347.874 CPU sec, 53.058 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511774, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (777, 954, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6690)
[0000][PE] mean and std.dev: (1499.60, 1545.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.36, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 991, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1230.16, 1207.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 350.607 CPU sec, 55.965 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511171, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 504, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (364.89, 287.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.52, 62.28)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1081, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1351.31, 508.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 354.419 CPU sec, 57.712 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510463, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 258, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (322.77, 252.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.41, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1224, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (1137.56, 613.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 354.530 CPU sec, 56.002 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511049, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 187, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (709.00, 936.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.40, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 1227, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (1538.56, 1425.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 353.232 CPU sec, 52.004 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510985, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1161, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1301.00, 1230.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.44, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1188, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1471.88, 914.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 356.124 CPU sec, 71.866 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511375, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 767, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3458)
[0000][PE] mean and std.dev: (686.85, 526.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.12, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1487, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6475)
[0000][PE] mean and std.dev: (1454.18, 1156.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 352.159 CPU sec, 65.981 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511389, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 549, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (925.29, 1012.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 359.762 CPU sec, 58.098 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510987, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 297, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (533.94, 431.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 1067, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1102.92, 920.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 357.128 CPU sec, 55.181 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511005, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 238, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6445)
[0000][PE] mean and std.dev: (1187.00, 1682.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 355.780 CPU sec, 68.243 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511352, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 705, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (1007.24, 761.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.12, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 463, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (991.82, 1078.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 352.745 CPU sec, 59.504 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511482, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 936, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (940.10, 787.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 61.87)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 352.851 CPU sec, 52.383 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510989, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 588, 5102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14884)
[0000][PE] mean and std.dev: (2293.69, 2745.13)
[0000][PE] low and high boundaries for proper pairs: (1, 19775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1913, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1442.88, 596.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 354.796 CPU sec, 65.119 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511755, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 363, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (777.64, 733.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 266, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6984)
[0000][PE] mean and std.dev: (652.20, 806.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 354.189 CPU sec, 69.523 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510914, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 1284, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1357.21, 1255.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 733, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1143.77, 1214.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 354.467 CPU sec, 60.247 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511341, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1151, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1174.00, 981.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 907, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5768)
[0000][PE] mean and std.dev: (1172.50, 1269.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 354.978 CPU sec, 64.617 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511368, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1573, 3662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9532)
[0000][PE] mean and std.dev: (1854.46, 1303.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12467)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 357.593 CPU sec, 64.751 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510435, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 422, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (616.70, 702.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 61.89)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 492, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (758.73, 717.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 373.855 CPU sec, 59.496 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511487, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 552, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7585)
[0000][PE] mean and std.dev: (1220.86, 1354.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1551, 6898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19384)
[0000][PE] mean and std.dev: (3013.60, 3113.16)
[0000][PE] low and high boundaries for proper pairs: (1, 25627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 348.624 CPU sec, 59.041 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511176, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 797, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (759.00, 639.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 204, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (507.50, 549.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 963, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1202.40, 1240.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 356.810 CPU sec, 58.018 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511178, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 385, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (781.65, 909.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 859, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1125.15, 865.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 352.125 CPU sec, 66.302 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510719, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 1176, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1060.00, 692.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 897, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1112.44, 862.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 356.721 CPU sec, 55.733 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510925, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.04, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 357.877 CPU sec, 57.813 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510983, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.01, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 348.698 CPU sec, 61.682 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511749, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 548, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (754.70, 632.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 61.86)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 844, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6703)
[0000][PE] mean and std.dev: (1228.64, 1384.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 351.745 CPU sec, 54.548 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511044, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.15, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 354.824 CPU sec, 67.622 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511704, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.56, 62.27)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 714, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (846.29, 604.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 353.418 CPU sec, 58.083 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511320, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.20, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1432, 4218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11454)
[0000][PE] mean and std.dev: (2071.18, 1828.13)
[0000][PE] low and high boundaries for proper pairs: (1, 15072)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 358.900 CPU sec, 56.152 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511371, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (611, 982, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (953.15, 390.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.28, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 865, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1029.10, 872.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 354.028 CPU sec, 52.955 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511273, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 1231, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1023.54, 1007.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 3438, 5282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13668)
[0000][PE] mean and std.dev: (3169.62, 2010.51)
[0000][PE] low and high boundaries for proper pairs: (1, 17861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 351.840 CPU sec, 57.211 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510742, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 828, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1011.62, 1035.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 358.322 CPU sec, 65.740 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511478, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 308, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (702.38, 743.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.46, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 1480, 3091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8703)
[0000][PE] mean and std.dev: (1485.33, 1170.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 352.806 CPU sec, 59.690 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511192, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 933, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (915.80, 714.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.95, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 1152, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7634)
[0000][PE] mean and std.dev: (1484.00, 1486.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 352.513 CPU sec, 69.979 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511091, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.13, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1180, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1021.90, 678.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 354.813 CPU sec, 63.829 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511178, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 666, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (1231.08, 1313.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 356.841 CPU sec, 65.018 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511361, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (786, 1262, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (1035.00, 577.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 352.630 CPU sec, 62.011 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510950, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 950, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6794)
[0000][PE] mean and std.dev: (1329.47, 1450.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1567, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7597)
[0000][PE] mean and std.dev: (1645.82, 1683.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10040)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 818, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (612.75, 354.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 356.317 CPU sec, 61.660 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511071, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 830, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6741)
[0000][PE] mean and std.dev: (1731.21, 2216.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 2041, 2913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7757)
[0000][PE] mean and std.dev: (1758.50, 1223.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 352.566 CPU sec, 62.956 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510889, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (652, 1389, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (1142.33, 593.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1179, 4180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11038)
[0000][PE] mean and std.dev: (2087.50, 1982.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 353.609 CPU sec, 72.885 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510998, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 485, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (590.92, 618.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 384, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (548.36, 480.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 353.494 CPU sec, 60.235 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511754, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1052, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7975)
[0000][PE] mean and std.dev: (1464.81, 1312.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 1032, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (1082.05, 860.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 353.956 CPU sec, 63.483 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511919, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1546, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6949)
[0000][PE] mean and std.dev: (1764.79, 1646.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.94, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 263, 3261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9569)
[0000][PE] mean and std.dev: (1601.20, 2029.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12723)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 962, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (1003.90, 832.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 348.246 CPU sec, 59.530 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511174, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (760, 1166, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1360.45, 844.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1213, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1653.20, 1338.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 355.964 CPU sec, 73.634 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511043, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1310, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1191.35, 939.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 355.082 CPU sec, 75.682 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511113, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.92, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 889, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1176.44, 1543.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 353.754 CPU sec, 62.235 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511259, 5, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.01, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 349.925 CPU sec, 65.607 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204768
	[0000][ M::kt_pipeline] read 1204768 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511110, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 805, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5948)
[0000][PE] mean and std.dev: (1303.64, 1481.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 1071, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (985.53, 716.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 350.129 CPU sec, 76.525 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510870, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 847, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (891.07, 562.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.03, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1133, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1668.43, 1659.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204768 reads in 350.466 CPU sec, 69.509 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510786, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 970, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7654)
[0000][PE] mean and std.dev: (1777.91, 1977.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 872, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (863.27, 595.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 356.543 CPU sec, 69.129 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510751, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.04, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 857, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (921.00, 631.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 353.641 CPU sec, 69.681 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511605, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 507, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (641.43, 711.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.11, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 352.386 CPU sec, 64.001 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511244, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 652, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (624.11, 411.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.82, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 827, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (747.11, 620.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 355.435 CPU sec, 63.525 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511504, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1015, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (900.27, 610.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 363, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (864.00, 774.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 351.872 CPU sec, 65.423 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511244, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1292, 4684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11988)
[0000][PE] mean and std.dev: (2271.80, 1936.52)
[0000][PE] low and high boundaries for proper pairs: (1, 15640)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 352.123 CPU sec, 58.452 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511154, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 1540, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1506.20, 1293.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.09, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 1098, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1303.80, 891.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 351.461 CPU sec, 80.019 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510787, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 675, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2548)
[0000][PE] mean and std.dev: (638.22, 513.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1349, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6531)
[0000][PE] mean and std.dev: (1647.80, 1279.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 350.131 CPU sec, 78.349 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510576, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (618, 1245, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1266.50, 814.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.04, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1299, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1515.77, 1102.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 358.350 CPU sec, 67.361 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204428
	[0000][ M::kt_pipeline] read 1204428 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511287, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 1109, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1034.89, 876.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 352.666 CPU sec, 67.671 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510773, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 966, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6140)
[0000][PE] mean and std.dev: (1140.00, 802.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.03, 61.88)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1222, 4805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12583)
[0000][PE] mean and std.dev: (2490.31, 2025.20)
[0000][PE] low and high boundaries for proper pairs: (1, 16472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204428 reads in 352.295 CPU sec, 63.287 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510907, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 2367, 4265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12153)
[0000][PE] mean and std.dev: (2387.50, 2191.00)
[0000][PE] low and high boundaries for proper pairs: (1, 16097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 352.354 CPU sec, 61.767 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510946, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1718, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7730)
[0000][PE] mean and std.dev: (1867.08, 1927.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 693, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (835.42, 608.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 350.536 CPU sec, 60.188 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510996, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 787, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (911.00, 903.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 921, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (932.00, 618.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 355.752 CPU sec, 61.548 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510978, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 353.383 CPU sec, 92.279 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511804, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 848, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (747.30, 608.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 257, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (539.00, 560.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 350.488 CPU sec, 66.765 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511754, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.11, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 1218, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (1180.35, 754.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 352.188 CPU sec, 73.787 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510749, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1207, 1379, 2929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6373)
[0000][PE] mean and std.dev: (1999.58, 1767.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1647, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1506.83, 931.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 352.463 CPU sec, 73.037 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511150, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 320, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (474.00, 407.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.23, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 352.927 CPU sec, 64.577 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511354, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 771, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2432)
[0000][PE] mean and std.dev: (599.56, 509.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.41, 62.39)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1021, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6902)
[0000][PE] mean and std.dev: (1510.92, 1554.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 349.517 CPU sec, 65.259 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510797, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 771, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1027.75, 1131.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.37, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 1450, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6761)
[0000][PE] mean and std.dev: (1044.22, 962.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 352.130 CPU sec, 78.917 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510796, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1660, 1660, 4126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9058)
[0000][PE] mean and std.dev: (2588.00, 2025.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.59, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 402, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1143.95, 1384.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 343.868 CPU sec, 91.660 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510918, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 928, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (816.06, 562.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 1372, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7276)
[0000][PE] mean and std.dev: (1551.79, 1335.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 357.189 CPU sec, 97.131 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 510847, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 886, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6230)
[0000][PE] mean and std.dev: (1232.23, 1259.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.41, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1693, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5631)
[0000][PE] mean and std.dev: (1701.00, 1014.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 350.770 CPU sec, 93.984 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510858, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 290, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (489.27, 438.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.44, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1731, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6803)
[0000][PE] mean and std.dev: (2109.10, 1447.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 353.350 CPU sec, 88.241 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511106, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 507, 3449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9721)
[0000][PE] mean and std.dev: (1756.69, 2549.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.67, 62.11)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 990, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (957.80, 616.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 352.459 CPU sec, 78.861 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510493, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 320, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1767)
[0000][PE] mean and std.dev: (355.89, 219.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.59, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 349.674 CPU sec, 92.560 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511339, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 821, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (805.80, 541.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.43)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1112, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (1012.10, 643.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 351.860 CPU sec, 84.055 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204768
	[0000][ M::kt_pipeline] read 1204768 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511575, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 343.561 CPU sec, 75.160 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511370, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 823, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6725)
[0000][PE] mean and std.dev: (1365.79, 1522.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.61, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1138, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1265.73, 668.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204768 reads in 352.020 CPU sec, 77.236 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511100, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1426, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7071)
[0000][PE] mean and std.dev: (1306.60, 1072.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.22)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 304, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (486.92, 460.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 348.148 CPU sec, 79.051 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510944, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 476, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6431)
[0000][PE] mean and std.dev: (1238.67, 1409.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.64, 62.30)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 695, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (784.14, 778.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 348.446 CPU sec, 87.356 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511323, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.48, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1588, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6333)
[0000][PE] mean and std.dev: (1549.09, 988.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 349.248 CPU sec, 90.832 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510806, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (558, 646, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (880.58, 515.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.42)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1795, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8485)
[0000][PE] mean and std.dev: (1828.46, 1411.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 346.441 CPU sec, 89.994 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511301, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 1977, 3265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8753)
[0000][PE] mean and std.dev: (2096.88, 1586.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.78, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 806, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (934.73, 687.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 351.888 CPU sec, 98.921 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511333, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 606, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5888)
[0000][PE] mean and std.dev: (1109.85, 1065.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.79, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1209, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1269.79, 775.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 344.507 CPU sec, 90.811 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511114, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 411, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (1107.91, 1243.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 352.081 CPU sec, 83.122 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510973, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 2087, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7759)
[0000][PE] mean and std.dev: (2205.92, 1717.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10010)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 349.842 CPU sec, 88.017 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510734, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.83, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1208, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (965.45, 387.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 350.715 CPU sec, 101.236 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511067, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 2160, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6227)
[0000][PE] mean and std.dev: (1476.70, 1030.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1523, 4999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12883)
[0000][PE] mean and std.dev: (2812.73, 2277.98)
[0000][PE] low and high boundaries for proper pairs: (1, 16825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 345.503 CPU sec, 92.762 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511023, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1225, 5660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15530)
[0000][PE] mean and std.dev: (2445.45, 2670.85)
[0000][PE] low and high boundaries for proper pairs: (1, 20465)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 347.648 CPU sec, 70.361 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510227, 3, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 1478, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7682)
[0000][PE] mean and std.dev: (1908.39, 1748.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10089)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 350.112 CPU sec, 73.212 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510891, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 2309, 5166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15048)
[0000][PE] mean and std.dev: (2852.90, 2603.37)
[0000][PE] low and high boundaries for proper pairs: (1, 19989)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 346.698 CPU sec, 99.163 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511776, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 337, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (649.92, 587.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1753, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9867)
[0000][PE] mean and std.dev: (2461.50, 2806.63)
[0000][PE] low and high boundaries for proper pairs: (1, 13688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 341.596 CPU sec, 98.900 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510883, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 744, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1095.60, 952.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.97, 62.25)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1428, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1060.64, 662.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 351.789 CPU sec, 89.177 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204862
	[0000][ M::kt_pipeline] read 1204862 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511144, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.19)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1335, 1458, 3744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8562)
[0000][PE] mean and std.dev: (2056.67, 1485.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10971)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 342.856 CPU sec, 79.656 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511064, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 468, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1033.11, 1492.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 897, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (965.80, 690.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204862 reads in 348.678 CPU sec, 74.448 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204832
	[0000][ M::kt_pipeline] read 1204832 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510422, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 595, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (944.77, 878.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.84, 62.27)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 695, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (579.78, 350.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 342.124 CPU sec, 82.564 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511645, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.27)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 695, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (915.45, 656.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204832 reads in 343.153 CPU sec, 71.363 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511999, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (656, 984, 3960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10568)
[0000][PE] mean and std.dev: (2089.86, 1973.28)
[0000][PE] low and high boundaries for proper pairs: (1, 13872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1031, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1235.29, 1288.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 336.310 CPU sec, 98.803 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511234, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (704, 1033, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1435.36, 1176.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.15, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 336.132 CPU sec, 87.136 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 509062, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 1148, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7409)
[0000][PE] mean and std.dev: (1282.67, 1202.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.13)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1115, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1158.80, 689.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 348.022 CPU sec, 73.829 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511256, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 1360, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1258.80, 1179.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.09, 62.12)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 334.875 CPU sec, 84.599 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511152, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.89, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 336.341 CPU sec, 82.506 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511238, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 805, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6283)
[0000][PE] mean and std.dev: (1306.65, 1534.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1569, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1487.00, 742.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 335.173 CPU sec, 76.466 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511213, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 384, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7485)
[0000][PE] mean and std.dev: (675.89, 800.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1628, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1634.30, 833.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 341.181 CPU sec, 94.478 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511101, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 796, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1174.53, 1161.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (716.47, 574.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 338.388 CPU sec, 80.781 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511727, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 297, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (553.40, 454.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 2306, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (2090.42, 1574.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 333.318 CPU sec, 118.796 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511290, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 558, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6969)
[0000][PE] mean and std.dev: (764.30, 854.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.76, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1346, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1324.83, 929.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 338.883 CPU sec, 112.927 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511161, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 1161, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6490)
[0000][PE] mean and std.dev: (1346.50, 1426.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.80, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 1003, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1051.00, 783.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 335.811 CPU sec, 86.301 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511324, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 467, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (878.53, 940.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1358, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1222.77, 631.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 342.346 CPU sec, 97.367 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 508927, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 973, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (734.00, 574.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 349, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (362.38, 239.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 393.873 CPU sec, 91.708 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510737, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.90, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 842, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6842)
[0000][PE] mean and std.dev: (1355.93, 1327.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9028)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 343.184 CPU sec, 112.807 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511396, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (859, 1051, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6715)
[0000][PE] mean and std.dev: (1849.30, 1419.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (496, 1100, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (882.00, 435.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 335.586 CPU sec, 99.490 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510979, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 760, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (814.50, 886.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1174, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (964.00, 770.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 342.333 CPU sec, 84.098 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510960, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 516, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (842.06, 815.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.99, 62.15)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1756, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6684)
[0000][PE] mean and std.dev: (1539.22, 1112.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 334.706 CPU sec, 89.683 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510715, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 743, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (822.53, 881.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.25)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 944, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (763.70, 421.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 339.056 CPU sec, 90.795 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511155, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (704, 903, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1005.94, 697.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 957, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2203)
[0000][PE] mean and std.dev: (862.82, 526.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 335.624 CPU sec, 89.591 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511215, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 1852, 3500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7776)
[0000][PE] mean and std.dev: (2152.33, 1657.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9914)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 335.849 CPU sec, 117.030 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510680, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 559, 5688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16690)
[0000][PE] mean and std.dev: (2255.10, 2869.96)
[0000][PE] low and high boundaries for proper pairs: (1, 22191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.96, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1407, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1060.00, 786.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 351.159 CPU sec, 90.462 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511452, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.88, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 828, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (755.42, 550.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 338.957 CPU sec, 77.058 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511483, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 969, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1163.50, 1236.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.89, 62.07)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 889, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1006.71, 773.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 339.359 CPU sec, 75.058 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511022, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1086, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (915.07, 764.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.78, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1155, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (958.60, 379.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 335.634 CPU sec, 101.553 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511105, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1062, 1685, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1925.27, 1202.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.77, 62.40)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 1484, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (1195.10, 830.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 339.660 CPU sec, 150.474 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511337, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 407, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (712.77, 723.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.02, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1239, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1233.70, 803.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 340.454 CPU sec, 151.760 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511566, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 586, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1037.38, 1061.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.14)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 924, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (833.62, 357.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 339.962 CPU sec, 220.372 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511277, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 670, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (563.00, 432.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.73, 62.29)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 344.314 CPU sec, 131.699 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510851, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1019, 1620, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1436.27, 1150.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.72, 62.08)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 339.020 CPU sec, 183.187 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511348, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 291, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (927.44, 1236.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.71, 62.03)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 807, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (966.06, 635.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 338.978 CPU sec, 187.957 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511325, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 681, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (638.73, 285.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.75, 62.25)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 1101, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6357)
[0000][PE] mean and std.dev: (1412.60, 1349.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 339.762 CPU sec, 211.177 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512134, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 662, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (808.06, 691.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.52, 61.91)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 343.382 CPU sec, 117.900 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511370, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 893, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (658.25, 461.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.63, 62.07)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1543, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7276)
[0000][PE] mean and std.dev: (1518.76, 1105.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 345.890 CPU sec, 157.721 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511127, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 582, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (799.64, 690.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.89, 62.18)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1282, 4916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13550)
[0000][PE] mean and std.dev: (2257.50, 2740.47)
[0000][PE] low and high boundaries for proper pairs: (1, 17867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 342.067 CPU sec, 170.965 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511461, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.50, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 986, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7046)
[0000][PE] mean and std.dev: (1202.60, 1000.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9289)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 341.563 CPU sec, 152.941 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511185, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 395, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (401.55, 313.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.16)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1920, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1724.83, 1225.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 345.794 CPU sec, 108.776 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510712, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 946, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (771.30, 465.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.82, 62.02)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 1156, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6207)
[0000][PE] mean and std.dev: (1218.36, 1416.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 339.483 CPU sec, 156.732 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511752, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 786, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1062.92, 1123.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.85, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1132, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1085.42, 1042.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 338.362 CPU sec, 163.464 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510954, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 364, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (591.71, 507.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.11)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1630, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1622.75, 952.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 335.375 CPU sec, 216.706 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511496, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 273, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7025)
[0000][PE] mean and std.dev: (867.23, 957.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.73, 62.08)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 338.783 CPU sec, 140.544 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511736, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 272, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (361.56, 260.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.85, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 339.139 CPU sec, 107.992 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510640, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 1042, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (922.86, 573.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.87, 62.10)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1144, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1442.47, 1090.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 343.083 CPU sec, 118.438 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511329, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 826, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1872)
[0000][PE] mean and std.dev: (518.78, 309.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.83, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 1014, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6220)
[0000][PE] mean and std.dev: (1041.31, 994.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 339.996 CPU sec, 169.861 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511119, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.60, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1528, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1296.75, 1093.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 340.705 CPU sec, 181.938 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511546, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.29)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 565, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (834.90, 759.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 352.934 CPU sec, 177.296 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510828, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 1057, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (1231.26, 817.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.61, 62.33)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1283, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (1516.71, 1155.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 340.656 CPU sec, 152.060 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510863, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 278, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (687.07, 694.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.50, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 345.731 CPU sec, 148.654 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511238, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.35)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1710, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (1305.80, 621.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 341.636 CPU sec, 169.622 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511458, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 1942, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1694.08, 1677.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.66, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1164, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (1130.23, 652.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 341.259 CPU sec, 138.185 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510829, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.49)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 3058, 3782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10816)
[0000][PE] mean and std.dev: (2559.75, 2484.28)
[0000][PE] low and high boundaries for proper pairs: (1, 14333)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 336.636 CPU sec, 186.449 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511101, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 763, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (797.09, 857.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.35)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1686, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1740.06, 1488.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 339.036 CPU sec, 143.886 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510759, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 965, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1012.39, 1021.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.29)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 849, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (892.45, 577.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 342.115 CPU sec, 124.166 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510947, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 506, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (715.89, 796.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1106, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (894.45, 401.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 337.888 CPU sec, 163.843 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510826, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 427, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6554)
[0000][PE] mean and std.dev: (1124.83, 1296.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.59, 62.14)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1121, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (1065.44, 436.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 341.932 CPU sec, 80.264 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510696, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 853, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1396.90, 1522.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.60, 62.24)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1300, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1093.80, 494.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 338.437 CPU sec, 88.774 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510804, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.52, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1465, 3603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9169)
[0000][PE] mean and std.dev: (2019.83, 1735.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11952)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 336.552 CPU sec, 129.126 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511483, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 617, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2078)
[0000][PE] mean and std.dev: (545.92, 372.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.55, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 1067, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1096.36, 809.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 336.789 CPU sec, 122.135 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511260, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.55, 62.31)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 342.499 CPU sec, 82.892 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511173, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (656, 1910, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6698)
[0000][PE] mean and std.dev: (1706.00, 1218.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.70, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 622, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (571.92, 443.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 343.633 CPU sec, 130.108 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511588, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 614, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (743.33, 548.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.45, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1162, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1194.36, 875.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 339.345 CPU sec, 149.047 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511066, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.46, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 813, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (631.11, 308.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2162)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 345.073 CPU sec, 128.212 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511237, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 997, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4701)
[0000][PE] mean and std.dev: (912.33, 700.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.61, 62.46)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1298, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (1266.82, 459.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 347.171 CPU sec, 143.000 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510796, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 889, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (844.07, 770.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1099, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (896.83, 431.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 342.529 CPU sec, 169.311 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511500, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 903, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (891.25, 627.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.48, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 348, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (963.00, 1177.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 338.142 CPU sec, 142.077 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511784, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1427, 2440, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1632.90, 933.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1556, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5626)
[0000][PE] mean and std.dev: (1573.00, 1411.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 336.325 CPU sec, 157.744 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511293, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (667, 920, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1398.33, 1236.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.38)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 335.551 CPU sec, 107.087 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511484, 6, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.88, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1258, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1042.94, 443.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 337.343 CPU sec, 198.948 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511583, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 767, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (835.46, 622.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1506, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1449.00, 921.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 340.854 CPU sec, 102.699 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511085, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 349, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (486.15, 328.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 340.265 CPU sec, 215.198 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511191, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 345.137 CPU sec, 148.109 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511206, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 3248, 3988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11490)
[0000][PE] mean and std.dev: (2358.50, 2007.27)
[0000][PE] low and high boundaries for proper pairs: (1, 15241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.07, 62.59)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1126, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (884.82, 464.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 340.312 CPU sec, 164.217 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511023, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (679, 1493, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8443)
[0000][PE] mean and std.dev: (1761.05, 1460.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1126, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6750)
[0000][PE] mean and std.dev: (1164.00, 982.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 338.177 CPU sec, 158.036 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511369, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 315, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (458.90, 369.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.43, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1621, 1706, 2756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1704.30, 1056.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 343.587 CPU sec, 174.629 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510897, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 601, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (1099.69, 1074.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 405, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (781.27, 614.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 346.935 CPU sec, 189.728 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511180, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 600, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1045.26, 909.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.69, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1240, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1270.67, 697.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 340.632 CPU sec, 126.204 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204852
	[0000][ M::kt_pipeline] read 1204852 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510662, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 780, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (731.33, 817.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.69, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1234, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6314)
[0000][PE] mean and std.dev: (1548.00, 1142.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 343.883 CPU sec, 171.636 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510967, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (910, 1437, 3718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9334)
[0000][PE] mean and std.dev: (2381.21, 2335.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.96, 62.81)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 954, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6901)
[0000][PE] mean and std.dev: (1174.60, 1210.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204852 reads in 335.759 CPU sec, 167.948 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511277, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 342.143 CPU sec, 132.360 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204932
	[0000][ M::kt_pipeline] read 1204932 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511112, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.80, 62.86)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 338.948 CPU sec, 102.002 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510873, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1009, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1075.00, 745.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204932 reads in 348.917 CPU sec, 62.856 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510887, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 494, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (718.27, 578.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.73, 62.87)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1175, 4450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12774)
[0000][PE] mean and std.dev: (2259.06, 2635.48)
[0000][PE] low and high boundaries for proper pairs: (1, 16936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 338.451 CPU sec, 118.208 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511083, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 1286, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1495.44, 1133.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.76, 62.87)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1203, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7177)
[0000][PE] mean and std.dev: (1629.00, 1216.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 338.602 CPU sec, 98.799 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511448, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.54, 63.02)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 659, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1755)
[0000][PE] mean and std.dev: (569.11, 277.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2151)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 331.514 CPU sec, 152.968 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510951, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 346, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (1060.69, 1415.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.64, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1767, 3893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11005)
[0000][PE] mean and std.dev: (1925.67, 1702.87)
[0000][PE] low and high boundaries for proper pairs: (1, 14561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 334.841 CPU sec, 91.821 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510775, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 309, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (629.55, 492.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.68, 62.90)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 300, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (592.58, 501.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 337.011 CPU sec, 164.095 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510971, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (692, 1228, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1042.55, 667.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.91, 62.82)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 1059, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6493)
[0000][PE] mean and std.dev: (1247.43, 1021.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 343.166 CPU sec, 121.001 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204846
	[0000][ M::kt_pipeline] read 1204846 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510604, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 865, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5581)
[0000][PE] mean and std.dev: (1260.23, 1113.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.85, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 2474, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (2334.92, 1813.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 344.475 CPU sec, 127.556 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511684, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 712, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7945)
[0000][PE] mean and std.dev: (1312.30, 1529.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 552)
[0000][PE] mean and std.dev: (343.15, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 636)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1300, 3147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7613)
[0000][PE] mean and std.dev: (2251.73, 2095.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204846 reads in 340.361 CPU sec, 139.497 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511303, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 762, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5737)
[0000][PE] mean and std.dev: (1074.00, 992.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.89, 62.92)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 786, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (683.73, 326.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 334.617 CPU sec, 98.075 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510864, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 1190, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (875.17, 1009.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 552)
[0000][PE] mean and std.dev: (343.08, 63.08)
[0000][PE] low and high boundaries for proper pairs: (48, 636)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1053, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (1350.67, 1041.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 346.952 CPU sec, 90.126 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510781, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1095, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (792.82, 491.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.74, 62.86)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 340.788 CPU sec, 105.827 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511590, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1423, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9359)
[0000][PE] mean and std.dev: (1955.79, 1673.62)
[0000][PE] low and high boundaries for proper pairs: (1, 12320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (343.04, 62.93)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1156, 3641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10415)
[0000][PE] mean and std.dev: (1594.31, 1632.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 345.861 CPU sec, 96.802 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510715, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 750, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (573.78, 416.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.95, 62.97)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 839, 3885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11063)
[0000][PE] mean and std.dev: (1630.41, 1721.45)
[0000][PE] low and high boundaries for proper pairs: (1, 14652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 337.131 CPU sec, 193.359 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511101, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 1127, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1117.18, 812.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 552)
[0000][PE] mean and std.dev: (343.21, 62.99)
[0000][PE] low and high boundaries for proper pairs: (48, 636)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 335.073 CPU sec, 124.592 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510856, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 200, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (408.08, 397.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 552)
[0000][PE] mean and std.dev: (343.05, 63.01)
[0000][PE] low and high boundaries for proper pairs: (48, 636)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 906, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1283.60, 1131.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 342.794 CPU sec, 124.746 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511529, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (867, 1160, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1165.00, 615.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.90, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1279, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5749)
[0000][PE] mean and std.dev: (1235.50, 878.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 341.014 CPU sec, 139.505 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511251, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.86, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1146, 3838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9552)
[0000][PE] mean and std.dev: (2021.62, 1637.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12409)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 334.121 CPU sec, 118.052 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511364, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.95, 62.84)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1264, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (354, 2394)
[0000][PE] mean and std.dev: (1329.62, 204.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2802)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 340.356 CPU sec, 133.182 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511110, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 686, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (690.25, 397.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (301, 340, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 550)
[0000][PE] mean and std.dev: (343.20, 62.86)
[0000][PE] low and high boundaries for proper pairs: (52, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1222, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (966.27, 406.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 336.863 CPU sec, 180.460 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511513, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.77, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 340.545 CPU sec, 128.783 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511124, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 187, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1048.30, 1340.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.81, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 339.279 CPU sec, 109.510 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511528, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.78, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 693, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5731)
[0000][PE] mean and std.dev: (972.00, 901.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 343.783 CPU sec, 108.468 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511005, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 969, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7593)
[0000][PE] mean and std.dev: (1497.13, 1622.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.93, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 344.225 CPU sec, 136.421 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511214, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 755, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (859.88, 735.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.80, 62.67)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 612, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7262)
[0000][PE] mean and std.dev: (1274.92, 1360.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 340.670 CPU sec, 179.774 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510730, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 942, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (1059.17, 908.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 340.944 CPU sec, 170.808 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511027, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 803, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (850.30, 823.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 358, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (954.92, 1026.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 342.617 CPU sec, 120.676 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511455, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 596, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (712.00, 469.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.62, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 337.854 CPU sec, 157.439 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204768
	[0000][ M::kt_pipeline] read 1204768 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511140, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1321, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1215.75, 969.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 344.114 CPU sec, 116.643 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204910
	[0000][ M::kt_pipeline] read 1204910 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510677, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1383, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1486.43, 1229.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.71, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 839, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (764.07, 332.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204768 reads in 339.815 CPU sec, 165.005 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511480, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.48, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1173, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1246.50, 777.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204910 reads in 340.852 CPU sec, 154.309 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511245, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 521, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (679.29, 719.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 460, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (931.10, 1026.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5900)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 583, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (710.40, 593.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 334.901 CPU sec, 141.928 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204888
	[0000][ M::kt_pipeline] read 1204888 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511393, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 962, 2809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7841)
[0000][PE] mean and std.dev: (1454.40, 1369.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.67, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 648, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (785.69, 465.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 340.290 CPU sec, 106.499 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511719, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1147, 3252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8990)
[0000][PE] mean and std.dev: (1872.95, 2048.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204888 reads in 334.394 CPU sec, 106.237 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511339, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 781, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (762.09, 812.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.68, 62.64)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 1119, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1074.50, 699.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 341.049 CPU sec, 102.895 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511704, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1110, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8261)
[0000][PE] mean and std.dev: (1632.46, 1710.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.66, 62.64)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 841, 3388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8868)
[0000][PE] mean and std.dev: (1829.85, 1965.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 333.226 CPU sec, 137.272 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511456, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1602, 3786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10278)
[0000][PE] mean and std.dev: (1864.85, 1506.92)
[0000][PE] low and high boundaries for proper pairs: (1, 13524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.67, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1948, 4716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13454)
[0000][PE] mean and std.dev: (2622.69, 2365.75)
[0000][PE] low and high boundaries for proper pairs: (1, 17823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 334.379 CPU sec, 131.407 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511856, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 374, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (818.85, 938.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 334.585 CPU sec, 102.516 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511070, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 395, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6309)
[0000][PE] mean and std.dev: (1402.58, 1769.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.51, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1155, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1083.00, 613.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 333.537 CPU sec, 80.081 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510736, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.68, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1738, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1713.50, 1162.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 334.011 CPU sec, 131.635 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510896, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 669, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (621.79, 509.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.52)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 337.808 CPU sec, 123.769 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511231, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 747, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (753.07, 777.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.53, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 353.931 CPU sec, 130.006 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510959, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 596, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (652.26, 654.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1950, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9284)
[0000][PE] mean and std.dev: (2543.14, 1897.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 341.011 CPU sec, 96.044 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510937, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (677, 790, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (986.33, 607.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1209, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1401.15, 1108.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 336.837 CPU sec, 134.266 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511209, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 411, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (989.18, 1239.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.46, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 338.708 CPU sec, 174.801 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510549, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 649, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8523)
[0000][PE] mean and std.dev: (1184.67, 1229.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.41, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 341.369 CPU sec, 146.307 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510786, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 1827, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1640.56, 1296.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 337.382 CPU sec, 176.914 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510490, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1862, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6682)
[0000][PE] mean and std.dev: (1379.38, 1052.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1436, 3284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8538)
[0000][PE] mean and std.dev: (1781.46, 1508.51)
[0000][PE] low and high boundaries for proper pairs: (1, 11165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 339.976 CPU sec, 168.648 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511355, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 702, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (863.70, 750.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.11, 62.57)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1165, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1130.25, 607.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 336.038 CPU sec, 150.315 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510604, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (582, 746, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (1039.43, 777.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.29, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 924, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (993.00, 752.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 339.393 CPU sec, 157.139 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511742, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.46, 62.58)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 1113, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7647)
[0000][PE] mean and std.dev: (1519.08, 1590.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10101)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 335.893 CPU sec, 138.459 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511119, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 759, 3592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10440)
[0000][PE] mean and std.dev: (1802.00, 2354.69)
[0000][PE] low and high boundaries for proper pairs: (1, 13864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.54, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 1115, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (1170.60, 844.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 342.142 CPU sec, 161.302 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510606, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 1032, 3996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11160)
[0000][PE] mean and std.dev: (2166.36, 2528.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.53)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 338.691 CPU sec, 117.333 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204852
	[0000][ M::kt_pipeline] read 1204852 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511318, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 640, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1003.07, 1045.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1457, 3679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9567)
[0000][PE] mean and std.dev: (2040.15, 1916.58)
[0000][PE] low and high boundaries for proper pairs: (1, 12511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 344.536 CPU sec, 121.994 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 509189, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 899, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (864.30, 594.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.82, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1512, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (1802.45, 880.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204852 reads in 371.452 CPU sec, 132.301 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511897, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 499, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (671.27, 629.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.40, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 335.421 CPU sec, 178.131 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511374, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1142, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1332.81, 1396.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 343.567 CPU sec, 176.887 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511501, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 273, 3418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9936)
[0000][PE] mean and std.dev: (2122.69, 3203.24)
[0000][PE] low and high boundaries for proper pairs: (1, 14936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.32, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 338.504 CPU sec, 144.855 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204862
	[0000][ M::kt_pipeline] read 1204862 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511240, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 1625, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6445)
[0000][PE] mean and std.dev: (1339.67, 932.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8461)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 348.458 CPU sec, 83.375 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511243, 10, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 343, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9289)
[0000][PE] mean and std.dev: (1621.50, 2085.67)
[0000][PE] low and high boundaries for proper pairs: (1, 12317)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1004, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (947.31, 386.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204862 reads in 336.139 CPU sec, 159.439 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511530, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 1438, 9049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 26235)
[0000][PE] mean and std.dev: (3006.92, 3523.21)
[0000][PE] low and high boundaries for proper pairs: (1, 34828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 877, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (695.18, 481.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 334.519 CPU sec, 123.331 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511249, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 458, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (571.95, 550.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.25, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1101, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (847.64, 488.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 337.764 CPU sec, 45.775 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511155, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 2753, 4370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11678)
[0000][PE] mean and std.dev: (2690.20, 2114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 15332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.27, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 878, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1400.86, 1474.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 334.142 CPU sec, 98.245 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511696, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 1648, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6697)
[0000][PE] mean and std.dev: (1743.19, 1728.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 878, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (850.62, 640.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 332.217 CPU sec, 48.886 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511388, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.31)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1069, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1371.08, 1055.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 333.361 CPU sec, 48.584 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510888, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 282, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (725.15, 847.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1282, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (1049.22, 467.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 339.889 CPU sec, 71.096 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511026, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 317, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1823)
[0000][PE] mean and std.dev: (365.60, 286.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 861, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (868.38, 629.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 344.238 CPU sec, 119.943 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511725, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 721, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7838)
[0000][PE] mean and std.dev: (1616.36, 2097.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1150, 3446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8846)
[0000][PE] mean and std.dev: (1829.50, 1652.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 334.491 CPU sec, 63.620 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510551, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 512, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (774.58, 654.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 340.866 CPU sec, 52.223 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510928, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 792, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (764.13, 638.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.23, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (109, 136, 3356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9850)
[0000][PE] mean and std.dev: (1859.50, 2793.71)
[0000][PE] low and high boundaries for proper pairs: (1, 13097)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1513, 4877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12651)
[0000][PE] mean and std.dev: (2412.86, 1771.17)
[0000][PE] low and high boundaries for proper pairs: (1, 16538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 340.342 CPU sec, 58.719 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511223, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1685, 3881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10951)
[0000][PE] mean and std.dev: (2178.46, 1769.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.26, 62.31)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 331.286 CPU sec, 81.007 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511649, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 262, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (586.71, 502.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 914, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (837.64, 658.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 336.155 CPU sec, 60.820 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511490, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 1338, 3415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9845)
[0000][PE] mean and std.dev: (1488.46, 1448.53)
[0000][PE] low and high boundaries for proper pairs: (1, 13060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 334.736 CPU sec, 79.610 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511479, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 911, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1072.60, 966.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.49)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1073, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (1173.10, 845.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 333.316 CPU sec, 55.738 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511106, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 904, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (833.56, 534.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (99, 132, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (137.11, 86.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1314, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1247.36, 757.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 333.258 CPU sec, 64.733 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511255, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 818, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7875)
[0000][PE] mean and std.dev: (1441.54, 1673.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (440, 805, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (989.13, 786.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 372.336 CPU sec, 82.276 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511267, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 975, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (825.20, 557.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1449, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (1627.33, 1425.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 355.424 CPU sec, 62.041 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511173, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 820, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (836.00, 666.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1198, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (246, 2251)
[0000][PE] mean and std.dev: (1102.85, 399.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 338.109 CPU sec, 61.446 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511424, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.23, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 333.710 CPU sec, 66.586 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510504, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 898, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1130.14, 902.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 357.923 CPU sec, 51.870 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511171, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 938, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8556)
[0000][PE] mean and std.dev: (1642.45, 1906.69)
[0000][PE] low and high boundaries for proper pairs: (1, 11343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.82, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 403.833 CPU sec, 66.448 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511682, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 752, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1087.00, 1089.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 798, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (813.82, 665.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 337.936 CPU sec, 53.187 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511236, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 859, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1052.93, 1341.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.86, 62.56)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1552, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9266)
[0000][PE] mean and std.dev: (1922.36, 1986.24)
[0000][PE] low and high boundaries for proper pairs: (1, 12227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 354.906 CPU sec, 58.669 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511193, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.76, 62.39)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 687, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8324)
[0000][PE] mean and std.dev: (1342.12, 1432.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11002)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 343.433 CPU sec, 52.477 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511130, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 919, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (977.39, 811.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 346.283 CPU sec, 72.653 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511690, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1023, 1513, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1357.56, 825.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1378, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 2466)
[0000][PE] mean and std.dev: (1146.54, 462.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 374.729 CPU sec, 57.700 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511127, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1353, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (1644.64, 1531.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1496, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (1249.70, 707.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 345.608 CPU sec, 50.428 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510940, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 1009, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7615)
[0000][PE] mean and std.dev: (1270.83, 1152.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 2016, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (2045.40, 1359.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 340.237 CPU sec, 59.194 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511124, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 251, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5939)
[0000][PE] mean and std.dev: (813.00, 938.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1207, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1145.43, 552.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 351.552 CPU sec, 63.661 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510884, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 1318, 3410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9954)
[0000][PE] mean and std.dev: (1571.10, 1468.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 346.246 CPU sec, 61.196 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511694, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 545, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9042)
[0000][PE] mean and std.dev: (1425.54, 1827.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1024, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6817)
[0000][PE] mean and std.dev: (1152.89, 870.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 334.843 CPU sec, 49.309 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511456, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 437, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7565)
[0000][PE] mean and std.dev: (1384.77, 1666.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.88, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 345.357 CPU sec, 75.441 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511245, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.83, 62.57)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 799, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (640.00, 474.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2696)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 335.342 CPU sec, 62.975 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511379, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.68, 62.47)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 1187, 3637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10007)
[0000][PE] mean and std.dev: (2134.15, 2403.65)
[0000][PE] low and high boundaries for proper pairs: (1, 13192)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 347.717 CPU sec, 80.182 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204846
	[0000][ M::kt_pipeline] read 1204846 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510724, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 734, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (585.50, 455.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.75, 62.58)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 939, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (1113.44, 767.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 344.921 CPU sec, 62.441 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511005, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1659, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6097)
[0000][PE] mean and std.dev: (1764.07, 1071.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7732)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204846 reads in 335.615 CPU sec, 94.555 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510813, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1222, 3170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9020)
[0000][PE] mean and std.dev: (1887.54, 2054.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1388, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8547)
[0000][PE] mean and std.dev: (1751.65, 1485.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 339.296 CPU sec, 83.005 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511197, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 311, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (953.80, 1105.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1166, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6626)
[0000][PE] mean and std.dev: (1427.94, 1056.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 335.129 CPU sec, 46.406 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511217, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.60)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1365, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1201.40, 706.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 334.325 CPU sec, 110.050 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510949, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 744, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (791.23, 524.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.57)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 349.137 CPU sec, 107.771 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511205, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 660, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (709.53, 541.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.55)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 335.891 CPU sec, 86.076 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510916, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 888, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1217.45, 1234.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.36, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 332.931 CPU sec, 72.938 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510941, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 291, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6805)
[0000][PE] mean and std.dev: (1233.30, 1768.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.34, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 530, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (714.20, 513.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 349.201 CPU sec, 87.287 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510837, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.13, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 344.512 CPU sec, 81.721 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511061, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 329, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (419.82, 367.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.25, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 278, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5270)
[0000][PE] mean and std.dev: (953.07, 1072.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 338.432 CPU sec, 98.762 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511391, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (661, 1471, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (1381.71, 860.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.25, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1281, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (1286.53, 959.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 332.042 CPU sec, 91.848 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511262, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 1152, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6777)
[0000][PE] mean and std.dev: (894.45, 871.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.30, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 345.640 CPU sec, 86.944 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511102, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 203, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (319.00, 303.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 293, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1443)
[0000][PE] mean and std.dev: (382.33, 228.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 334.279 CPU sec, 87.953 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510991, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (726, 957, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (932.43, 626.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 938, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6945)
[0000][PE] mean and std.dev: (1451.67, 1390.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 338.551 CPU sec, 89.119 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511168, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1232, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (1551.60, 1466.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.55)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 848, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (982.30, 729.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 331.031 CPU sec, 66.320 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511046, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 759, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6207)
[0000][PE] mean and std.dev: (1078.67, 1004.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.48, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1450, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7772)
[0000][PE] mean and std.dev: (1803.33, 1145.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 334.320 CPU sec, 81.899 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510662, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.72, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 333.489 CPU sec, 91.781 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510621, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 2079, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7403)
[0000][PE] mean and std.dev: (1370.50, 1190.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.87)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 333.789 CPU sec, 99.279 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511312, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 706, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (966.39, 957.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1067, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (1137.80, 660.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 332.941 CPU sec, 90.687 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511513, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 363, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (273.12, 172.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1070, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1268.90, 848.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 331.581 CPU sec, 121.272 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511066, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 337, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (544.23, 484.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1677, 5273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14587)
[0000][PE] mean and std.dev: (2291.82, 2165.52)
[0000][PE] low and high boundaries for proper pairs: (1, 19244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 343.363 CPU sec, 83.619 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511254, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.74, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 850, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1886)
[0000][PE] mean and std.dev: (706.00, 406.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 335.277 CPU sec, 83.454 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511604, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 844, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (863.27, 589.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.73, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 344.710 CPU sec, 77.165 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511336, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1051, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7407)
[0000][PE] mean and std.dev: (1187.92, 1053.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.94, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1493, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7556)
[0000][PE] mean and std.dev: (1540.85, 1063.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 337.632 CPU sec, 88.092 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511609, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 889, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1121.21, 1334.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.89, 62.81)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 991, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (984.36, 644.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 335.409 CPU sec, 76.275 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 511560, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (688, 1235, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5545)
[0000][PE] mean and std.dev: (1516.15, 1234.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.97, 62.84)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 733, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (911.40, 761.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 335.538 CPU sec, 133.464 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511304, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.88, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1238, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (1392.67, 784.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 337.230 CPU sec, 70.213 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511675, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (343.07, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 345.838 CPU sec, 74.146 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511221, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 1236, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1174.00, 986.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (301, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 547)
[0000][PE] mean and std.dev: (342.88, 62.58)
[0000][PE] low and high boundaries for proper pairs: (55, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 342.142 CPU sec, 69.642 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510730, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 1178, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6518)
[0000][PE] mean and std.dev: (1415.55, 1309.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (301, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 547)
[0000][PE] mean and std.dev: (342.96, 62.66)
[0000][PE] low and high boundaries for proper pairs: (55, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 979, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2314)
[0000][PE] mean and std.dev: (885.42, 464.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 333.739 CPU sec, 63.380 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511130, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1034, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1153.20, 1038.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.88, 62.86)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 907, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7487)
[0000][PE] mean and std.dev: (1626.46, 1863.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 334.717 CPU sec, 84.346 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510926, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 362, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7370)
[0000][PE] mean and std.dev: (1207.62, 1317.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.80, 62.84)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 333.605 CPU sec, 75.839 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510769, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 898, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6583)
[0000][PE] mean and std.dev: (1305.17, 1195.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.80, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 1421, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1304.94, 981.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 334.333 CPU sec, 70.271 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511694, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 694, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5690)
[0000][PE] mean and std.dev: (1200.00, 1481.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.83, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 770, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (892.38, 826.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 331.901 CPU sec, 69.540 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511437, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (528, 1034, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1492.62, 1535.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.74, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 1297, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1316.77, 917.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 331.333 CPU sec, 51.239 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510813, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 608, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (658.44, 688.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.80, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 889, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (1067.36, 645.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 337.054 CPU sec, 47.661 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511143, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.83)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1635, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7069)
[0000][PE] mean and std.dev: (1667.75, 1553.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9285)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 338.193 CPU sec, 61.345 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511520, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 955, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (906.62, 748.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.72, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 2580, 3628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8658)
[0000][PE] mean and std.dev: (2790.83, 1797.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 335.303 CPU sec, 55.567 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511434, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 310, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2301)
[0000][PE] mean and std.dev: (679.36, 600.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.76, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 2047, 4172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9916)
[0000][PE] mean and std.dev: (2750.27, 2020.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 339.963 CPU sec, 48.451 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511468, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.63, 62.58)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 332.413 CPU sec, 40.623 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510957, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 1258, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1495.09, 1241.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.82, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1223, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (1485.84, 1155.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 338.270 CPU sec, 66.230 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511036, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1313, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (1178.33, 499.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 339.197 CPU sec, 55.072 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511679, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 895, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6976)
[0000][PE] mean and std.dev: (1414.79, 1535.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.68, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1637, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6492)
[0000][PE] mean and std.dev: (1321.93, 1102.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 341.988 CPU sec, 44.714 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511194, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 815, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (775.45, 765.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.42)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 339.203 CPU sec, 60.510 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511283, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (603, 1074, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (860.00, 527.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.53)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 942, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (815.45, 443.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 338.746 CPU sec, 38.674 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510995, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 256, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (617.18, 597.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 628, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1800)
[0000][PE] mean and std.dev: (559.44, 332.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 334.778 CPU sec, 48.227 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204876
	[0000][ M::kt_pipeline] read 1204876 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511458, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (644, 958, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (917.50, 563.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.67, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 940, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (1402.21, 1147.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 337.159 CPU sec, 38.259 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511185, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 624, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (927.28, 877.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.62, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204876 reads in 332.224 CPU sec, 50.014 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511760, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 824, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1120.27, 1134.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.57)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 334.842 CPU sec, 42.641 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511103, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 320, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (781.80, 696.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1528, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1309.20, 672.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 335.461 CPU sec, 46.606 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511036, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 278, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (393.44, 342.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1379, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1315.36, 1036.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 333.672 CPU sec, 45.139 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511368, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 726, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7479)
[0000][PE] mean and std.dev: (1721.83, 2070.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.35, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 347.624 CPU sec, 36.027 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511475, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 296, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (464.17, 442.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1370, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1185.20, 790.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 338.888 CPU sec, 39.381 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511111, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1267, 4155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11783)
[0000][PE] mean and std.dev: (2003.41, 2050.22)
[0000][PE] low and high boundaries for proper pairs: (1, 15597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 683, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (893.55, 803.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 332.621 CPU sec, 47.345 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510969, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1658, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6754)
[0000][PE] mean and std.dev: (1259.38, 930.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.54)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1688, 3894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9890)
[0000][PE] mean and std.dev: (2343.58, 2172.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 337.593 CPU sec, 50.519 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511740, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1286, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7053)
[0000][PE] mean and std.dev: (1252.10, 1143.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.44)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 921, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (881.44, 645.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 343.521 CPU sec, 62.177 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510853, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 832, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (889.67, 664.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 340.571 CPU sec, 55.289 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511089, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 710, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (980.10, 701.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 1285, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (1061.75, 662.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 342.136 CPU sec, 36.060 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510883, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.62)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 861, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (736.58, 444.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 345.787 CPU sec, 40.549 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511027, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (607, 1655, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1154.64, 861.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.54)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 875, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (673.42, 412.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 340.222 CPU sec, 65.474 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510653, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1113, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6441)
[0000][PE] mean and std.dev: (1534.45, 1270.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8380)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 336.154 CPU sec, 39.801 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511746, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 222, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1324)
[0000][PE] mean and std.dev: (306.10, 193.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 490, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (713.17, 588.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 336.629 CPU sec, 49.867 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511311, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 359, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (435.35, 436.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1065, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7656)
[0000][PE] mean and std.dev: (1494.54, 1278.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 337.315 CPU sec, 58.902 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511236, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1780, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8437)
[0000][PE] mean and std.dev: (2006.89, 1956.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.27)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 398, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (915.91, 845.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 342.222 CPU sec, 65.720 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 509663, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 930, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1101.82, 919.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.39, 62.62)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 886, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (780.53, 431.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 382.587 CPU sec, 78.289 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 510944, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 336.561 CPU sec, 68.282 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511385, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 321, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (1004.94, 999.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.25, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1314, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1415.30, 766.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 334.224 CPU sec, 51.490 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511240, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 264, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 774)
[0000][PE] mean and std.dev: (225.75, 80.66)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.28, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1598, 3928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9848)
[0000][PE] mean and std.dev: (2105.46, 1596.81)
[0000][PE] low and high boundaries for proper pairs: (1, 12808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 342.065 CPU sec, 45.449 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510780, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 856, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7760)
[0000][PE] mean and std.dev: (1631.18, 2027.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 340.388 CPU sec, 43.378 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511133, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 642, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2218)
[0000][PE] mean and std.dev: (542.42, 416.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.37, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 744, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (1074.07, 764.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 336.453 CPU sec, 50.983 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510680, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 949, 3325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9647)
[0000][PE] mean and std.dev: (1647.70, 1687.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.27, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1046, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1182.92, 624.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 344.144 CPU sec, 44.536 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511754, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 192, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (863.00, 1026.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 328.796 CPU sec, 46.845 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511194, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 1129, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1144.40, 983.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1402, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6400)
[0000][PE] mean and std.dev: (1816.67, 1629.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 338.215 CPU sec, 43.093 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510980, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1103, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (1225.06, 727.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 336.676 CPU sec, 40.472 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511350, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1264, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (979.86, 714.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 330.796 CPU sec, 42.834 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511269, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (542, 1784, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1800.93, 1189.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.25, 62.55)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1514, 3381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7897)
[0000][PE] mean and std.dev: (2195.13, 1810.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 334.752 CPU sec, 42.817 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511002, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 257, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (766.67, 963.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.26, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 970, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2316)
[0000][PE] mean and std.dev: (926.09, 500.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 335.573 CPU sec, 40.849 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510424, 1, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.52)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 336.882 CPU sec, 71.367 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511406, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 1067, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7848)
[0000][PE] mean and std.dev: (1494.06, 1808.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.13, 62.56)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1237, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6838)
[0000][PE] mean and std.dev: (1972.36, 1539.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 337.710 CPU sec, 47.963 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511125, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 262, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (227.75, 80.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.99, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 713, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2242)
[0000][PE] mean and std.dev: (707.79, 357.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 334.822 CPU sec, 41.264 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511813, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 2134, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7619)
[0000][PE] mean and std.dev: (1665.10, 1568.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.25, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1269, 3025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8411)
[0000][PE] mean and std.dev: (1564.77, 1623.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 335.703 CPU sec, 56.880 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511432, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.94, 62.57)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 334.068 CPU sec, 38.040 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512222, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 610, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8281)
[0000][PE] mean and std.dev: (1673.80, 1850.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 335.395 CPU sec, 40.100 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511603, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 799, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (853.21, 915.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.99, 62.31)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 634, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (848.20, 703.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 339.950 CPU sec, 42.013 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511104, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 491, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (396.75, 221.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1333, 3376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8832)
[0000][PE] mean and std.dev: (1851.58, 1722.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 330.217 CPU sec, 44.617 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511312, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1283, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5612)
[0000][PE] mean and std.dev: (1408.00, 959.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 332.270 CPU sec, 38.232 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 510997, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.23, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 974, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7523)
[0000][PE] mean and std.dev: (1666.18, 1721.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9903)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 335.670 CPU sec, 35.392 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511374, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 300, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (340.30, 326.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1207, 3099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7375)
[0000][PE] mean and std.dev: (1680.73, 1415.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 333.700 CPU sec, 42.400 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511328, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 342, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1612)
[0000][PE] mean and std.dev: (454.06, 264.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1037, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1204.00, 825.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 330.754 CPU sec, 43.584 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511178, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (342.04, 62.65)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 341.672 CPU sec, 51.900 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511680, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 1788, 3472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10022)
[0000][PE] mean and std.dev: (1818.00, 1690.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.63)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 530, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (856.00, 646.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 334.334 CPU sec, 37.415 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511444, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 329, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (791.92, 803.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 807, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (921.06, 648.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 339.557 CPU sec, 53.847 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510885, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (962, 1136, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (1244.38, 826.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.56)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 2690, 6017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15549)
[0000][PE] mean and std.dev: (3173.00, 2811.44)
[0000][PE] low and high boundaries for proper pairs: (1, 20315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 340.443 CPU sec, 44.488 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511372, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 581, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (776.11, 747.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.36, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 344.319 CPU sec, 40.050 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511498, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 330.039 CPU sec, 49.283 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204606
	[0000][ M::kt_pipeline] read 1204606 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511257, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 788, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (842.47, 707.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.39, 62.62)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1280, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1452.91, 934.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 335.397 CPU sec, 62.984 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511232, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 609, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6043)
[0000][PE] mean and std.dev: (1360.00, 1656.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.54)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204606 reads in 331.768 CPU sec, 46.611 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510816, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 338, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (585.80, 507.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.09, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 2233, 3543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8307)
[0000][PE] mean and std.dev: (2223.77, 1193.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 337.257 CPU sec, 39.221 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511381, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.54)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1028, 3591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10071)
[0000][PE] mean and std.dev: (1868.54, 1859.23)
[0000][PE] low and high boundaries for proper pairs: (1, 13311)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 341.797 CPU sec, 54.553 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511324, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1430, 1761, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (768, 2423)
[0000][PE] mean and std.dev: (1553.57, 278.27)
[0000][PE] low and high boundaries for proper pairs: (437, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1290, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1000.33, 531.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 343.313 CPU sec, 47.046 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510893, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 533, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (598.00, 545.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.71, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1345, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5458)
[0000][PE] mean and std.dev: (1599.77, 1304.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 343.576 CPU sec, 55.785 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511151, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 328, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (420.92, 363.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1719, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1714.50, 1096.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 338.256 CPU sec, 44.359 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511039, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 328, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (552.27, 500.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 338.699 CPU sec, 35.849 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511439, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 821, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (741.11, 614.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 998, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8294)
[0000][PE] mean and std.dev: (1442.80, 1277.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 335.999 CPU sec, 38.079 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510879, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 841, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7648)
[0000][PE] mean and std.dev: (1184.00, 1097.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.90, 62.58)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1064, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1125.46, 710.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 346.432 CPU sec, 38.873 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510597, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1356, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1557.09, 1044.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 335.177 CPU sec, 43.543 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511003, 6, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1029, 3675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9383)
[0000][PE] mean and std.dev: (2087.53, 2415.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12237)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 338.023 CPU sec, 34.021 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510892, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 695, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (745.00, 532.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.87, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 333.173 CPU sec, 47.684 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510339, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 964, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (893.50, 613.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1778, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (1651.33, 1136.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 343.383 CPU sec, 50.109 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511842, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 1388, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6716)
[0000][PE] mean and std.dev: (1341.73, 1023.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.04, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1044, 4370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11994)
[0000][PE] mean and std.dev: (2479.18, 2519.77)
[0000][PE] low and high boundaries for proper pairs: (1, 15806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 338.804 CPU sec, 55.057 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511370, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1040, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5615)
[0000][PE] mean and std.dev: (863.33, 717.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 850, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (747.56, 554.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 335.384 CPU sec, 46.371 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510650, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 1187, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6940)
[0000][PE] mean and std.dev: (1234.95, 1341.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 832, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (736.79, 382.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 341.594 CPU sec, 41.404 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510924, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 436, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (750.42, 738.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 337.146 CPU sec, 44.024 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510950, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1209, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6555)
[0000][PE] mean and std.dev: (1457.29, 1297.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.80, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 2304, 3730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10908)
[0000][PE] mean and std.dev: (2314.70, 2282.07)
[0000][PE] low and high boundaries for proper pairs: (1, 14497)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 335.452 CPU sec, 41.761 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511197, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 867, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (781.41, 772.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 352, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (608.17, 463.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 333.804 CPU sec, 51.683 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510879, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 819, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6413)
[0000][PE] mean and std.dev: (1317.25, 1292.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 860, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (833.00, 698.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 340.385 CPU sec, 47.309 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510768, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1032, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1043.46, 619.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7669)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 331.377 CPU sec, 41.671 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511341, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 753, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (912.17, 947.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 1101, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1080.08, 875.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 337.884 CPU sec, 57.860 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510915, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (550, 2181, 3114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8242)
[0000][PE] mean and std.dev: (2044.50, 1966.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.47)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1535, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8408)
[0000][PE] mean and std.dev: (1761.21, 1495.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 339.239 CPU sec, 65.304 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510809, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 698, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (616.25, 583.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.62, 62.87)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 1014, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (818.89, 391.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 361.467 CPU sec, 51.887 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510119, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 2373, 4191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11887)
[0000][PE] mean and std.dev: (2519.70, 1913.17)
[0000][PE] low and high boundaries for proper pairs: (1, 15735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 902, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (778.08, 405.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 360.065 CPU sec, 51.550 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511292, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.49)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1080, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1054.92, 551.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 335.912 CPU sec, 54.724 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511030, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 900, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (918.00, 620.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.58)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 1016, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (763.13, 628.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 339.763 CPU sec, 40.915 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510965, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (763, 1072, 3484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8926)
[0000][PE] mean and std.dev: (1676.31, 1703.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.33, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 335.231 CPU sec, 56.747 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511191, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 421, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (511.22, 416.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.43, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 347.324 CPU sec, 59.540 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511067, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (722, 1138, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1199.15, 674.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.32, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1475, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1614.70, 1173.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 338.616 CPU sec, 36.606 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511231, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 695, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (892.90, 943.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 1132, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6677)
[0000][PE] mean and std.dev: (1392.07, 1279.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 337.083 CPU sec, 39.341 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510827, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1638, 1987, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (314, 3624)
[0000][PE] mean and std.dev: (1964.10, 501.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 345.991 CPU sec, 53.395 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510829, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 513, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1090.25, 1266.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1047, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1220.33, 812.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 335.022 CPU sec, 36.081 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511393, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.56)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 800, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (814.33, 468.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3343)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 331.908 CPU sec, 32.716 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510614, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 265, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1205.18, 1724.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.54)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 338.207 CPU sec, 38.903 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204856
	[0000][ M::kt_pipeline] read 1204856 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510811, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1244, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1351.19, 1225.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.53, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 1365, 4414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12198)
[0000][PE] mean and std.dev: (1945.46, 1796.87)
[0000][PE] low and high boundaries for proper pairs: (1, 16090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 332.286 CPU sec, 58.131 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511239, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1224, 1754, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6447)
[0000][PE] mean and std.dev: (1865.17, 1289.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.63, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204856 reads in 333.393 CPU sec, 58.578 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510961, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 1201, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8398)
[0000][PE] mean and std.dev: (1451.91, 1229.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 893, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7250)
[0000][PE] mean and std.dev: (1557.33, 1691.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 340.262 CPU sec, 40.810 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511495, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 516, 2891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8311)
[0000][PE] mean and std.dev: (1328.09, 1484.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 1259, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1079.42, 921.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 343.981 CPU sec, 54.923 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511337, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 666, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6209)
[0000][PE] mean and std.dev: (1030.31, 1098.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1387, 4528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13054)
[0000][PE] mean and std.dev: (1929.67, 1951.65)
[0000][PE] low and high boundaries for proper pairs: (1, 17317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 332.926 CPU sec, 34.819 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511189, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.32, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 714, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (688.78, 541.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 335.085 CPU sec, 36.497 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511102, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 241, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (633.55, 692.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.65, 62.60)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 972, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7329)
[0000][PE] mean and std.dev: (1601.13, 1264.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 338.639 CPU sec, 58.385 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511286, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 630, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5768)
[0000][PE] mean and std.dev: (1060.60, 950.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.46, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 338.322 CPU sec, 45.581 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204866
	[0000][ M::kt_pipeline] read 1204866 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511490, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 439, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (504.86, 368.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 342.826 CPU sec, 34.658 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204862
	[0000][ M::kt_pipeline] read 1204862 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511563, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.34, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1659, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1419.73, 896.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204866 reads in 339.292 CPU sec, 36.120 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511074, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1111, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8431)
[0000][PE] mean and std.dev: (1293.15, 1353.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.52)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1069, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2015)
[0000][PE] mean and std.dev: (890.00, 375.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204862 reads in 338.908 CPU sec, 51.014 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510959, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (528, 1773, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8004)
[0000][PE] mean and std.dev: (2390.08, 2474.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 340.782 CPU sec, 77.325 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511721, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1330, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8602)
[0000][PE] mean and std.dev: (2157.79, 2081.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.65, 62.40)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (255, 413, 3131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8883)
[0000][PE] mean and std.dev: (1539.27, 1929.91)
[0000][PE] low and high boundaries for proper pairs: (1, 11759)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 338.292 CPU sec, 58.199 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510573, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1106, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (781.50, 616.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 970, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6177)
[0000][PE] mean and std.dev: (1086.22, 930.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 354.061 CPU sec, 38.382 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510879, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 570, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8204)
[0000][PE] mean and std.dev: (1688.07, 1903.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.57, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 824, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1911)
[0000][PE] mean and std.dev: (672.58, 279.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 345.642 CPU sec, 56.055 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511301, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 411, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8399)
[0000][PE] mean and std.dev: (1187.70, 1243.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.65, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1446, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (1493.75, 1208.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 335.036 CPU sec, 52.290 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510858, 0, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.75, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 818, 3207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8985)
[0000][PE] mean and std.dev: (2084.42, 2475.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11985)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 338.375 CPU sec, 42.412 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511115, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 798, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (901.82, 653.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.54, 62.44)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 849, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6547)
[0000][PE] mean and std.dev: (946.45, 998.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 344.080 CPU sec, 49.847 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511354, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 1049, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (1341.40, 1234.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1097, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (1047.79, 636.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 333.131 CPU sec, 42.526 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511086, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (705, 856, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (876.82, 667.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 1394, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1198.67, 961.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 341.744 CPU sec, 49.424 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511188, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 609, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (482.00, 185.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1033, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (739.89, 474.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 334.726 CPU sec, 49.254 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510864, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 600, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (728.58, 643.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.51, 62.49)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1159, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (848.82, 653.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 336.732 CPU sec, 35.018 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510964, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 662, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9283)
[0000][PE] mean and std.dev: (1800.60, 2339.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.43)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 340.605 CPU sec, 31.524 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511075, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 959, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (958.00, 988.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 918, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (981.27, 672.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 333.107 CPU sec, 38.821 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511086, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1047, 1252, 3387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8067)
[0000][PE] mean and std.dev: (1750.50, 1268.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 345.646 CPU sec, 56.989 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511034, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1015, 1110, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (215, 2215)
[0000][PE] mean and std.dev: (1091.33, 324.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.26, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 341.293 CPU sec, 47.141 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511191, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (893, 1250, 3866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9812)
[0000][PE] mean and std.dev: (1935.92, 1579.10)
[0000][PE] low and high boundaries for proper pairs: (1, 12785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1569, 4071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10701)
[0000][PE] mean and std.dev: (2443.36, 2429.92)
[0000][PE] low and high boundaries for proper pairs: (1, 14016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 338.475 CPU sec, 46.950 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510987, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 789, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (618.35, 606.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 1839, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1120.22, 838.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 346.103 CPU sec, 52.579 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 511190, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.50)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 340.001 CPU sec, 44.185 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511362, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 362, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (800.44, 790.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.23, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1989, 2624, 4290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8892)
[0000][PE] mean and std.dev: (2813.27, 1647.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 338.403 CPU sec, 68.183 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511866, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 701, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (942.62, 748.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.80, 62.17)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1114, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (1148.13, 704.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 333.032 CPU sec, 37.343 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511396, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.14)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 845, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (826.00, 534.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3883)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 340.075 CPU sec, 46.012 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511033, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1223, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7734)
[0000][PE] mean and std.dev: (1484.56, 1754.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 386, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10594)
[0000][PE] mean and std.dev: (1880.50, 2874.12)
[0000][PE] low and high boundaries for proper pairs: (1, 14108)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1235, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (1719.50, 1338.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 346.591 CPU sec, 55.118 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511508, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 525, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (675.95, 519.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1307, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (1165.60, 645.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 336.829 CPU sec, 42.594 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511007, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 1601, 4358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12682)
[0000][PE] mean and std.dev: (2380.85, 2528.17)
[0000][PE] low and high boundaries for proper pairs: (1, 16844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.88, 62.14)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1058, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1165.77, 1002.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 345.086 CPU sec, 49.163 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511006, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 840, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1526.65, 1536.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.90, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 829, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (934.92, 644.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 334.816 CPU sec, 40.762 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511732, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 621, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (823.64, 784.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.59, 62.28)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 968, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2099)
[0000][PE] mean and std.dev: (829.15, 342.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 338.114 CPU sec, 37.030 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510980, 12, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.63, 62.08)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 2186, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9708)
[0000][PE] mean and std.dev: (1885.67, 1929.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 926, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1166.55, 1021.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 337.427 CPU sec, 43.881 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511453, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1619, 3856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10680)
[0000][PE] mean and std.dev: (2502.12, 2285.29)
[0000][PE] low and high boundaries for proper pairs: (1, 14092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.78, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (113, 267, 3698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10868)
[0000][PE] mean and std.dev: (1798.62, 2534.17)
[0000][PE] low and high boundaries for proper pairs: (1, 14453)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 333.465 CPU sec, 43.628 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511003, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 1068, 5236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14360)
[0000][PE] mean and std.dev: (2756.07, 2883.13)
[0000][PE] low and high boundaries for proper pairs: (1, 18922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.57, 62.25)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1189, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1009.78, 634.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 334.334 CPU sec, 56.468 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511270, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 221, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (445.11, 404.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.66, 62.13)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 945, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (855.50, 516.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 335.117 CPU sec, 35.568 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511094, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 770, 3461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9443)
[0000][PE] mean and std.dev: (2041.62, 2221.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.70, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 1027, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1010.23, 846.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 339.216 CPU sec, 58.782 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511361, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 1148, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7035)
[0000][PE] mean and std.dev: (1525.40, 1172.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.14)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 874, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (1290.83, 1192.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 333.394 CPU sec, 40.401 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511472, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.73, 62.00)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 433, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (700.78, 681.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 342.449 CPU sec, 44.299 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510944, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 1667, 4153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11869)
[0000][PE] mean and std.dev: (2393.62, 2635.14)
[0000][PE] low and high boundaries for proper pairs: (1, 15727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 341.412 CPU sec, 40.598 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510989, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.06)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1166, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1193.42, 812.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 344.224 CPU sec, 51.402 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510924, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 778, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2147)
[0000][PE] mean and std.dev: (521.88, 324.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.70, 62.23)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 832, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (681.64, 436.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.835 CPU sec, 41.479 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511419, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 564, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (493.00, 315.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.68, 62.29)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 341.141 CPU sec, 57.785 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511061, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.66, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 758, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (809.60, 590.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 345.878 CPU sec, 52.969 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511015, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1528, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1086.70, 749.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 281, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (703.09, 685.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 342.062 CPU sec, 37.563 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511396, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 770, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (870.00, 457.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.51, 62.21)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 337.471 CPU sec, 37.720 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511706, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 431, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5743)
[0000][PE] mean and std.dev: (866.20, 864.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 333.849 CPU sec, 40.464 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511201, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 1060, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1211.79, 1266.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 333.623 CPU sec, 70.527 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511479, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 443, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (787.91, 717.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 1046, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1009.31, 739.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 333.705 CPU sec, 47.295 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511088, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 255, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (569.00, 548.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 337.580 CPU sec, 42.191 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510832, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 457, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (405.55, 250.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.36, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1372, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6235)
[0000][PE] mean and std.dev: (1362.20, 851.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 334.799 CPU sec, 41.392 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511009, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.46, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 836, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6663)
[0000][PE] mean and std.dev: (1260.83, 1492.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8811)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 338.282 CPU sec, 33.418 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511255, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.45, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1167, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1353.18, 823.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 343.236 CPU sec, 51.100 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510952, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 658, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (1229.31, 1218.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.61, 62.15)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 898, 3406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9666)
[0000][PE] mean and std.dev: (1848.44, 2092.93)
[0000][PE] low and high boundaries for proper pairs: (1, 12796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 332.361 CPU sec, 39.652 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511204, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1141, 1755, 5103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13027)
[0000][PE] mean and std.dev: (2456.64, 2181.36)
[0000][PE] low and high boundaries for proper pairs: (1, 16989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.28)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 939, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (1494.93, 1454.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 337.580 CPU sec, 34.455 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511402, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.53, 62.04)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1147, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (966.50, 544.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 329.276 CPU sec, 37.267 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511764, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 1111, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6671)
[0000][PE] mean and std.dev: (1294.00, 1640.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.37, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 814, 5611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16431)
[0000][PE] mean and std.dev: (2367.33, 2845.99)
[0000][PE] low and high boundaries for proper pairs: (1, 21841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 340.469 CPU sec, 37.984 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511357, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (740, 1446, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1304.38, 802.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.52, 62.30)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 703, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (856.62, 668.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 337.972 CPU sec, 55.075 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511571, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 345, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (1352.92, 1650.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.47, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 339.845 CPU sec, 40.739 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511227, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 875, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (934.43, 742.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.36, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 339.500 CPU sec, 42.967 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510850, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 594, 3584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10194)
[0000][PE] mean and std.dev: (1714.87, 1946.62)
[0000][PE] low and high boundaries for proper pairs: (1, 13499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.47, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 651, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1076.31, 1125.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 339.192 CPU sec, 39.199 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511097, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.49, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 926, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (846.64, 657.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 333.030 CPU sec, 36.640 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511125, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 200, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (452.13, 477.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.36, 62.21)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 521, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1013.53, 996.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 339.603 CPU sec, 55.669 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511401, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 965, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (989.10, 581.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 341.771 CPU sec, 46.573 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510699, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 432, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (991.82, 1060.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.87, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 1127, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1552.00, 1503.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 339.136 CPU sec, 43.153 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511554, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 878, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (636.40, 311.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.88, 61.84)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1015, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1392.69, 1363.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 338.790 CPU sec, 41.812 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511371, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 168, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (445.67, 606.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 61.84)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 340.586 CPU sec, 53.522 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511292, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 767, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1337.62, 1000.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.91, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 340.764 CPU sec, 35.134 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511104, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 972, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7477)
[0000][PE] mean and std.dev: (1567.23, 1574.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1525, 3628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9986)
[0000][PE] mean and std.dev: (1880.20, 1569.06)
[0000][PE] low and high boundaries for proper pairs: (1, 13165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 339.025 CPU sec, 35.843 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511116, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 62.18)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 339.406 CPU sec, 34.032 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511191, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 340.138 CPU sec, 35.930 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510636, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1057, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (748.38, 506.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 347.219 CPU sec, 36.531 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511229, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 745, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (884.77, 590.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 931, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (838.45, 378.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 343.740 CPU sec, 42.186 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511462, 6, 25)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 957, 3686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9940)
[0000][PE] mean and std.dev: (2035.84, 1948.00)
[0000][PE] low and high boundaries for proper pairs: (1, 13067)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 346.637 CPU sec, 41.465 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510827, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 222, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (634.06, 894.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 347.961 CPU sec, 48.505 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510709, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 593, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1077.39, 1022.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 423, 3357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9705)
[0000][PE] mean and std.dev: (1402.92, 1678.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 347.742 CPU sec, 41.996 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511484, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 764, 3717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10507)
[0000][PE] mean and std.dev: (1480.19, 1677.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 333.242 CPU sec, 41.631 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510993, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 371, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1171.92, 1279.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.23, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1055, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6982)
[0000][PE] mean and std.dev: (1728.00, 1433.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 339.423 CPU sec, 32.575 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511041, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 927, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8488)
[0000][PE] mean and std.dev: (1489.25, 1583.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 1004, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (739.18, 465.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 331.745 CPU sec, 43.531 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511172, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 694, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6295)
[0000][PE] mean and std.dev: (1176.06, 989.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 894, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (778.20, 563.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 335.890 CPU sec, 49.888 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511758, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 502, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1992)
[0000][PE] mean and std.dev: (380.76, 235.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 333.220 CPU sec, 35.236 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511330, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 965, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1214.27, 819.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 340.193 CPU sec, 34.358 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511797, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 310, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (419.00, 309.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 935, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (816.88, 454.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 332.772 CPU sec, 39.320 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510913, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1306, 1536, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (254, 2884)
[0000][PE] mean and std.dev: (1525.11, 336.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.11, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (127, 1374, 3507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10267)
[0000][PE] mean and std.dev: (2247.00, 2307.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 339.498 CPU sec, 48.477 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510135, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (883, 1197, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1435.53, 986.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 62.30)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1096, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5869)
[0000][PE] mean and std.dev: (1419.22, 1096.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 346.822 CPU sec, 58.982 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511530, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 863, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (937.86, 884.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 1209, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (1217.76, 767.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 344.131 CPU sec, 40.087 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511123, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (841, 2708, 3651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9271)
[0000][PE] mean and std.dev: (2174.62, 1340.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.42, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 1182, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1122.14, 631.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 336.184 CPU sec, 39.024 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510701, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 1793, 4425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12411)
[0000][PE] mean and std.dev: (2559.59, 2784.98)
[0000][PE] low and high boundaries for proper pairs: (1, 16404)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 336.409 CPU sec, 33.429 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511472, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 1604, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (745.12, 708.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 565, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (853.67, 734.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 334.825 CPU sec, 30.942 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511549, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 336.851 CPU sec, 40.438 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511504, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 972, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (921.19, 644.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 342.598 CPU sec, 41.060 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511519, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 628, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10392)
[0000][PE] mean and std.dev: (1912.60, 2862.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 972, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4493)
[0000][PE] mean and std.dev: (1148.73, 1033.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 333.341 CPU sec, 36.992 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510989, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 244, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (463.69, 464.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 978, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1611.11, 1165.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 338.129 CPU sec, 40.114 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511094, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1116, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1037.31, 620.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 895, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7310)
[0000][PE] mean and std.dev: (1619.64, 1340.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 331.287 CPU sec, 37.298 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511240, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.18, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 872, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (747.83, 480.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 334.690 CPU sec, 45.538 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511294, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 263, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (799.91, 806.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1597, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1526.06, 1461.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 333.633 CPU sec, 37.036 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511340, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.37, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 872, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (758.36, 456.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 336.407 CPU sec, 33.518 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511414, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 228, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2427)
[0000][PE] mean and std.dev: (477.50, 406.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 784, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1311.85, 1351.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 340.988 CPU sec, 34.040 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510990, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.23, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 766, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (712.23, 583.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 337.026 CPU sec, 35.041 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511668, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 353, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (959.60, 1047.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 1110, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (785.78, 469.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 340.543 CPU sec, 52.713 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511210, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 868, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (1086.64, 972.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 343.720 CPU sec, 52.575 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511227, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 931, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5530)
[0000][PE] mean and std.dev: (930.58, 704.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1350, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1679.71, 1272.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 337.893 CPU sec, 40.603 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510876, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 846, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1314.50, 1273.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 1930, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6570)
[0000][PE] mean and std.dev: (1327.42, 959.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 335.246 CPU sec, 34.864 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511009, 1, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.44, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 337.870 CPU sec, 30.693 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511581, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1635, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (1256.32, 1020.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 61.92)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1126, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7750)
[0000][PE] mean and std.dev: (1496.90, 1408.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 334.364 CPU sec, 36.837 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511254, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 945, 4121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11633)
[0000][PE] mean and std.dev: (1948.60, 2149.71)
[0000][PE] low and high boundaries for proper pairs: (1, 15389)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 333.998 CPU sec, 31.663 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511020, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 724, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1248.82, 1443.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.37, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 948, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1231.40, 776.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 346.294 CPU sec, 34.442 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511173, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.51, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 346.007 CPU sec, 45.368 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510907, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 595, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (954.53, 938.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.46, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 733, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (976.33, 702.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 339.680 CPU sec, 45.219 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204876
	[0000][ M::kt_pipeline] read 1204876 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511146, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 868, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8099)
[0000][PE] mean and std.dev: (1423.65, 1378.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.50, 62.00)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 786, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5940)
[0000][PE] mean and std.dev: (1210.62, 1206.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 336.749 CPU sec, 43.255 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511673, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 972, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8626)
[0000][PE] mean and std.dev: (1583.77, 1876.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 61.84)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1101, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (1071.91, 611.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204876 reads in 337.533 CPU sec, 40.775 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511685, 0, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.33, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 835, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1138.00, 1178.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6347)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 333.574 CPU sec, 34.170 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510999, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1042, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6491)
[0000][PE] mean and std.dev: (1829.27, 1683.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8563)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 339.786 CPU sec, 33.856 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511340, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 61.89)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1223, 4345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12147)
[0000][PE] mean and std.dev: (1948.54, 1992.44)
[0000][PE] low and high boundaries for proper pairs: (1, 16048)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 333.682 CPU sec, 40.932 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510896, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.28, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1856, 2005, 4432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9584)
[0000][PE] mean and std.dev: (2578.15, 1339.45)
[0000][PE] low and high boundaries for proper pairs: (1, 12160)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 348.143 CPU sec, 33.539 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511186, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 561, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (947.57, 958.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8576)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 332.395 CPU sec, 34.820 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510468, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1623, 4265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12141)
[0000][PE] mean and std.dev: (2405.21, 2556.72)
[0000][PE] low and high boundaries for proper pairs: (1, 16079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.46, 61.79)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1537, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6881)
[0000][PE] mean and std.dev: (1493.25, 1233.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 343.943 CPU sec, 37.566 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511287, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 61.85)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 334.940 CPU sec, 46.831 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511614, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 954, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10348)
[0000][PE] mean and std.dev: (1360.77, 1509.41)
[0000][PE] low and high boundaries for proper pairs: (1, 13733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 977, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1135.93, 974.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 346.513 CPU sec, 42.283 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510657, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 1434, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6159)
[0000][PE] mean and std.dev: (1157.00, 902.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 799, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7845)
[0000][PE] mean and std.dev: (1312.38, 1236.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 337.269 CPU sec, 33.856 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511235, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 948, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (788.00, 558.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.20, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 921, 3760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10848)
[0000][PE] mean and std.dev: (2099.00, 2966.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 337.393 CPU sec, 35.174 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204846
	[0000][ M::kt_pipeline] read 1204846 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511184, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 861, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (1221.94, 1260.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 921, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (999.25, 628.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 333.573 CPU sec, 37.714 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 510772, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.24, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 2341, 7056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18410)
[0000][PE] mean and std.dev: (3018.83, 2476.71)
[0000][PE] low and high boundaries for proper pairs: (1, 24087)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204846 reads in 336.264 CPU sec, 37.641 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511798, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 790, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6551)
[0000][PE] mean and std.dev: (1191.65, 1166.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.32, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 330.283 CPU sec, 34.360 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511432, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (752, 847, 4192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11072)
[0000][PE] mean and std.dev: (2057.37, 2197.30)
[0000][PE] low and high boundaries for proper pairs: (1, 14512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (484, 767, 3822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10498)
[0000][PE] mean and std.dev: (1846.58, 2351.79)
[0000][PE] low and high boundaries for proper pairs: (1, 13836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 337.501 CPU sec, 37.887 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511550, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 333.042 CPU sec, 32.070 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511582, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 249, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2065)
[0000][PE] mean and std.dev: (501.50, 448.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 61.90)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 1437, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1090.69, 818.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 337.743 CPU sec, 41.744 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511554, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 482, 4786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13908)
[0000][PE] mean and std.dev: (1903.24, 2502.34)
[0000][PE] low and high boundaries for proper pairs: (1, 18469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.18, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1764, 4179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10259)
[0000][PE] mean and std.dev: (2274.94, 1703.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 331.332 CPU sec, 32.186 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511027, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 279, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (347.56, 259.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.28, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1676, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1522.11, 1388.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 341.003 CPU sec, 44.965 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510623, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 293, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (518.45, 586.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1062, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1562.47, 1581.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 336.188 CPU sec, 46.045 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511222, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1285, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6861)
[0000][PE] mean and std.dev: (1794.61, 1880.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 61.85)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 1057, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1099.06, 834.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 331.962 CPU sec, 42.011 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511115, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 941, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (895.69, 731.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1656, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1677.62, 1356.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 330.897 CPU sec, 42.482 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511035, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 2096, 3004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8494)
[0000][PE] mean and std.dev: (2018.86, 1758.45)
[0000][PE] low and high boundaries for proper pairs: (1, 11239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.24, 61.89)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 845, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (917.92, 804.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 338.435 CPU sec, 37.337 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511554, 9, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1365, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7228)
[0000][PE] mean and std.dev: (1679.36, 1373.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9415)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 330.866 CPU sec, 36.565 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511055, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 869, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8680)
[0000][PE] mean and std.dev: (1488.42, 1736.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1945, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (1591.70, 890.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 336.784 CPU sec, 36.283 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511180, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 684, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (524.20, 470.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.94, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 491, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (1030.81, 926.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 338.958 CPU sec, 44.256 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511843, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 369, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (681.80, 774.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.72, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 1761, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (1541.86, 931.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 329.083 CPU sec, 35.601 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 510983, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 876, 3346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9652)
[0000][PE] mean and std.dev: (2125.56, 2834.59)
[0000][PE] low and high boundaries for proper pairs: (1, 13464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.87, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 445, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (1015.95, 1105.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 339.917 CPU sec, 36.388 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510918, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.15, 61.89)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1002, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7314)
[0000][PE] mean and std.dev: (1809.82, 1695.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9452)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 333.023 CPU sec, 22.332 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000040 bp)...
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511165, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 542, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2481)
[0000][PE] mean and std.dev: (466.15, 256.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1015, 4688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12862)
[0000][PE] mean and std.dev: (2171.67, 2039.16)
[0000][PE] low and high boundaries for proper pairs: (1, 16949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 342.916 CPU sec, 35.216 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511142, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 348, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (456.10, 343.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1506, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1422.83, 884.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 346.764 CPU sec, 49.186 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511059, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 812, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1004.56, 920.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 349.323 CPU sec, 47.958 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511042, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 893, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8213)
[0000][PE] mean and std.dev: (1368.41, 1481.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.12, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 343.273 CPU sec, 32.552 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511308, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 854, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1302.23, 1093.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1913, 5598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15034)
[0000][PE] mean and std.dev: (2658.75, 2195.94)
[0000][PE] low and high boundaries for proper pairs: (1, 19752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 344.174 CPU sec, 34.804 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 508515, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 737, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (642.44, 463.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (339.94, 61.74)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 405.644 CPU sec, 55.604 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 507859, 10, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (339.90, 61.78)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 925, 4192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12434)
[0000][PE] mean and std.dev: (1981.00, 2285.12)
[0000][PE] low and high boundaries for proper pairs: (1, 16555)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1095, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1433.20, 1178.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 392.622 CPU sec, 31.437 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511124, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 1024, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7089)
[0000][PE] mean and std.dev: (1639.73, 1478.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9296)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 342.706 CPU sec, 33.740 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511051, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 821, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (744.07, 553.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 349.120 CPU sec, 39.064 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511605, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 892, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (1576.75, 1905.45)
[0000][PE] low and high boundaries for proper pairs: (1, 11538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 1022, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7524)
[0000][PE] mean and std.dev: (1984.10, 2081.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 333.955 CPU sec, 31.214 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511177, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 741, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (876.62, 901.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.18)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 335.314 CPU sec, 37.485 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511154, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (861, 1280, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1327.30, 1068.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1254, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5629)
[0000][PE] mean and std.dev: (1715.31, 1247.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 332.703 CPU sec, 29.723 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511994, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 331.829 CPU sec, 35.661 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511149, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1646, 4875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13405)
[0000][PE] mean and std.dev: (2897.67, 2817.82)
[0000][PE] low and high boundaries for proper pairs: (1, 17670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1712, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7334)
[0000][PE] mean and std.dev: (2300.33, 1880.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 337.886 CPU sec, 32.283 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511192, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 577, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (1392.79, 1411.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 1018, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7237)
[0000][PE] mean and std.dev: (1376.85, 1139.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 333.434 CPU sec, 45.807 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511190, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 1198, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1358.22, 1193.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 2141, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8600)
[0000][PE] mean and std.dev: (2228.93, 1962.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 331.527 CPU sec, 36.940 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511154, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 923, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9477)
[0000][PE] mean and std.dev: (1591.39, 1713.88)
[0000][PE] low and high boundaries for proper pairs: (1, 12560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1116, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1033.40, 634.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 337.906 CPU sec, 38.329 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511378, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 609, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2165)
[0000][PE] mean and std.dev: (541.79, 461.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 328.613 CPU sec, 34.051 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511307, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 716, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (894.54, 833.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 61.87)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 732, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (574.73, 342.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 340.159 CPU sec, 34.350 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511041, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (686, 1175, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4772)
[0000][PE] mean and std.dev: (1484.55, 1272.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.47, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 334.239 CPU sec, 32.076 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510833, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (679, 1308, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1252.25, 941.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 1127, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (687.00, 492.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 339.132 CPU sec, 56.287 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511115, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 320, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (594.77, 781.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 568, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (603.93, 430.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 342.564 CPU sec, 42.985 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511732, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 282, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6485)
[0000][PE] mean and std.dev: (1070.58, 1378.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.53, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 1707, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6350)
[0000][PE] mean and std.dev: (1201.67, 876.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 333.910 CPU sec, 38.062 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512221, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 220, 5036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14850)
[0000][PE] mean and std.dev: (1748.08, 2422.51)
[0000][PE] low and high boundaries for proper pairs: (1, 19757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.82, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 814, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8129)
[0000][PE] mean and std.dev: (1411.45, 1404.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 400.595 CPU sec, 43.316 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511760, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 253, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (285.83, 250.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.50, 61.83)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 398.035 CPU sec, 50.505 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510240, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.46, 61.79)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1623, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (1217.33, 585.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 341.826 CPU sec, 42.622 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510810, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 816, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (865.47, 558.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.37, 61.92)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 1120, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9569)
[0000][PE] mean and std.dev: (2005.00, 2246.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 349.155 CPU sec, 52.384 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510819, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 1200, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6143)
[0000][PE] mean and std.dev: (1196.25, 848.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.48, 62.11)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 341.139 CPU sec, 37.867 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511408, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 375, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (843.60, 949.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.40, 62.00)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 847, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (757.60, 539.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 337.927 CPU sec, 37.476 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511348, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 758, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6717)
[0000][PE] mean and std.dev: (1419.27, 1308.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.44, 61.96)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1269, 3952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9822)
[0000][PE] mean and std.dev: (2395.53, 2144.62)
[0000][PE] low and high boundaries for proper pairs: (1, 12757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 335.685 CPU sec, 46.567 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511435, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 657, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6331)
[0000][PE] mean and std.dev: (1108.58, 1363.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.51, 61.87)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 978, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1153.23, 1109.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 337.116 CPU sec, 37.540 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510736, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.51, 61.81)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1353, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1048.22, 762.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 340.058 CPU sec, 35.073 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511135, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 465, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (576.35, 440.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.75, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 338.566 CPU sec, 31.426 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511304, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 632, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (698.62, 747.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.64, 62.03)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 655, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1029.86, 957.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 341.724 CPU sec, 54.825 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511317, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.64, 61.90)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 895, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4493)
[0000][PE] mean and std.dev: (686.64, 440.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5900)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 340.701 CPU sec, 51.644 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510873, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 759, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7086)
[0000][PE] mean and std.dev: (1794.00, 1971.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.59, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (135, 371, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (560.50, 582.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 343.401 CPU sec, 50.670 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511317, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 401, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2340)
[0000][PE] mean and std.dev: (571.56, 615.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.67, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1137, 4601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13253)
[0000][PE] mean and std.dev: (1799.50, 1791.03)
[0000][PE] low and high boundaries for proper pairs: (1, 17579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 337.711 CPU sec, 39.274 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510917, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.60, 62.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 338.995 CPU sec, 39.491 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511034, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 398, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (467.85, 336.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.36, 61.82)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 798, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7117)
[0000][PE] mean and std.dev: (1293.00, 1118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 339.471 CPU sec, 30.324 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510553, 9, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.44, 61.87)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 834, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (741.80, 418.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 342.239 CPU sec, 38.349 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510799, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 1306, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (885.82, 769.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.48, 61.82)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 337.348 CPU sec, 43.482 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510744, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 1834, 3383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8921)
[0000][PE] mean and std.dev: (2015.14, 1853.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.46, 61.92)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1472, 1987, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6227)
[0000][PE] mean and std.dev: (2306.60, 1498.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 341.716 CPU sec, 42.092 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511503, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 746, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5175)
[0000][PE] mean and std.dev: (1204.53, 1139.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.67, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 256, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (455.24, 495.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 339.672 CPU sec, 35.716 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511242, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1423, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5951)
[0000][PE] mean and std.dev: (1068.29, 796.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7819)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 343.209 CPU sec, 57.821 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510904, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 819, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5043)
[0000][PE] mean and std.dev: (1128.33, 1208.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.81, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 1372, 3665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10313)
[0000][PE] mean and std.dev: (1745.33, 1435.58)
[0000][PE] low and high boundaries for proper pairs: (1, 13637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 336.622 CPU sec, 42.592 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510785, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 475, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (500.36, 363.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 61.92)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 656, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (817.50, 636.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 341.530 CPU sec, 44.065 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511173, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1276, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (1044.42, 552.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3294)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 347.204 CPU sec, 38.533 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511491, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 1094, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (815.31, 666.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.47, 61.74)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1129, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (909.88, 468.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 343.207 CPU sec, 48.033 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511222, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 292, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (382.70, 226.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.78, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 664, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4753)
[0000][PE] mean and std.dev: (1278.00, 1429.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 336.642 CPU sec, 35.045 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510874, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.48, 62.07)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 670, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (774.07, 694.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 340.179 CPU sec, 39.114 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510926, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 402, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (435.91, 296.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.69, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 3360, 4735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12303)
[0000][PE] mean and std.dev: (3335.90, 2997.29)
[0000][PE] low and high boundaries for proper pairs: (1, 16087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 335.745 CPU sec, 34.512 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510939, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.68, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 691, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6285)
[0000][PE] mean and std.dev: (1348.62, 1541.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8320)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 337.572 CPU sec, 32.849 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511206, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.75, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 340.439 CPU sec, 41.089 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511006, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 653, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (806.36, 692.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.91, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1321, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (1304.56, 683.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 339.584 CPU sec, 37.129 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510862, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 1075, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10316)
[0000][PE] mean and std.dev: (1850.00, 2152.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.48, 61.99)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1437, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1304.58, 880.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 339.341 CPU sec, 34.213 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510645, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1676, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5366)
[0000][PE] mean and std.dev: (1486.22, 1100.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 337.631 CPU sec, 45.411 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511112, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 1268, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (1505.90, 1410.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.55, 61.85)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1575, 3066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1734.75, 1193.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 339.674 CPU sec, 36.027 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 510759, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.67, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 342.144 CPU sec, 32.434 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510816, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 227, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (628.25, 701.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 522, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (518.80, 379.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 340.645 CPU sec, 40.329 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511627, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 675, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (767.82, 739.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.95, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 335.997 CPU sec, 29.553 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510946, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1233, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8240)
[0000][PE] mean and std.dev: (1920.00, 1973.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1761, 3782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10488)
[0000][PE] mean and std.dev: (2179.36, 1996.36)
[0000][PE] low and high boundaries for proper pairs: (1, 13841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 329.896 CPU sec, 30.153 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510970, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 706, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1328.50, 1572.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.09, 61.88)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (395, 639, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1196.78, 1109.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 331.469 CPU sec, 38.664 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510541, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 232, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (596.43, 578.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 337.288 CPU sec, 37.805 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510938, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1000, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1076.00, 920.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.93, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 340.060 CPU sec, 37.767 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510939, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 689, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (881.08, 802.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.68, 61.85)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1166, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7602)
[0000][PE] mean and std.dev: (1695.95, 1633.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 335.188 CPU sec, 33.579 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511794, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 1513, 3101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8869)
[0000][PE] mean and std.dev: (1600.36, 1177.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.74, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 340.300 CPU sec, 32.734 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511238, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1361, 1665, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1479.10, 746.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.60, 61.83)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 346.924 CPU sec, 44.311 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 510970, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 622, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6874)
[0000][PE] mean and std.dev: (1203.90, 1496.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.91, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 1136, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1355.88, 1301.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 336.820 CPU sec, 24.249 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510974, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 273, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (749.00, 885.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.80, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 332.789 CPU sec, 31.793 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510933, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 826, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2120)
[0000][PE] mean and std.dev: (573.69, 432.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.73, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 924, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1007.62, 645.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 345.596 CPU sec, 37.817 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511293, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 251, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (487.53, 427.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 337.073 CPU sec, 35.961 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 510628, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 856, 2873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8155)
[0000][PE] mean and std.dev: (1392.76, 1350.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.76, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 339.112 CPU sec, 33.184 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510992, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1454, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (1266.25, 357.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 339.817 CPU sec, 38.434 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510737, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 1156, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (744.86, 581.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.53, 61.92)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 345.560 CPU sec, 32.955 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511287, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 965, 3731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10491)
[0000][PE] mean and std.dev: (1972.95, 2134.62)
[0000][PE] low and high boundaries for proper pairs: (1, 13871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1333, 3318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7882)
[0000][PE] mean and std.dev: (2217.64, 1927.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 347.289 CPU sec, 36.639 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510873, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1354, 3624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10336)
[0000][PE] mean and std.dev: (1785.42, 1837.50)
[0000][PE] low and high boundaries for proper pairs: (1, 13692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.58, 62.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 341.069 CPU sec, 36.137 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511332, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 1382, 4269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12433)
[0000][PE] mean and std.dev: (2304.09, 2262.03)
[0000][PE] low and high boundaries for proper pairs: (1, 16515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 338.796 CPU sec, 37.367 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510811, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 352, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7917)
[0000][PE] mean and std.dev: (591.45, 773.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000161 bp)...
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 340.267 CPU sec, 39.108 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510914, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.98, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 694, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2698)
[0000][PE] mean and std.dev: (655.07, 385.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 346.029 CPU sec, 37.300 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511371, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1270, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8207)
[0000][PE] mean and std.dev: (1492.36, 1192.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10864)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 337.552 CPU sec, 33.976 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511062, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1478, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1282.30, 751.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 999, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (985.25, 843.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 338.414 CPU sec, 35.522 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510934, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1016, 1405, 4055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10133)
[0000][PE] mean and std.dev: (2663.00, 2444.58)
[0000][PE] low and high boundaries for proper pairs: (1, 13172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 901, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1424.40, 1402.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 342.836 CPU sec, 34.828 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511240, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 539, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (732.92, 553.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.77, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 825, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1053.80, 776.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 338.459 CPU sec, 46.821 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511252, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (952, 1530, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1563.82, 1041.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.91, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 878, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (1033.85, 520.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 339.767 CPU sec, 38.491 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510985, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 275, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2001)
[0000][PE] mean and std.dev: (387.43, 288.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.73, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 843, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6286)
[0000][PE] mean and std.dev: (1120.50, 826.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 338.238 CPU sec, 36.231 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 508980, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 302, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7117)
[0000][PE] mean and std.dev: (1126.16, 1499.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.62, 62.15)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 377.808 CPU sec, 33.342 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510377, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1304, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1043.10, 747.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1788, 2297, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (2371.64, 729.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 344.309 CPU sec, 34.601 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511719, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 355, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6867)
[0000][PE] mean and std.dev: (1485.82, 1789.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.63, 61.77)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 1525, 2995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8231)
[0000][PE] mean and std.dev: (1888.40, 1577.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 330.717 CPU sec, 33.612 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511141, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 619, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4740)
[0000][PE] mean and std.dev: (672.36, 759.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.61, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 842, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (854.53, 684.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 339.195 CPU sec, 40.740 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510944, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 270, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (656.71, 838.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.74, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 717, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (1029.53, 694.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 335.148 CPU sec, 36.784 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511251, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 314, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2113)
[0000][PE] mean and std.dev: (579.50, 499.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.70, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1096, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7133)
[0000][PE] mean and std.dev: (1607.92, 1178.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 336.802 CPU sec, 46.705 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511041, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 260, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (842.23, 1171.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1212, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7918)
[0000][PE] mean and std.dev: (1903.62, 1954.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 335.708 CPU sec, 36.140 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511482, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (679, 933, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1109.45, 912.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.39, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 1288, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1195.29, 932.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 332.252 CPU sec, 28.372 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511147, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 407, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1027.43, 1035.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 960, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (898.40, 680.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 332.799 CPU sec, 46.569 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511315, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1640, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1400.87, 1090.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.40, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1144, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7656)
[0000][PE] mean and std.dev: (1785.07, 1443.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 342.332 CPU sec, 37.458 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511111, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.81, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1357, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4965)
[0000][PE] mean and std.dev: (1235.27, 871.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 334.522 CPU sec, 36.487 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204502
	[0000][ M::kt_pipeline] read 1204502 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510491, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 515, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (558.22, 472.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.03, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1038, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (765.40, 512.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 340.825 CPU sec, 39.692 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510763, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.86, 61.92)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204502 reads in 331.021 CPU sec, 27.444 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511568, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 578, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (804.19, 689.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.78, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 750, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (823.62, 523.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 330.447 CPU sec, 33.843 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204508
	[0000][ M::kt_pipeline] read 1204508 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511213, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 239, 2740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7868)
[0000][PE] mean and std.dev: (1293.33, 1868.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.70, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1117, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1169.18, 716.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 338.613 CPU sec, 32.789 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204470
	[0000][ M::kt_pipeline] read 1204470 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511185, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 2089, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8504)
[0000][PE] mean and std.dev: (2047.88, 2095.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.99, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 2586, 3512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7910)
[0000][PE] mean and std.dev: (2301.77, 1511.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204508 reads in 344.363 CPU sec, 40.131 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511246, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.76, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 721, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1162.62, 1167.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204470 reads in 334.568 CPU sec, 30.711 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511208, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 267, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (561.44, 554.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.73, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1096, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (824.67, 574.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 334.637 CPU sec, 36.845 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511497, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 317, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (934.50, 1088.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.78, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1282, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1274.08, 807.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 328.803 CPU sec, 32.784 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510786, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 948, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1238.62, 1061.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.64, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1298, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6685)
[0000][PE] mean and std.dev: (1546.17, 1179.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 352.248 CPU sec, 35.181 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511175, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 2222, 4635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13405)
[0000][PE] mean and std.dev: (2981.40, 3384.63)
[0000][PE] low and high boundaries for proper pairs: (1, 17790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 332.790 CPU sec, 28.068 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511165, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.70, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1034, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (989.07, 583.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 334.933 CPU sec, 32.540 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511148, 5, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.52, 61.94)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1102, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (1261.11, 815.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 337.429 CPU sec, 28.263 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511381, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 488, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (818.25, 971.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.74, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1720, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1247.17, 953.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 332.328 CPU sec, 28.588 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511040, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 372, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (757.40, 634.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.66, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1837, 5385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14279)
[0000][PE] mean and std.dev: (3321.57, 3077.95)
[0000][PE] low and high boundaries for proper pairs: (1, 18726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 342.836 CPU sec, 33.480 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511348, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 369, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (772.83, 864.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.80, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1625, 5202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14058)
[0000][PE] mean and std.dev: (2628.13, 2504.13)
[0000][PE] low and high boundaries for proper pairs: (1, 18486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 331.033 CPU sec, 30.716 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511514, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 2061, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7816)
[0000][PE] mean and std.dev: (1569.17, 1179.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.41, 61.96)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 953, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1372.08, 1215.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 329.764 CPU sec, 30.798 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511276, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 402, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (558.20, 464.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.71, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 983, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (792.25, 572.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 338.290 CPU sec, 32.645 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511473, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 847, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (970.50, 666.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.63, 61.98)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 1395, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6360)
[0000][PE] mean and std.dev: (1766.07, 1528.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 330.369 CPU sec, 36.709 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511435, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 2528, 3431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10069)
[0000][PE] mean and std.dev: (2215.90, 2768.96)
[0000][PE] low and high boundaries for proper pairs: (1, 13388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.61, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 336.245 CPU sec, 31.324 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511284, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 740, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (509.67, 454.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.45, 61.98)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 606, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (805.85, 719.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 334.269 CPU sec, 36.349 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510948, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 492, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (811.17, 793.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.38, 61.97)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 2271, 4664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11490)
[0000][PE] mean and std.dev: (2477.55, 2084.65)
[0000][PE] low and high boundaries for proper pairs: (1, 14903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 334.077 CPU sec, 32.954 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511345, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 832, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1249.88, 1270.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.70, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1121, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5713)
[0000][PE] mean and std.dev: (1467.67, 1362.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 330.698 CPU sec, 31.409 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511386, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 544)
[0000][PE] mean and std.dev: (340.59, 62.15)
[0000][PE] low and high boundaries for proper pairs: (52, 626)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1331, 4492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11802)
[0000][PE] mean and std.dev: (2097.45, 1703.27)
[0000][PE] low and high boundaries for proper pairs: (1, 15457)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 337.303 CPU sec, 37.666 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511289, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 316, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (480.31, 414.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 793, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1152.40, 871.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 333.046 CPU sec, 31.704 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511201, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 858, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (982.00, 690.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.72, 62.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 874, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (648.88, 330.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 338.061 CPU sec, 40.881 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511582, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 295, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (561.57, 537.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.58, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1370, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (1089.69, 603.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 329.140 CPU sec, 31.770 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511477, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 260, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (457.74, 477.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.69, 62.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 867, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (853.54, 539.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 339.065 CPU sec, 32.949 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511365, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 918, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1415.20, 1471.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.97, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 777, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5651)
[0000][PE] mean and std.dev: (859.15, 662.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 340.512 CPU sec, 31.169 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510623, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 797, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (899.11, 684.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 904, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1267.60, 1219.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 343.757 CPU sec, 38.485 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510683, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 453, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5927)
[0000][PE] mean and std.dev: (883.92, 865.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 336.765 CPU sec, 28.083 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510920, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 769, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (682.55, 299.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.36, 61.94)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 1329, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5560)
[0000][PE] mean and std.dev: (1529.12, 1462.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 342.471 CPU sec, 38.335 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511647, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 357, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (508.85, 463.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.33, 62.21)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 911, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1261.60, 1067.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 336.216 CPU sec, 37.179 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512073, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 318, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1040.91, 1212.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 914, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1031.30, 828.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 337.453 CPU sec, 41.633 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511064, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 1125, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6997)
[0000][PE] mean and std.dev: (1401.62, 1407.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 338.121 CPU sec, 26.147 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511268, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1125, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7407)
[0000][PE] mean and std.dev: (1237.17, 1036.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.53, 62.18)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 336.935 CPU sec, 33.098 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511134, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 512, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (630.00, 542.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.51, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1636, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5458)
[0000][PE] mean and std.dev: (1489.54, 1021.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 339.277 CPU sec, 35.218 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511647, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 599, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (959.47, 903.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.75, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 346.842 CPU sec, 34.809 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204658
	[0000][ M::kt_pipeline] read 1204658 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511056, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 931, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6614)
[0000][PE] mean and std.dev: (1228.60, 1560.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.65, 62.25)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1252, 3083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7961)
[0000][PE] mean and std.dev: (2048.38, 1888.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 339.552 CPU sec, 31.632 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204474
	[0000][ M::kt_pipeline] read 1204474 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511047, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.45, 62.33)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1457, 3966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10520)
[0000][PE] mean and std.dev: (1918.76, 1495.29)
[0000][PE] low and high boundaries for proper pairs: (1, 13797)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204658 reads in 340.448 CPU sec, 30.324 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204322
	[0000][ M::kt_pipeline] read 1204322 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510919, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 252, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6060)
[0000][PE] mean and std.dev: (1000.27, 1260.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.32, 62.25)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 871, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8529)
[0000][PE] mean and std.dev: (1359.18, 1282.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204474 reads in 339.773 CPU sec, 28.923 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510960, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 961, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7132)
[0000][PE] mean and std.dev: (1398.06, 1540.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1591, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (2184.92, 1783.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204322 reads in 336.335 CPU sec, 29.501 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510808, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 331.750 CPU sec, 31.011 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510444, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 2525, 4528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11976)
[0000][PE] mean and std.dev: (2539.79, 1793.47)
[0000][PE] low and high boundaries for proper pairs: (1, 15700)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 339.735 CPU sec, 32.753 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510997, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 992, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1701.15, 1925.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1123, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1049.45, 928.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.822 CPU sec, 28.350 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510968, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 2532, 4128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11712)
[0000][PE] mean and std.dev: (2527.54, 2204.36)
[0000][PE] low and high boundaries for proper pairs: (1, 15504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 342.645 CPU sec, 33.952 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511571, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.26)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1188, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (1131.64, 580.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4141)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 332.360 CPU sec, 33.704 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204470
	[0000][ M::kt_pipeline] read 1204470 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511257, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 313, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1911)
[0000][PE] mean and std.dev: (425.80, 307.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.41, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 1710, 5209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15197)
[0000][PE] mean and std.dev: (2160.00, 2269.83)
[0000][PE] low and high boundaries for proper pairs: (1, 20191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 337.142 CPU sec, 31.145 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511358, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.60, 62.40)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204470 reads in 339.428 CPU sec, 36.616 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511163, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 1037, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1214.80, 1169.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (111, 976, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (878.54, 837.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 330.976 CPU sec, 29.846 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510548, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.72, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1617, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6560)
[0000][PE] mean and std.dev: (2071.45, 1305.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 342.214 CPU sec, 31.533 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510739, 7, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 760, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (875.76, 655.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 337.540 CPU sec, 46.075 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511327, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.64, 62.25)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 1143, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1057.60, 959.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 338.630 CPU sec, 39.122 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511087, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 316, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (582.54, 516.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.59, 62.29)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 1429, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6843)
[0000][PE] mean and std.dev: (1357.60, 1556.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9110)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 336.493 CPU sec, 30.085 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204474
	[0000][ M::kt_pipeline] read 1204474 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510720, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 240, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (310.44, 281.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.43, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1642, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1667.92, 1199.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 337.072 CPU sec, 31.013 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510770, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 537, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (955.50, 959.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.76, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 1186, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5676)
[0000][PE] mean and std.dev: (987.92, 743.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204474 reads in 335.996 CPU sec, 31.851 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510639, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 464, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (679.90, 423.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.74, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1490, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1511.80, 1063.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 340.562 CPU sec, 33.426 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511089, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 292, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (782.75, 797.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.53, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 338.359 CPU sec, 35.126 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511689, 5, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.30)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1171, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1202.75, 980.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 329.583 CPU sec, 40.011 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511084, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 788, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (937.50, 770.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.31)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1520, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6139)
[0000][PE] mean and std.dev: (1404.09, 1076.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 339.665 CPU sec, 35.580 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511448, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1732, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (1361.40, 1187.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 543)
[0000][PE] mean and std.dev: (341.56, 61.87)
[0000][PE] low and high boundaries for proper pairs: (57, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 905, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2366)
[0000][PE] mean and std.dev: (842.00, 505.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 337.225 CPU sec, 31.173 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511368, 9, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.67, 62.28)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 676, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (922.86, 814.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 336.473 CPU sec, 31.918 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511114, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 242, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (736.93, 893.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.79, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 733, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5895)
[0000][PE] mean and std.dev: (1194.53, 1361.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 335.228 CPU sec, 28.919 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511258, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 2202, 3808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10564)
[0000][PE] mean and std.dev: (2125.08, 1559.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.16)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 2070, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1608.50, 909.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 340.261 CPU sec, 34.842 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510836, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 572, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1078.90, 1376.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.17)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 1097, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7490)
[0000][PE] mean and std.dev: (1217.57, 1099.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 337.011 CPU sec, 39.361 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511231, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.85, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 332.162 CPU sec, 28.044 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511302, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 605, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1120.23, 1198.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.10)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 939, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1207.89, 882.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 337.070 CPU sec, 42.333 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511049, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 263, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 986)
[0000][PE] mean and std.dev: (208.50, 128.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.78, 62.40)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 951, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (949.90, 573.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 338.533 CPU sec, 42.276 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511416, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (762, 840, 3614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9318)
[0000][PE] mean and std.dev: (1455.45, 1374.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1293, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7094)
[0000][PE] mean and std.dev: (1759.17, 1622.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 342.807 CPU sec, 31.021 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511093, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 230, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1213.91, 1606.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.85, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 1232, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1089.47, 774.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 342.939 CPU sec, 40.094 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510895, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (551, 1045, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (929.71, 598.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.60, 62.35)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 994, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (864.33, 497.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 337.957 CPU sec, 31.812 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510722, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 586, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (745.92, 620.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.45, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 1734, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9497)
[0000][PE] mean and std.dev: (1980.29, 1766.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 336.374 CPU sec, 35.206 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511181, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.60, 62.27)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 345.194 CPU sec, 29.604 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511139, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 419, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (719.20, 685.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1132, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1302.31, 1074.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 331.780 CPU sec, 32.514 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511115, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 3310, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11258)
[0000][PE] mean and std.dev: (2554.30, 2048.51)
[0000][PE] low and high boundaries for proper pairs: (1, 14884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.64, 62.26)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 879, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6979)
[0000][PE] mean and std.dev: (1488.67, 1729.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 335.899 CPU sec, 36.289 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510884, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1038, 1275, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6834)
[0000][PE] mean and std.dev: (1483.00, 1283.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.56, 62.28)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1080, 6784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19530)
[0000][PE] mean and std.dev: (2523.92, 2714.34)
[0000][PE] low and high boundaries for proper pairs: (1, 25903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 337.080 CPU sec, 29.364 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510674, 0, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.72, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 975, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1351.77, 1101.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 333.061 CPU sec, 35.334 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511397, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 958, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (653.62, 472.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.78, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1363, 5369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13967)
[0000][PE] mean and std.dev: (2334.69, 2490.10)
[0000][PE] low and high boundaries for proper pairs: (1, 18266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 334.086 CPU sec, 38.236 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511719, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 452, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (454.75, 300.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.56, 62.33)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1281, 7830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22854)
[0000][PE] mean and std.dev: (2752.94, 3046.44)
[0000][PE] low and high boundaries for proper pairs: (1, 30366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 345.045 CPU sec, 38.261 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511332, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.65, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1086, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1114.10, 698.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 334.612 CPU sec, 37.010 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511631, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 694, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (830.70, 617.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.56, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1338, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1206.58, 695.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 332.665 CPU sec, 35.133 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511297, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 3050, 3289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9555)
[0000][PE] mean and std.dev: (2370.07, 2027.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.52, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 630, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (833.31, 679.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 337.709 CPU sec, 43.918 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511354, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 1549, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8472)
[0000][PE] mean and std.dev: (2286.43, 2581.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.62, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1339, 4222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10754)
[0000][PE] mean and std.dev: (2250.38, 1882.77)
[0000][PE] low and high boundaries for proper pairs: (1, 14020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 336.061 CPU sec, 32.971 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511172, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 853, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (718.06, 652.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.75, 62.27)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1151, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8145)
[0000][PE] mean and std.dev: (2017.68, 1976.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 339.844 CPU sec, 29.810 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511014, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1786, 4142, 7715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19573)
[0000][PE] mean and std.dev: (4712.36, 3350.61)
[0000][PE] low and high boundaries for proper pairs: (1, 25502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.55, 62.35)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 338.140 CPU sec, 31.157 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511092, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 905, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (797.00, 731.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.44, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 253, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (694.31, 745.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 335.058 CPU sec, 33.747 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510609, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 397, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (599.08, 521.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.43, 62.26)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1078, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1192.15, 711.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 330.947 CPU sec, 33.186 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510819, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 1418, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7435)
[0000][PE] mean and std.dev: (1585.40, 1459.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.62, 62.43)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 864, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (1092.88, 1181.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 333.889 CPU sec, 28.837 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511023, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.58, 62.26)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1489, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8600)
[0000][PE] mean and std.dev: (1626.38, 1553.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11284)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 334.114 CPU sec, 32.224 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511099, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 480, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (489.79, 384.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.54, 62.22)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 528, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (940.32, 975.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 336.347 CPU sec, 32.225 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511270, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 930, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5632)
[0000][PE] mean and std.dev: (1191.69, 989.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.42, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 547, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (920.38, 758.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 342.296 CPU sec, 36.338 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204604
	[0000][ M::kt_pipeline] read 1204604 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511422, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.43, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 1687, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1464.83, 901.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7331)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 331.885 CPU sec, 33.367 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511207, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 525, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2136)
[0000][PE] mean and std.dev: (475.45, 357.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1146, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1387.70, 1155.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204604 reads in 339.539 CPU sec, 33.350 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204378
	[0000][ M::kt_pipeline] read 1204378 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511444, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1146, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8555)
[0000][PE] mean and std.dev: (1536.29, 1368.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.50, 62.24)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 1258, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1041.20, 703.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 328.423 CPU sec, 32.586 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512010, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 297, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (763.09, 959.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.31)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1110, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1312.92, 964.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204378 reads in 338.176 CPU sec, 37.724 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510819, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (671, 1900, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (1558.80, 991.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.75, 62.26)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 334.457 CPU sec, 34.343 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511122, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1024, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (966.35, 698.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.58, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 329.654 CPU sec, 28.703 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000231 bp)...
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511041, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 416, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (968.58, 998.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 1652, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1490.50, 1061.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 336.822 CPU sec, 34.397 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 509773, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 824, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (926.65, 719.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.75, 62.25)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1446, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1582.00, 1185.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 363.872 CPU sec, 43.541 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511369, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 849, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (1168.50, 905.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 625, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (903.15, 689.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 338.210 CPU sec, 34.231 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511102, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 369, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (550.88, 470.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 310, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (544.92, 532.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 334.392 CPU sec, 28.265 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510944, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 1157, 3165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7965)
[0000][PE] mean and std.dev: (1618.38, 1164.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 1247, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (978.77, 764.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 330.285 CPU sec, 36.320 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510972, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1059, 2909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7975)
[0000][PE] mean and std.dev: (1724.50, 1909.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1276, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 2411)
[0000][PE] mean and std.dev: (1211.85, 523.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 343.010 CPU sec, 35.906 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511276, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (686, 1742, 3205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8243)
[0000][PE] mean and std.dev: (1783.69, 1267.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 1298, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (1291.53, 1024.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 333.137 CPU sec, 30.465 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511520, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1531, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1602.60, 1498.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.26)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 1103, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1131.75, 916.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 332.471 CPU sec, 32.089 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511228, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.59, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 906, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (861.18, 648.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 334.136 CPU sec, 34.668 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510694, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 1885, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1093.89, 919.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.28, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 340.031 CPU sec, 41.838 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204436
	[0000][ M::kt_pipeline] read 1204436 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511648, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.43, 62.45)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1093, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7255)
[0000][PE] mean and std.dev: (1328.75, 1038.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9468)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 335.584 CPU sec, 33.979 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511543, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 713, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1113.88, 1083.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.49, 62.22)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1461, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7160)
[0000][PE] mean and std.dev: (1927.70, 1194.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204436 reads in 333.144 CPU sec, 32.941 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510923, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 384, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (798.18, 616.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.85, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 2012, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6678)
[0000][PE] mean and std.dev: (1875.00, 1204.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 340.301 CPU sec, 47.359 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511270, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 908, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1222.22, 869.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 332.806 CPU sec, 28.068 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511731, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 447, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (506.42, 371.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.77, 62.37)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 335.283 CPU sec, 43.228 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511094, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.43, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1077, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (1149.77, 737.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 345.835 CPU sec, 36.727 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511513, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.74, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 332.212 CPU sec, 37.362 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511197, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 852, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (783.11, 591.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.62, 62.31)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1355, 1377, 3218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6944)
[0000][PE] mean and std.dev: (1934.00, 1217.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 334.938 CPU sec, 42.768 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510893, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 685, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (725.82, 445.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.47, 62.28)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 911, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (812.09, 801.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 340.813 CPU sec, 40.992 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511135, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 182, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7104)
[0000][PE] mean and std.dev: (1339.18, 1865.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.56, 62.43)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 340.847 CPU sec, 35.374 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511531, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (84, 112, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (145.55, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.61, 62.26)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 335.842 CPU sec, 32.121 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 510892, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 986, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9454)
[0000][PE] mean and std.dev: (2147.05, 2456.00)
[0000][PE] low and high boundaries for proper pairs: (1, 12519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.38, 62.17)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 2053, 4573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11703)
[0000][PE] mean and std.dev: (2242.00, 1649.09)
[0000][PE] low and high boundaries for proper pairs: (1, 15268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 332.667 CPU sec, 31.516 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510921, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 276, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (605.29, 784.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.32, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1902, 2285, 7335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18201)
[0000][PE] mean and std.dev: (3664.27, 2933.45)
[0000][PE] low and high boundaries for proper pairs: (1, 23634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 333.402 CPU sec, 32.900 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511191, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.46, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 889, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7622)
[0000][PE] mean and std.dev: (1174.59, 1126.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10025)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 330.523 CPU sec, 32.318 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511121, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.65, 62.42)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 962, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (259, 1894)
[0000][PE] mean and std.dev: (1021.09, 307.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2253)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 331.340 CPU sec, 32.168 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511844, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 889, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (656.00, 534.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.35, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 328.774 CPU sec, 31.670 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511371, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1238, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8461)
[0000][PE] mean and std.dev: (1537.67, 1402.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.59, 62.31)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 2504, 3493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8385)
[0000][PE] mean and std.dev: (2622.95, 2162.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 331.614 CPU sec, 32.542 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204448
	[0000][ M::kt_pipeline] read 1204448 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511516, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (969, 1968, 3707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9183)
[0000][PE] mean and std.dev: (2511.33, 2298.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.69, 62.45)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1138, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8465)
[0000][PE] mean and std.dev: (1844.40, 1951.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 336.373 CPU sec, 32.225 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511729, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 968, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (629.00, 382.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.79, 62.31)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 836, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (810.60, 466.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204448 reads in 334.057 CPU sec, 30.169 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511819, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 884, 3955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10801)
[0000][PE] mean and std.dev: (1994.00, 2310.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.51, 62.32)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 1087, 6570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19220)
[0000][PE] mean and std.dev: (2780.20, 2956.02)
[0000][PE] low and high boundaries for proper pairs: (1, 25545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 335.041 CPU sec, 29.679 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511420, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 367, 4616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13472)
[0000][PE] mean and std.dev: (2123.00, 3069.17)
[0000][PE] low and high boundaries for proper pairs: (1, 17900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.76, 62.47)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1508, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (1393.50, 548.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 340.165 CPU sec, 32.599 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511166, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 776, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (969.17, 835.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.50, 62.28)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 955, 5549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15619)
[0000][PE] mean and std.dev: (2477.73, 2987.39)
[0000][PE] low and high boundaries for proper pairs: (1, 20654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 333.227 CPU sec, 25.767 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511119, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 827, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1062.33, 788.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1200, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (1394.50, 1267.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 335.122 CPU sec, 35.940 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510676, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 1210, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1152.20, 1064.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 1615, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8367)
[0000][PE] mean and std.dev: (2074.19, 2067.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 339.151 CPU sec, 33.650 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511173, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.18, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 331.799 CPU sec, 35.520 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204420
	[0000][ M::kt_pipeline] read 1204420 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510980, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 674, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (1019.17, 865.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 1703, 3973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10607)
[0000][PE] mean and std.dev: (2209.50, 2221.85)
[0000][PE] low and high boundaries for proper pairs: (1, 13924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 340.601 CPU sec, 32.292 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511095, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 605, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1121.71, 1132.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1380, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (1197.24, 526.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204420 reads in 336.296 CPU sec, 33.333 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510888, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 380, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7653)
[0000][PE] mean and std.dev: (1607.00, 1840.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.36, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 994, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1215.64, 1166.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 341.794 CPU sec, 35.015 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510979, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1065, 3008, 3114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7212)
[0000][PE] mean and std.dev: (2299.64, 1204.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.67, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 342.907 CPU sec, 33.468 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511165, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 661, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (714.67, 768.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.39, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 1081, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (857.75, 337.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 338.699 CPU sec, 35.487 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511551, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 980, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (813.21, 697.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.75)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1410, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5932)
[0000][PE] mean and std.dev: (1278.36, 969.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 330.976 CPU sec, 37.386 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511318, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 334.527 CPU sec, 30.178 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510987, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.65, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 997, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1409.64, 1054.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 334.000 CPU sec, 29.400 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511252, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 702, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (928.40, 883.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.71, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 988, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2331)
[0000][PE] mean and std.dev: (848.00, 450.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 336.385 CPU sec, 33.053 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510823, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 873, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (909.21, 701.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.33, 62.83)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 336.325 CPU sec, 32.935 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511305, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (791, 955, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1241.55, 773.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 331.010 CPU sec, 35.311 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510962, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 1068, 2900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8172)
[0000][PE] mean and std.dev: (1574.35, 1537.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.60, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 832, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (615.33, 307.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 334.767 CPU sec, 32.725 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510669, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.51, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 334.317 CPU sec, 28.849 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511066, 1, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.51, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1804, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6762)
[0000][PE] mean and std.dev: (1690.44, 1474.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8934)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 330.389 CPU sec, 33.857 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510818, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 589, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (625.08, 565.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.74, 62.82)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1284, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1406.75, 1304.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 343.296 CPU sec, 32.089 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511083, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.54, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1929, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1818.90, 1029.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7335)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 339.720 CPU sec, 26.672 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511019, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 411, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7171)
[0000][PE] mean and std.dev: (1153.29, 1406.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.55, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1669, 2486, 8025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20737)
[0000][PE] mean and std.dev: (3703.00, 3334.45)
[0000][PE] low and high boundaries for proper pairs: (1, 27093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 339.308 CPU sec, 33.966 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510948, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.79, 62.81)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1295, 4993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13155)
[0000][PE] mean and std.dev: (2126.00, 1762.60)
[0000][PE] low and high boundaries for proper pairs: (1, 17236)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 339.185 CPU sec, 34.069 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510606, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 846, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5597)
[0000][PE] mean and std.dev: (1251.85, 1188.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.88, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1075, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1053.30, 491.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 329.716 CPU sec, 28.019 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511364, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 2321, 3708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10586)
[0000][PE] mean and std.dev: (1940.25, 1770.93)
[0000][PE] low and high boundaries for proper pairs: (1, 14025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.79, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 2337, 5375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14293)
[0000][PE] mean and std.dev: (3216.50, 2651.45)
[0000][PE] low and high boundaries for proper pairs: (1, 18752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 328.108 CPU sec, 32.340 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204396
	[0000][ M::kt_pipeline] read 1204396 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510818, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 913, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (986.79, 863.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.86, 62.88)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 340.529 CPU sec, 31.141 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510791, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 3453, 4849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13673)
[0000][PE] mean and std.dev: (3277.14, 3135.60)
[0000][PE] low and high boundaries for proper pairs: (1, 18085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.81, 62.88)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204396 reads in 333.000 CPU sec, 34.408 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511274, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 1689, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5996)
[0000][PE] mean and std.dev: (1554.90, 1357.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.81, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 933, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (870.56, 725.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 339.725 CPU sec, 34.099 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510595, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.92, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 1577, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5800)
[0000][PE] mean and std.dev: (1394.69, 824.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 335.188 CPU sec, 29.052 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510727, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 846, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (899.72, 632.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.71, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1695, 5118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13632)
[0000][PE] mean and std.dev: (2689.23, 2738.03)
[0000][PE] low and high boundaries for proper pairs: (1, 17889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 329.958 CPU sec, 29.361 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 510534, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.64, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 342.865 CPU sec, 32.973 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511387, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.63, 62.57)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 327.536 CPU sec, 24.506 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511389, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 986, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6316)
[0000][PE] mean and std.dev: (1060.25, 889.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.81, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 824, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (814.38, 617.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 339.500 CPU sec, 36.242 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511033, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 1072, 3390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9864)
[0000][PE] mean and std.dev: (1486.31, 1685.40)
[0000][PE] low and high boundaries for proper pairs: (1, 13101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.70, 62.75)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 342, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (948.00, 1133.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 339.285 CPU sec, 28.150 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204488
	[0000][ M::kt_pipeline] read 1204488 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511337, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 804, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (845.58, 674.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.71, 62.54)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 821, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (901.39, 555.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 340.086 CPU sec, 39.361 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511215, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 865, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9466)
[0000][PE] mean and std.dev: (1927.82, 2446.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.68, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1149, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (970.36, 374.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204488 reads in 334.170 CPU sec, 38.621 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511156, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 833, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (599.33, 473.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.64)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 331.340 CPU sec, 34.982 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511524, 9, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 1998, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8901)
[0000][PE] mean and std.dev: (1965.80, 1996.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11805)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 331.289 CPU sec, 30.251 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511267, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 241, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (449.67, 469.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1014, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1315.31, 1310.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 331.127 CPU sec, 30.544 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511319, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 889, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1363.83, 1696.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 1019, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1161.38, 908.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 329.686 CPU sec, 34.245 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510567, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 823, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5232)
[0000][PE] mean and std.dev: (686.50, 596.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.37, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1253, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (1313.11, 997.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 338.005 CPU sec, 31.721 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511567, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 656, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (654.09, 526.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1317, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1081.23, 563.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 330.999 CPU sec, 35.859 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511300, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 956, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1098.06, 966.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 817, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1250.00, 1211.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 334.811 CPU sec, 33.409 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 511146, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 996, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7876)
[0000][PE] mean and std.dev: (1434.15, 1311.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.15, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 1008, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7692)
[0000][PE] mean and std.dev: (1468.40, 1163.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 332.093 CPU sec, 32.427 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511096, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 948, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (667.54, 431.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 337.566 CPU sec, 34.734 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510998, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (840, 2015, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7995)
[0000][PE] mean and std.dev: (1947.20, 1036.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 911, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7958)
[0000][PE] mean and std.dev: (1278.77, 1229.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 334.374 CPU sec, 32.015 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510890, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (687, 1162, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1484.19, 1170.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 1122, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1515.00, 1424.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 335.984 CPU sec, 36.183 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511269, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1018, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1322.69, 792.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 343.942 CPU sec, 35.990 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204304
	[0000][ M::kt_pipeline] read 1204304 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510992, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.47)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 967, 3852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9692)
[0000][PE] mean and std.dev: (1849.85, 1649.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12612)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 331.973 CPU sec, 32.155 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511439, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 866, 3639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10435)
[0000][PE] mean and std.dev: (1359.23, 1463.14)
[0000][PE] low and high boundaries for proper pairs: (1, 13833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204304 reads in 339.141 CPU sec, 30.815 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511556, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1770, 3965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11009)
[0000][PE] mean and std.dev: (2043.18, 1668.18)
[0000][PE] low and high boundaries for proper pairs: (1, 14531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 342.436 CPU sec, 28.056 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511545, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 311, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (373.50, 292.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.54)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 335.867 CPU sec, 34.907 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510956, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 211, 5616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16494)
[0000][PE] mean and std.dev: (2001.91, 2799.22)
[0000][PE] low and high boundaries for proper pairs: (1, 21933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 341.879 CPU sec, 30.213 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511113, 6, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1060, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (1183.50, 796.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 339.780 CPU sec, 31.982 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511857, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 694, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (570.06, 504.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 779, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (680.67, 482.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 333.204 CPU sec, 33.081 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511187, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 629, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (614.47, 517.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.49)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 1414, 3354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9640)
[0000][PE] mean and std.dev: (2046.13, 2364.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 340.053 CPU sec, 37.350 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511480, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 586, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (963.46, 989.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 336.261 CPU sec, 32.118 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511291, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 968, 3094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8790)
[0000][PE] mean and std.dev: (1707.00, 2085.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.07, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 971, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (654.88, 293.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 333.069 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510637, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 450, 4706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13706)
[0000][PE] mean and std.dev: (2098.69, 2713.41)
[0000][PE] low and high boundaries for proper pairs: (1, 18206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1422, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6123)
[0000][PE] mean and std.dev: (1512.16, 1074.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 334.913 CPU sec, 31.152 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511714, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 690, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (697.69, 462.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 622, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6560)
[0000][PE] mean and std.dev: (969.90, 1105.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8713)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 802, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (964.00, 921.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 329.789 CPU sec, 27.666 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511252, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 1084, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8620)
[0000][PE] mean and std.dev: (1610.30, 1788.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.88, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1077, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (990.14, 687.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 333.395 CPU sec, 29.292 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511026, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 892, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (707.39, 410.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2113, 3197, 5294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11656)
[0000][PE] mean and std.dev: (3383.25, 2124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 14837)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 2073, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7322)
[0000][PE] mean and std.dev: (1544.10, 1057.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 338.642 CPU sec, 29.084 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511606, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 974, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9026)
[0000][PE] mean and std.dev: (1736.57, 1922.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 1118, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (940.44, 449.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 335.322 CPU sec, 30.649 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 511610, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 242, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (522.88, 553.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 332.091 CPU sec, 34.713 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511181, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 2054, 4046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11078)
[0000][PE] mean and std.dev: (2629.14, 2176.14)
[0000][PE] low and high boundaries for proper pairs: (1, 14594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.89, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.490 CPU sec, 35.454 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510978, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 338.884 CPU sec, 34.822 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511013, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 1124, 3199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9239)
[0000][PE] mean and std.dev: (1567.92, 1409.92)
[0000][PE] low and high boundaries for proper pairs: (1, 12259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.55)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 670, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (894.09, 655.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 335.846 CPU sec, 26.678 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511459, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 284, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1803)
[0000][PE] mean and std.dev: (403.20, 314.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.84, 62.46)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 798, 3154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8844)
[0000][PE] mean and std.dev: (1670.08, 1850.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 334.031 CPU sec, 39.312 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510868, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 770, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1317.87, 1383.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.92, 62.45)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1310, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1209.71, 1083.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 344.993 CPU sec, 32.007 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511257, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 526, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (663.44, 477.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.70, 62.40)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 692, 4588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13314)
[0000][PE] mean and std.dev: (2163.85, 3011.44)
[0000][PE] low and high boundaries for proper pairs: (1, 17677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 336.939 CPU sec, 24.794 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510916, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (601, 1061, 4137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11209)
[0000][PE] mean and std.dev: (2211.45, 1891.09)
[0000][PE] low and high boundaries for proper pairs: (1, 14745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.02, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1226, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1175.64, 913.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 334.780 CPU sec, 39.549 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511413, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 227, 3912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11430)
[0000][PE] mean and std.dev: (1825.94, 2162.35)
[0000][PE] low and high boundaries for proper pairs: (1, 15189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 968, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (145, 1965)
[0000][PE] mean and std.dev: (1042.06, 336.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 330.823 CPU sec, 31.282 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511741, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (924, 1279, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1411.73, 886.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1345, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6264)
[0000][PE] mean and std.dev: (1401.06, 912.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 331.319 CPU sec, 28.495 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204508
	[0000][ M::kt_pipeline] read 1204508 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510740, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 1407, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8485)
[0000][PE] mean and std.dev: (1662.67, 1474.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11213)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 337.752 CPU sec, 38.005 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511060, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (662, 944, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1282.17, 1217.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.16, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204508 reads in 332.679 CPU sec, 27.684 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511096, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 292, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (751.54, 916.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.04, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1122, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (1130.46, 648.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 346.225 CPU sec, 31.384 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511562, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1265, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1729.71, 1392.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 331.459 CPU sec, 33.122 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511490, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1119, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1178.36, 850.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1231, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8157)
[0000][PE] mean and std.dev: (1227.56, 1067.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 337.004 CPU sec, 35.587 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510232, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 1385, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1101.85, 823.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 368.157 CPU sec, 35.621 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510833, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 878, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (666.00, 461.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 334.403 CPU sec, 32.169 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510999, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1154, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1042.11, 845.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.99, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 827, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (871.50, 643.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 334.508 CPU sec, 35.316 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511613, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 688, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (604.27, 531.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 1032, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1198.86, 1023.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 338.259 CPU sec, 31.775 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511345, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.96, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1539, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1300.55, 726.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 329.374 CPU sec, 32.913 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510983, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.79, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 632, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (945.00, 690.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 333.976 CPU sec, 34.320 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511773, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 265, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6735)
[0000][PE] mean and std.dev: (875.00, 990.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.83, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 1864, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1109.50, 940.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 326.583 CPU sec, 35.635 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511542, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1127, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1116.71, 735.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 793, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (774.89, 421.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 327.577 CPU sec, 30.569 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511369, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 251, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (403.06, 333.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.91, 62.49)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 979, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (817.42, 372.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 330.008 CPU sec, 31.548 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511358, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.96, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 300, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (998.60, 1076.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 334.700 CPU sec, 33.376 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204554
	[0000][ M::kt_pipeline] read 1204554 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511184, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (662, 847, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1033.00, 729.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1278, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (1379.00, 1074.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 331.664 CPU sec, 33.997 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204554
	[0000][ M::kt_pipeline] read 1204554 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511573, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.07, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 928, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6754)
[0000][PE] mean and std.dev: (1639.27, 1452.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204554 reads in 327.893 CPU sec, 33.545 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510966, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 597, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5812)
[0000][PE] mean and std.dev: (771.94, 752.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1303, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (1647.92, 1463.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204554 reads in 335.043 CPU sec, 31.130 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511254, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.19, 62.49)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1152, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (1120.15, 752.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 331.714 CPU sec, 31.609 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511426, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (668, 1115, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7409)
[0000][PE] mean and std.dev: (1545.56, 1382.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1100, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (1221.09, 567.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 331.221 CPU sec, 35.201 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204380
	[0000][ M::kt_pipeline] read 1204380 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511403, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 350, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (591.80, 462.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 329.782 CPU sec, 27.449 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511216, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.87, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1482, 3815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9689)
[0000][PE] mean and std.dev: (2375.67, 2143.17)
[0000][PE] low and high boundaries for proper pairs: (1, 12626)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204380 reads in 334.374 CPU sec, 27.312 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511206, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 402, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (666.71, 646.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 979, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (751.75, 421.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 336.767 CPU sec, 30.290 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 510917, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 860, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (699.45, 635.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.81, 62.51)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 2281, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1846.62, 1425.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 334.169 CPU sec, 32.903 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510921, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 715, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (916.60, 779.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1042, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1258.35, 1083.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 335.545 CPU sec, 33.602 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511513, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 247, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (316.87, 304.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.87, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1220, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1817.50, 1537.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 332.264 CPU sec, 30.079 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511445, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 195, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7376)
[0000][PE] mean and std.dev: (971.18, 1156.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 871, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1106.50, 782.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 330.825 CPU sec, 27.807 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510827, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 489, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1150.18, 1346.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 757, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5474)
[0000][PE] mean and std.dev: (1058.82, 911.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 340.288 CPU sec, 28.369 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511053, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 738, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5586)
[0000][PE] mean and std.dev: (1051.83, 1056.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1851, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (1865.00, 854.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 333.859 CPU sec, 23.725 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511514, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 1150, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1031.43, 764.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 972, 7421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20809)
[0000][PE] mean and std.dev: (2593.83, 3168.66)
[0000][PE] low and high boundaries for proper pairs: (1, 27503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 326.999 CPU sec, 24.301 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511386, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 334, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (389.64, 316.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.93, 62.61)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 792, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8903)
[0000][PE] mean and std.dev: (1889.74, 2382.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 334.460 CPU sec, 26.205 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511929, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 908, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1186.85, 1265.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.02, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1202, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1278.09, 780.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 331.563 CPU sec, 25.122 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510669, 9, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.83, 62.46)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 700, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1237.73, 993.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 345.468 CPU sec, 28.477 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510947, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 289, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1980)
[0000][PE] mean and std.dev: (422.62, 417.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.82, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1353, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (1354.11, 1032.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 344.389 CPU sec, 25.438 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510476, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 895, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (851.44, 524.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.10, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 920, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (779.30, 395.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 340.397 CPU sec, 28.541 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510810, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (814, 926, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (770.40, 405.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 342.598 CPU sec, 25.476 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511488, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 769, 3462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10082)
[0000][PE] mean and std.dev: (1558.82, 1804.02)
[0000][PE] low and high boundaries for proper pairs: (1, 13392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.09, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1124, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (1021.00, 528.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 336.969 CPU sec, 29.522 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511522, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (787, 1564, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1395.90, 774.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.25, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 982, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (1133.07, 877.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 364.165 CPU sec, 35.481 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510849, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 1068, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (903.93, 719.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.52)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 2086, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1609.36, 761.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 363.056 CPU sec, 35.137 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510880, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 958, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (614.00, 488.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 835, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1177.64, 1253.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 343.065 CPU sec, 28.494 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204436
	[0000][ M::kt_pipeline] read 1204436 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511040, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 1030, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1009.29, 801.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.55)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1463, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7812)
[0000][PE] mean and std.dev: (1828.21, 1341.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 337.828 CPU sec, 26.223 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511316, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1062, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7503)
[0000][PE] mean and std.dev: (1661.91, 1683.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.54)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1577, 4125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11809)
[0000][PE] mean and std.dev: (2103.27, 2232.30)
[0000][PE] low and high boundaries for proper pairs: (1, 15651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204436 reads in 340.149 CPU sec, 29.219 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511172, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1436, 2535, 3626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8006)
[0000][PE] mean and std.dev: (2578.40, 1829.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10196)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 333.344 CPU sec, 29.038 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511030, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1480, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1414.94, 1026.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.27, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 881, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (935.10, 594.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 343.356 CPU sec, 27.812 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510916, 8, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 875, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1086.00, 685.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 337.061 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 510992, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.22, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1051, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (854.67, 590.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 336.842 CPU sec, 28.611 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511154, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 385, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7964)
[0000][PE] mean and std.dev: (1454.10, 2064.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10585)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 342.276 CPU sec, 30.612 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510986, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 890, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5626)
[0000][PE] mean and std.dev: (1079.16, 942.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.33, 62.67)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 374.750 CPU sec, 37.750 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510593, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.39, 62.67)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 345.142 CPU sec, 32.699 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510910, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 1597, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6052)
[0000][PE] mean and std.dev: (1617.00, 1477.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.43, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1318, 3134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6966)
[0000][PE] mean and std.dev: (2041.18, 1580.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 341.363 CPU sec, 28.605 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510718, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 957, 3466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9914)
[0000][PE] mean and std.dev: (1935.06, 2104.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1352, 3869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9871)
[0000][PE] mean and std.dev: (2141.10, 1663.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 341.271 CPU sec, 29.002 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511287, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 363, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1350)
[0000][PE] mean and std.dev: (339.00, 288.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.31, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1314, 2325, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (2020.78, 805.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 336.291 CPU sec, 24.409 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511190, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 367, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (627.41, 494.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.71)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 335.296 CPU sec, 27.456 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511279, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 402, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (673.22, 661.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1223, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1082.40, 810.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 334.182 CPU sec, 29.420 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511055, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (783, 1215, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6426)
[0000][PE] mean and std.dev: (1744.73, 1724.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.29, 62.84)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1222, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (1201.73, 599.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 335.189 CPU sec, 26.567 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511207, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 240, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (414.69, 397.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.65, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 2070, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1706.42, 944.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 328.125 CPU sec, 25.770 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510384, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 431, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (845.69, 870.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.89)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1519, 6070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16260)
[0000][PE] mean and std.dev: (2430.17, 2280.74)
[0000][PE] low and high boundaries for proper pairs: (1, 21355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 343.286 CPU sec, 32.320 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511295, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (863, 1275, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1348.23, 973.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.86)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 981, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (1294.05, 1160.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 349.524 CPU sec, 31.526 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511284, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 286, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (594.60, 487.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.73, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 770, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1265.69, 1293.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 331.670 CPU sec, 24.867 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000242 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511241, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 524, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (585.38, 623.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.72, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1470, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7478)
[0000][PE] mean and std.dev: (1750.29, 1323.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 335.702 CPU sec, 26.532 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511514, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 826, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (1174.33, 1387.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.85, 62.75)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1295, 3059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1658.20, 1382.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 337.336 CPU sec, 28.306 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511300, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 1212, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6687)
[0000][PE] mean and std.dev: (1401.84, 1442.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.95, 62.89)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1434, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1319.74, 703.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 330.916 CPU sec, 23.794 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511452, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 528, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1262.00, 1209.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.78, 62.67)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 334.706 CPU sec, 27.419 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204604
	[0000][ M::kt_pipeline] read 1204604 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511469, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.75, 62.88)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 332.934 CPU sec, 23.980 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510870, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 282, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (669.86, 951.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.79, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 908, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1052.56, 790.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204604 reads in 332.424 CPU sec, 31.379 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510798, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 724, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (892.69, 1193.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.62, 62.91)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 871, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (1567.50, 1534.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 338.441 CPU sec, 29.644 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511076, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 972, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (763.69, 618.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1115, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (1074.42, 566.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 337.336 CPU sec, 24.847 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511089, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 1414, 3000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8524)
[0000][PE] mean and std.dev: (1743.70, 1597.43)
[0000][PE] low and high boundaries for proper pairs: (1, 11286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.66, 62.83)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 335.757 CPU sec, 25.684 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511200, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 393, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (873.30, 884.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.62, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 328.952 CPU sec, 24.184 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510969, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 849, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1268.47, 1306.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 325.173 CPU sec, 24.101 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511096, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 770, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (768.21, 749.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1464, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1345.50, 1034.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 336.405 CPU sec, 32.083 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511552, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.41, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1983, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6365)
[0000][PE] mean and std.dev: (1528.73, 919.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8229)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 338.201 CPU sec, 28.896 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510740, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.60, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 770, 4044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11204)
[0000][PE] mean and std.dev: (1874.81, 1773.04)
[0000][PE] low and high boundaries for proper pairs: (1, 14784)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 333.405 CPU sec, 24.190 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511035, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 901, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6172)
[0000][PE] mean and std.dev: (1344.25, 1275.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1115, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6770)
[0000][PE] mean and std.dev: (1508.24, 1344.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 329.697 CPU sec, 25.040 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511010, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 923, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7943)
[0000][PE] mean and std.dev: (1563.25, 1838.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.77)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1015, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1387.00, 913.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 334.532 CPU sec, 28.401 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511019, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 921, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1017.36, 852.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.66)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1069, 3411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8633)
[0000][PE] mean and std.dev: (1554.14, 1317.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 341.747 CPU sec, 27.784 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511186, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 237, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (245.92, 117.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.46, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 1519, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1293.40, 939.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 337.383 CPU sec, 27.838 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511153, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 3437, 4820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12506)
[0000][PE] mean and std.dev: (2985.92, 2211.07)
[0000][PE] low and high boundaries for proper pairs: (1, 16349)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 338.031 CPU sec, 28.940 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510915, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 393, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (720.31, 638.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.49, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 337.563 CPU sec, 28.831 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510864, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (650, 1902, 3067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7901)
[0000][PE] mean and std.dev: (1503.08, 1219.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.36, 62.44)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 340.044 CPU sec, 32.829 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511020, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1194, 3773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9889)
[0000][PE] mean and std.dev: (1610.58, 1447.80)
[0000][PE] low and high boundaries for proper pairs: (1, 12947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.47, 62.74)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1286, 5248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15034)
[0000][PE] mean and std.dev: (2458.00, 2264.06)
[0000][PE] low and high boundaries for proper pairs: (1, 19927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 340.056 CPU sec, 26.180 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511329, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 1154, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1176.06, 901.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.52, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 335.809 CPU sec, 24.416 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511661, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 623, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (680.50, 494.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.31, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 337.193 CPU sec, 30.019 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510963, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 925, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5366)
[0000][PE] mean and std.dev: (823.75, 649.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 339.529 CPU sec, 28.249 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510754, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 331, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (794.54, 918.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 2388, 5072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13314)
[0000][PE] mean and std.dev: (2792.54, 2492.42)
[0000][PE] low and high boundaries for proper pairs: (1, 17435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 334.814 CPU sec, 25.021 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511177, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 961, 4130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11986)
[0000][PE] mean and std.dev: (2302.15, 3231.40)
[0000][PE] low and high boundaries for proper pairs: (1, 15914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.63)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1734, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (2011.60, 1242.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 335.146 CPU sec, 27.606 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511374, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 393, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (570.46, 412.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.64)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 1373, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6749)
[0000][PE] mean and std.dev: (1767.65, 1860.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 339.888 CPU sec, 28.422 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204606
	[0000][ M::kt_pipeline] read 1204606 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511550, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 289, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (789.08, 946.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.54, 62.67)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 346.262 CPU sec, 30.613 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510738, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 392, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (601.15, 590.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.47)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1091, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1126.12, 783.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204606 reads in 376.601 CPU sec, 39.769 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511519, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 784, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (950.92, 931.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 341.496 CPU sec, 26.509 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511183, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 802, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6155)
[0000][PE] mean and std.dev: (1047.16, 1001.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.33, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 340.966 CPU sec, 27.411 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511239, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 1176, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (843.44, 787.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.43, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 919, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1341.22, 1397.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 337.750 CPU sec, 30.178 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511206, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.39, 62.78)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 682, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (533.75, 334.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2483)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 341.607 CPU sec, 27.701 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511415, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 769, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (641.56, 403.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.59)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1179, 4220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11420)
[0000][PE] mean and std.dev: (2066.54, 1744.69)
[0000][PE] low and high boundaries for proper pairs: (1, 15020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 335.322 CPU sec, 25.462 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510857, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 749, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8515)
[0000][PE] mean and std.dev: (1485.82, 1723.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.54)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1099, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1060.29, 662.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 331.741 CPU sec, 26.610 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511380, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.30, 62.70)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 2482, 5006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12852)
[0000][PE] mean and std.dev: (2398.83, 1672.52)
[0000][PE] low and high boundaries for proper pairs: (1, 16775)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 341.575 CPU sec, 34.810 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510767, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 951, 4635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13335)
[0000][PE] mean and std.dev: (2534.18, 3009.59)
[0000][PE] low and high boundaries for proper pairs: (1, 17685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.59)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 2188, 3550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10020)
[0000][PE] mean and std.dev: (2054.25, 1861.98)
[0000][PE] low and high boundaries for proper pairs: (1, 13255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 358.844 CPU sec, 31.853 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510881, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 309, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7428)
[0000][PE] mean and std.dev: (1128.54, 1678.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.85, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 952, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7668)
[0000][PE] mean and std.dev: (1361.46, 1111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 396.787 CPU sec, 48.601 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510772, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 794, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1121.92, 950.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.58)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 959, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6945)
[0000][PE] mean and std.dev: (1576.09, 1761.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 339.826 CPU sec, 27.316 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511279, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 806, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1024.60, 869.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.60)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1019, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5361)
[0000][PE] mean and std.dev: (1343.00, 1282.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 333.329 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511384, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 220, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1433)
[0000][PE] mean and std.dev: (339.60, 336.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 1056, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7372)
[0000][PE] mean and std.dev: (1361.23, 1169.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 334.219 CPU sec, 28.380 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510777, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.02, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1258, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (332, 2467)
[0000][PE] mean and std.dev: (1321.79, 460.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 346.916 CPU sec, 32.061 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204430
	[0000][ M::kt_pipeline] read 1204430 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511338, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1029, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6380)
[0000][PE] mean and std.dev: (1161.89, 960.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.12, 62.59)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1284, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (1252.91, 469.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 341.272 CPU sec, 30.417 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510780, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 517, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (834.08, 887.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.09, 62.49)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1120, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (1313.94, 1004.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204430 reads in 341.081 CPU sec, 28.958 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510864, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 254, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2018)
[0000][PE] mean and std.dev: (388.83, 301.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.21, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 761, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1278.79, 1231.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 343.243 CPU sec, 27.303 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511054, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.36, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1464, 2982, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6990)
[0000][PE] mean and std.dev: (2420.92, 1344.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 371.769 CPU sec, 37.166 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511675, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 851, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1179.13, 981.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.30, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1175, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1162.27, 890.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 369.207 CPU sec, 39.552 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204554
	[0000][ M::kt_pipeline] read 1204554 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510902, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.36, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1153, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7131)
[0000][PE] mean and std.dev: (1802.33, 1675.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9219)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 331.752 CPU sec, 23.951 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511248, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 424, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1172.38, 940.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.34, 62.59)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 3107, 4903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13357)
[0000][PE] mean and std.dev: (2847.06, 2254.69)
[0000][PE] low and high boundaries for proper pairs: (1, 17584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204554 reads in 340.816 CPU sec, 28.842 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511289, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.75)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1057, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (1026.00, 666.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 335.083 CPU sec, 25.860 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510933, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 386, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (820.13, 844.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.51, 62.83)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1254, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1298.30, 471.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 340.911 CPU sec, 28.351 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511648, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 616, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9066)
[0000][PE] mean and std.dev: (1846.08, 2279.71)
[0000][PE] low and high boundaries for proper pairs: (1, 11978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.07, 62.59)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1554, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (239, 2909)
[0000][PE] mean and std.dev: (1509.67, 562.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 338.196 CPU sec, 28.229 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510686, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 633, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1042.31, 1168.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.50)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1416, 3238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7674)
[0000][PE] mean and std.dev: (2024.88, 1518.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 348.027 CPU sec, 28.318 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 509752, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.24, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1394, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1635.64, 1397.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7419)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 362.696 CPU sec, 29.186 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204434
	[0000][ M::kt_pipeline] read 1204434 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511352, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 1064, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (698.53, 674.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.16, 62.69)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 365.675 CPU sec, 41.258 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511005, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 442, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1181.00, 1334.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (342.04, 62.74)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1271, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1477.32, 1242.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204434 reads in 358.766 CPU sec, 34.339 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510908, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.68)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 303, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (1098.18, 1315.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 336.384 CPU sec, 25.703 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511440, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 1464, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7825)
[0000][PE] mean and std.dev: (2068.50, 1998.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.50, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1261, 3348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8850)
[0000][PE] mean and std.dev: (2033.21, 1799.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 340.702 CPU sec, 28.969 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510936, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 607, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (821.06, 679.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1184, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (1145.89, 480.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 335.808 CPU sec, 32.962 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511122, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 500, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6871)
[0000][PE] mean and std.dev: (1340.33, 1300.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.53)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1476, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1386.38, 502.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 337.563 CPU sec, 29.370 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511249, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 1220, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (805.78, 704.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.38, 62.80)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1049, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1117.11, 789.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 337.228 CPU sec, 26.166 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511086, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 517, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (860.12, 909.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.24, 62.79)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 331.971 CPU sec, 26.191 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511113, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 831, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (745.76, 580.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.76)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 789, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (900.80, 795.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 337.724 CPU sec, 30.905 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511085, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1115, 1716, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1701.67, 1157.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.24, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1072, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (1113.73, 766.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 352.123 CPU sec, 31.225 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511219, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 1209, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5535)
[0000][PE] mean and std.dev: (1307.10, 1091.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.27, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 837, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (900.45, 747.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 364.866 CPU sec, 39.706 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510862, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 695, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (984.91, 1138.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.58)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 339.387 CPU sec, 31.470 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510660, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 890, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (889.55, 997.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.28, 62.72)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1179, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1294.70, 934.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 338.244 CPU sec, 25.447 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511306, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 285, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (618.73, 670.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.96, 62.74)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 1185, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1068.41, 705.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 335.072 CPU sec, 27.423 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511373, 2, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.15, 62.58)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 927, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7513)
[0000][PE] mean and std.dev: (1473.70, 1598.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9914)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 333.920 CPU sec, 25.768 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 511102, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 749, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1366.28, 1407.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.07, 62.61)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1216, 4485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12501)
[0000][PE] mean and std.dev: (2268.90, 2176.87)
[0000][PE] low and high boundaries for proper pairs: (1, 16509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 329.603 CPU sec, 28.177 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511186, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1095, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6743)
[0000][PE] mean and std.dev: (983.55, 969.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.73)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (843, 1517, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8295)
[0000][PE] mean and std.dev: (2228.50, 1599.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10779)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 335.109 CPU sec, 26.975 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510836, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 185, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8814)
[0000][PE] mean and std.dev: (1647.36, 2369.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.57)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 1010, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (866.06, 556.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 333.657 CPU sec, 28.810 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510888, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 815, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5474)
[0000][PE] mean and std.dev: (955.06, 823.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.19, 62.60)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1163, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (948.64, 663.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 338.170 CPU sec, 27.747 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510860, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2100, 3192, 3944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7632)
[0000][PE] mean and std.dev: (2672.09, 1364.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.45, 62.85)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1131, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (878.40, 543.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 354.721 CPU sec, 33.166 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511803, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.34, 62.92)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1131, 3589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9207)
[0000][PE] mean and std.dev: (2256.17, 2417.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12016)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 347.053 CPU sec, 31.539 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510511, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 519, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (567.46, 524.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 974, 4599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12051)
[0000][PE] mean and std.dev: (2055.47, 1820.04)
[0000][PE] low and high boundaries for proper pairs: (1, 15777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 339.349 CPU sec, 25.978 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511010, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 1002, 4366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12704)
[0000][PE] mean and std.dev: (2171.31, 2745.38)
[0000][PE] low and high boundaries for proper pairs: (1, 16873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.79, 62.43)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 658, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7248)
[0000][PE] mean and std.dev: (1281.69, 1218.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 345.000 CPU sec, 29.259 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511654, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 745, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6530)
[0000][PE] mean and std.dev: (1038.59, 957.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.98, 62.35)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 979, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6131)
[0000][PE] mean and std.dev: (1158.85, 1255.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 342.764 CPU sec, 27.741 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510994, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.13, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1147, 3411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9675)
[0000][PE] mean and std.dev: (1811.38, 1698.55)
[0000][PE] low and high boundaries for proper pairs: (1, 12807)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 337.322 CPU sec, 25.095 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510693, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1973, 4865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13395)
[0000][PE] mean and std.dev: (2256.67, 1830.47)
[0000][PE] low and high boundaries for proper pairs: (1, 17660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.02, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 936, 3411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9553)
[0000][PE] mean and std.dev: (1800.65, 1661.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 334.881 CPU sec, 23.965 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511329, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 622, 3645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10363)
[0000][PE] mean and std.dev: (2028.53, 2436.15)
[0000][PE] low and high boundaries for proper pairs: (1, 13722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 1390, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9059)
[0000][PE] mean and std.dev: (2429.22, 2732.40)
[0000][PE] low and high boundaries for proper pairs: (1, 13359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 345.777 CPU sec, 29.358 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510870, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 607, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (610.93, 547.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 345.559 CPU sec, 23.514 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510245, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1676, 3723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10665)
[0000][PE] mean and std.dev: (2188.86, 1805.62)
[0000][PE] low and high boundaries for proper pairs: (1, 14136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.81, 62.62)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 744, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (699.67, 542.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 350.059 CPU sec, 33.621 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510838, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1165, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1136.55, 804.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.76, 62.57)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 949, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1183.50, 1132.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 358.528 CPU sec, 35.360 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511109, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.79, 62.61)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 341.143 CPU sec, 30.011 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511256, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 291, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7171)
[0000][PE] mean and std.dev: (1185.75, 1493.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.04, 62.31)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 1313, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8478)
[0000][PE] mean and std.dev: (1473.87, 1151.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 346.459 CPU sec, 32.345 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511182, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.99, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 867, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1399.33, 1231.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6513)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 340.413 CPU sec, 26.818 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510902, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 668, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (686.18, 618.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1539, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8103)
[0000][PE] mean and std.dev: (1659.73, 1529.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 337.993 CPU sec, 27.046 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511446, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.95, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 742, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7873)
[0000][PE] mean and std.dev: (1475.00, 1385.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10320)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 339.325 CPU sec, 27.350 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510962, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 496, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (930.08, 875.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.48)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1496, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1284.12, 857.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 344.693 CPU sec, 26.184 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510705, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 725, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (764.07, 525.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1281, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (1403.15, 955.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 337.218 CPU sec, 29.220 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511434, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 316, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (620.27, 544.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1168, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (931.33, 524.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 351.541 CPU sec, 36.249 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511580, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1280, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1245.08, 887.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.76, 62.53)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1501, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (1268.33, 480.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 341.377 CPU sec, 30.291 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 510771, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 417, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (537.25, 470.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.66, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 2066, 5909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14801)
[0000][PE] mean and std.dev: (2968.24, 2398.25)
[0000][PE] low and high boundaries for proper pairs: (1, 19247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 346.368 CPU sec, 32.892 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511352, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 1391, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1265.69, 949.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.93, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (458, 678, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (649.33, 404.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 332.682 CPU sec, 28.451 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510764, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 345, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (634.57, 612.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.73, 62.61)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1040, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (1274.20, 833.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 349.654 CPU sec, 30.547 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510466, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 823, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (924.73, 652.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.15, 62.68)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1435, 1888, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6484)
[0000][PE] mean and std.dev: (1895.69, 1139.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 362.085 CPU sec, 30.011 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510996, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 919, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8870)
[0000][PE] mean and std.dev: (1466.92, 1397.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.01, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 781, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1007.92, 825.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 339.012 CPU sec, 29.053 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511236, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.13, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 1090, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1099.64, 990.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 338.921 CPU sec, 26.381 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511435, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 850, 4639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13347)
[0000][PE] mean and std.dev: (2388.19, 2780.63)
[0000][PE] low and high boundaries for proper pairs: (1, 17701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1447, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1335.13, 682.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 339.752 CPU sec, 29.136 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510923, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 307, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (517.25, 434.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 335.293 CPU sec, 24.746 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511263, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 848, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1104.30, 981.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.39)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 337.699 CPU sec, 29.436 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510933, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.48, 62.57)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 339.778 CPU sec, 28.492 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511726, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 220, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1958)
[0000][PE] mean and std.dev: (451.82, 432.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.30, 62.65)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 334.283 CPU sec, 25.633 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204488
	[0000][ M::kt_pipeline] read 1204488 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511657, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 811, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6457)
[0000][PE] mean and std.dev: (1263.00, 1276.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.19, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1689, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1667.59, 1271.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 337.044 CPU sec, 30.436 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510584, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.04, 62.30)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1118, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (1341.90, 861.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204488 reads in 343.328 CPU sec, 32.864 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204498
	[0000][ M::kt_pipeline] read 1204498 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510757, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 744, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5855)
[0000][PE] mean and std.dev: (1177.36, 934.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 340.542 CPU sec, 24.705 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511638, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 1174, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7723)
[0000][PE] mean and std.dev: (1393.14, 1446.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.28, 62.55)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 744, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (1357.23, 1355.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204498 reads in 331.665 CPU sec, 30.106 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511193, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 501, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1835)
[0000][PE] mean and std.dev: (385.44, 267.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.14, 62.52)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 1054, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1254.18, 1254.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 338.569 CPU sec, 25.595 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511327, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (628, 723, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1648)
[0000][PE] mean and std.dev: (729.11, 345.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.11, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 387, 4372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12808)
[0000][PE] mean and std.dev: (1846.45, 2607.39)
[0000][PE] low and high boundaries for proper pairs: (1, 17026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 864, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1136.50, 1190.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 332.244 CPU sec, 28.518 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510749, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 942, 5089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14863)
[0000][PE] mean and std.dev: (1849.46, 2186.45)
[0000][PE] low and high boundaries for proper pairs: (1, 19750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1356, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1524.00, 748.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 341.560 CPU sec, 34.524 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511246, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 413, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (606.33, 460.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.91, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1180, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1038.08, 636.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 338.400 CPU sec, 30.234 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510739, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.00, 62.45)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 332.976 CPU sec, 26.385 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510891, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 938, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (828.00, 709.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.33, 62.37)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1393, 3245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7591)
[0000][PE] mean and std.dev: (1909.50, 1162.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 337.201 CPU sec, 28.779 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511351, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1187, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (783.92, 510.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.42, 62.47)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1242, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (1370.38, 719.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 336.668 CPU sec, 32.506 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511588, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2101)
[0000][PE] mean and std.dev: (367.27, 298.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.50)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 1234, 3572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10026)
[0000][PE] mean and std.dev: (1962.41, 2162.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 337.559 CPU sec, 25.859 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510665, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 1300, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (961.10, 880.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.17, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 212, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7032)
[0000][PE] mean and std.dev: (1214.60, 1346.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9340)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1598, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6710)
[0000][PE] mean and std.dev: (1593.73, 950.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 331.548 CPU sec, 26.487 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511112, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (848, 1981, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1464.44, 1041.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.34, 62.57)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 665, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1216.73, 982.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 347.337 CPU sec, 35.817 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511288, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 1449, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8047)
[0000][PE] mean and std.dev: (1876.20, 2027.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.59, 62.40)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 337.338 CPU sec, 26.217 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511276, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 266, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1372)
[0000][PE] mean and std.dev: (280.06, 218.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.46, 62.57)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 2446, 3453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7651)
[0000][PE] mean and std.dev: (2180.14, 1169.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 336.067 CPU sec, 30.591 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511085, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 975, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (866.92, 753.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.44, 62.49)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (931, 4469, 7296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20026)
[0000][PE] mean and std.dev: (3525.25, 3066.77)
[0000][PE] low and high boundaries for proper pairs: (1, 26391)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1664, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1401.54, 785.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 332.902 CPU sec, 29.019 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511021, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 822, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7669)
[0000][PE] mean and std.dev: (1304.57, 1302.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.51)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 341.072 CPU sec, 30.654 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511037, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1397, 2929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8027)
[0000][PE] mean and std.dev: (1836.44, 1618.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.34, 62.51)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1176, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (1071.56, 493.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 338.555 CPU sec, 27.408 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510871, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 303, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6636)
[0000][PE] mean and std.dev: (1151.69, 1490.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.58, 62.61)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1870, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5646)
[0000][PE] mean and std.dev: (2029.83, 1175.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 337.661 CPU sec, 29.416 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511389, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 203, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6780)
[0000][PE] mean and std.dev: (953.42, 1132.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.62)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1139, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1707.27, 1347.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 338.154 CPU sec, 27.429 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511716, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 178, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (864.00, 1337.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 549)
[0000][PE] mean and std.dev: (342.61, 62.56)
[0000][PE] low and high boundaries for proper pairs: (51, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 646, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8647)
[0000][PE] mean and std.dev: (1608.45, 1663.45)
[0000][PE] low and high boundaries for proper pairs: (1, 11379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 339.322 CPU sec, 24.514 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510685, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1173, 1858, 4608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11478)
[0000][PE] mean and std.dev: (2817.36, 2434.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.24, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 1107, 5225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14971)
[0000][PE] mean and std.dev: (2323.85, 2235.49)
[0000][PE] low and high boundaries for proper pairs: (1, 19844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 337.598 CPU sec, 29.145 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511273, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 765, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7200)
[0000][PE] mean and std.dev: (1087.53, 1261.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.08, 62.46)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1099, 4158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10922)
[0000][PE] mean and std.dev: (2542.06, 2726.20)
[0000][PE] low and high boundaries for proper pairs: (1, 14304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 337.113 CPU sec, 25.787 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511797, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 645, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (738.00, 540.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.22, 62.22)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 831, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6461)
[0000][PE] mean and std.dev: (1249.62, 1174.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 340.522 CPU sec, 29.711 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511425, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 312, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (645.60, 771.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.20, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1348, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7800)
[0000][PE] mean and std.dev: (1638.92, 1311.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 340.260 CPU sec, 27.930 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511385, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 830, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6281)
[0000][PE] mean and std.dev: (1116.60, 919.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.06, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1124, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1070.91, 582.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 330.317 CPU sec, 26.444 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511569, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1183, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1121.77, 858.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.27, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 336.266 CPU sec, 27.506 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511238, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 758, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1103.70, 889.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.37, 62.33)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 911, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1275.25, 1010.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 334.884 CPU sec, 28.937 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511254, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 206, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (865.31, 1109.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.05, 62.42)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 756, 4681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12535)
[0000][PE] mean and std.dev: (2319.18, 2542.84)
[0000][PE] low and high boundaries for proper pairs: (1, 16462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 339.900 CPU sec, 25.714 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511126, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 915, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (862.89, 600.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.13, 62.41)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 1230, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (1147.50, 751.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 336.309 CPU sec, 27.583 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511168, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 327.991 CPU sec, 26.123 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511113, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 1341, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8630)
[0000][PE] mean and std.dev: (1963.40, 2270.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 338.099 CPU sec, 27.924 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511258, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 562, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (684.89, 428.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 340, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.18, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 337.339 CPU sec, 27.829 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511131, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 872, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (767.80, 554.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.86, 62.40)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1043, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (1335.00, 801.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 336.375 CPU sec, 32.597 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511550, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 602, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (685.61, 584.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.73, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1491, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1691.19, 1471.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 344.861 CPU sec, 27.569 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511441, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 1237, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1047.19, 924.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (342.03, 62.43)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1351, 3966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10374)
[0000][PE] mean and std.dev: (2006.00, 1832.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 331.955 CPU sec, 21.531 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511123, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 590, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (750.92, 760.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.71, 62.27)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 960, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1073.53, 833.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 339.805 CPU sec, 31.607 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511316, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.90, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 729, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (952.14, 827.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 331.767 CPU sec, 23.838 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511469, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.80, 62.45)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 873, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7967)
[0000][PE] mean and std.dev: (1552.88, 1387.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10430)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 336.160 CPU sec, 29.262 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510611, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 426, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (633.58, 547.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.36)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1284, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6213)
[0000][PE] mean and std.dev: (1415.89, 1125.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 343.899 CPU sec, 29.780 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511247, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 926, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (803.60, 595.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.43)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1261, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8035)
[0000][PE] mean and std.dev: (1723.77, 1675.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 333.555 CPU sec, 26.956 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511347, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 875, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (856.90, 675.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.23)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 991, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (1124.59, 570.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 331.566 CPU sec, 25.582 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511716, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.70, 62.40)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 887, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (907.00, 613.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 335.562 CPU sec, 30.736 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511118, 9, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.84, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1183, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1437.62, 1090.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 333.627 CPU sec, 25.297 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510900, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 420, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (963.60, 1036.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 1491, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (1174.36, 1184.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 341.206 CPU sec, 29.358 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510445, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 442, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (911.58, 855.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.80, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1267, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1114.73, 649.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 338.937 CPU sec, 29.991 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511308, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 698, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6862)
[0000][PE] mean and std.dev: (1369.75, 1189.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.68, 62.33)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1167, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7139)
[0000][PE] mean and std.dev: (1748.31, 1309.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 335.828 CPU sec, 36.118 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511197, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 250, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1780)
[0000][PE] mean and std.dev: (403.82, 418.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.97, 62.38)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (484, 1234, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1229.90, 1153.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 334.926 CPU sec, 27.186 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510741, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 269, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (664.25, 803.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1084, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7635)
[0000][PE] mean and std.dev: (1042.00, 913.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 332.115 CPU sec, 25.324 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204484
	[0000][ M::kt_pipeline] read 1204484 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511061, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 833, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (825.47, 755.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.94, 62.21)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1330, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1504.38, 927.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 333.435 CPU sec, 28.807 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511037, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.64, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 949, 3844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11134)
[0000][PE] mean and std.dev: (2178.00, 2492.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14779)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204484 reads in 336.873 CPU sec, 28.203 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511138, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 771, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1265.23, 1242.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.69, 62.25)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 910, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6292)
[0000][PE] mean and std.dev: (1041.11, 1367.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 336.234 CPU sec, 28.584 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511225, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (784, 1043, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (1050.36, 471.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.77, 62.32)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 343.485 CPU sec, 38.935 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510954, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 698, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (518.20, 534.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.68, 62.34)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 605, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (982.75, 953.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 337.166 CPU sec, 25.773 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510203, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 837, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1245.70, 1199.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.42, 62.25)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 362.600 CPU sec, 29.995 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511274, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 635, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7814)
[0000][PE] mean and std.dev: (1201.91, 1207.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.52, 62.20)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1420, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1751.00, 1119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 337.020 CPU sec, 25.447 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511153, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 953, 5426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15256)
[0000][PE] mean and std.dev: (2393.08, 3078.77)
[0000][PE] low and high boundaries for proper pairs: (1, 20171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.29, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1766, 3994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11076)
[0000][PE] mean and std.dev: (2357.73, 2032.26)
[0000][PE] low and high boundaries for proper pairs: (1, 14617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 334.912 CPU sec, 24.362 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511490, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.67, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1192, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1042.82, 589.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 342.995 CPU sec, 29.552 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510839, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.78, 62.46)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1334, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1512.30, 934.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 341.233 CPU sec, 28.989 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511243, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 944, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6212)
[0000][PE] mean and std.dev: (1193.50, 1011.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.89, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 1050, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6438)
[0000][PE] mean and std.dev: (1275.79, 1145.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 340.372 CPU sec, 27.602 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511140, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1232, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1357.42, 1395.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.80, 62.20)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 642, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6534)
[0000][PE] mean and std.dev: (1575.67, 1646.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 335.591 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204448
	[0000][ M::kt_pipeline] read 1204448 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511516, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.75, 62.53)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1207, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (1234.44, 875.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7896)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 332.115 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204380
	[0000][ M::kt_pipeline] read 1204380 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511038, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (802, 1642, 4030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10486)
[0000][PE] mean and std.dev: (2608.31, 2804.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.79, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 952, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8474)
[0000][PE] mean and std.dev: (1387.82, 1207.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204448 reads in 332.674 CPU sec, 24.082 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511559, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 451, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (764.86, 697.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.92, 62.34)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 839, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7389)
[0000][PE] mean and std.dev: (1537.00, 1722.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204380 reads in 331.890 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512039, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 447, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (577.07, 403.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.63, 62.39)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 333.402 CPU sec, 26.138 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511667, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 1983, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7919)
[0000][PE] mean and std.dev: (1558.80, 1546.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.71, 62.41)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 503, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (589.08, 387.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 337.832 CPU sec, 25.273 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511272, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (898, 980, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (1018.83, 548.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1947, 3167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7727)
[0000][PE] mean and std.dev: (1838.73, 1126.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 335.628 CPU sec, 27.487 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511470, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 314, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (645.93, 607.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.61, 62.24)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (496, 1139, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1576.52, 1302.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 338.876 CPU sec, 27.792 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511538, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (964, 1068, 3463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8461)
[0000][PE] mean and std.dev: (1543.09, 1282.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.66, 62.42)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 334.292 CPU sec, 23.766 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510885, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 719, 6092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17752)
[0000][PE] mean and std.dev: (2681.38, 2936.33)
[0000][PE] low and high boundaries for proper pairs: (1, 23582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.62, 62.36)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 2466, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7454)
[0000][PE] mean and std.dev: (2430.92, 2327.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 335.362 CPU sec, 23.418 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511558, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 1529, 3512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10122)
[0000][PE] mean and std.dev: (1941.86, 2112.08)
[0000][PE] low and high boundaries for proper pairs: (1, 13427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (300, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 546)
[0000][PE] mean and std.dev: (341.81, 62.29)
[0000][PE] low and high boundaries for proper pairs: (54, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1436, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1356.81, 766.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 331.861 CPU sec, 25.972 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204484
	[0000][ M::kt_pipeline] read 1204484 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511733, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (628, 1310, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1287.06, 995.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 548)
[0000][PE] mean and std.dev: (341.80, 62.52)
[0000][PE] low and high boundaries for proper pairs: (50, 631)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 1138, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8185)
[0000][PE] mean and std.dev: (1949.50, 2090.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 338.779 CPU sec, 25.199 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511637, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 369, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (403.67, 369.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.04, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 872, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (950.89, 548.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204484 reads in 347.649 CPU sec, 26.275 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511057, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.70, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 350.993 CPU sec, 26.338 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511457, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 432, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (773.08, 593.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1140, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1450.71, 1055.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 342.485 CPU sec, 25.158 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511318, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 532, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (885.71, 886.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 339.518 CPU sec, 27.835 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511162, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 313, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (776.81, 707.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.88, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 1693, 3820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10676)
[0000][PE] mean and std.dev: (2011.36, 2060.55)
[0000][PE] low and high boundaries for proper pairs: (1, 14104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 344.196 CPU sec, 28.220 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511656, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 848, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (868.64, 729.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.80, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1196, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1765.69, 1360.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 349.245 CPU sec, 25.336 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511378, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 595, 3622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10074)
[0000][PE] mean and std.dev: (1750.82, 2317.89)
[0000][PE] low and high boundaries for proper pairs: (1, 13300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 62.18)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 2087, 3459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8571)
[0000][PE] mean and std.dev: (2015.11, 1215.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 344.935 CPU sec, 28.426 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510999, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 329, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4858)
[0000][PE] mean and std.dev: (876.62, 898.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.75, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 333.737 CPU sec, 24.184 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510894, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 823, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (786.33, 830.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1250, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7496)
[0000][PE] mean and std.dev: (1579.31, 1156.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 342.821 CPU sec, 24.147 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510950, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1052, 3359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8851)
[0000][PE] mean and std.dev: (1973.36, 1729.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.89, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 343.198 CPU sec, 27.140 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510902, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1043, 3532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10038)
[0000][PE] mean and std.dev: (1579.60, 1402.73)
[0000][PE] low and high boundaries for proper pairs: (1, 13291)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 345.256 CPU sec, 29.188 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510642, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 893, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (862.33, 857.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.22, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 341.159 CPU sec, 30.683 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511101, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1210, 1417, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1587.08, 1096.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.96, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1151, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (908.25, 412.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 337.872 CPU sec, 26.909 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510664, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 665, 4232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12044)
[0000][PE] mean and std.dev: (1776.69, 2394.40)
[0000][PE] low and high boundaries for proper pairs: (1, 15950)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 340.208 CPU sec, 25.742 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510808, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 969, 3867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10585)
[0000][PE] mean and std.dev: (1611.40, 1554.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.98, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 714, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (635.60, 361.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 341.550 CPU sec, 25.344 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 510960, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 936, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (907.38, 746.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.95, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 741, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (765.58, 405.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 331.904 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510992, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 1082, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1318.89, 1090.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.94, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1259, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1344.00, 1358.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 335.058 CPU sec, 24.163 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 510647, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 1070, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6749)
[0000][PE] mean and std.dev: (1158.06, 1155.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.85, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 1141, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6201)
[0000][PE] mean and std.dev: (1578.50, 1639.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 340.719 CPU sec, 26.680 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510824, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 299, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (936.73, 1092.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.64, 61.88)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 1160, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1201.64, 1162.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 344.064 CPU sec, 26.795 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511111, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.81, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 458, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (502.93, 407.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 371.755 CPU sec, 27.106 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510675, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 354, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (507.60, 507.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.58, 62.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1021, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (1056.87, 612.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 357.024 CPU sec, 30.967 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204502
	[0000][ M::kt_pipeline] read 1204502 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510889, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1434, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (1504.14, 1133.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8074)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 373.998 CPU sec, 33.724 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510895, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1516, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7299)
[0000][PE] mean and std.dev: (1769.53, 1506.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.20)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 730, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1012.14, 1004.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204502 reads in 343.734 CPU sec, 27.200 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511114, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.26, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 2167, 4052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9500)
[0000][PE] mean and std.dev: (2380.69, 1869.91)
[0000][PE] low and high boundaries for proper pairs: (1, 12224)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 344.023 CPU sec, 27.152 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511333, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 455, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6797)
[0000][PE] mean and std.dev: (1119.46, 1036.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 753, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1199.27, 1124.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 346.769 CPU sec, 26.919 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511412, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 1807, 3530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10270)
[0000][PE] mean and std.dev: (1667.20, 1569.50)
[0000][PE] low and high boundaries for proper pairs: (1, 13640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.96, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 905, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1184.79, 1133.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 336.497 CPU sec, 24.617 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510701, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 713, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6204)
[0000][PE] mean and std.dev: (1222.18, 992.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 61.97)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 853, 3710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10480)
[0000][PE] mean and std.dev: (1938.30, 2314.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 347.114 CPU sec, 30.926 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511138, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 989, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7929)
[0000][PE] mean and std.dev: (1184.95, 1187.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.92, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 752, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (494.25, 384.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 340.185 CPU sec, 29.839 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510826, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1023, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7770)
[0000][PE] mean and std.dev: (1528.75, 1360.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1352, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (1162.50, 783.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 342.192 CPU sec, 27.115 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510966, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.03, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 370.894 CPU sec, 35.783 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511312, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 282, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2150)
[0000][PE] mean and std.dev: (437.07, 364.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.78, 61.85)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 356.601 CPU sec, 29.178 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204412
	[0000][ M::kt_pipeline] read 1204412 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511433, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 320, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1546)
[0000][PE] mean and std.dev: (436.50, 357.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.83, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 739, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (617.17, 484.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 347.323 CPU sec, 29.630 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511642, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 717, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8420)
[0000][PE] mean and std.dev: (1928.82, 2211.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.20, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1011, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (969.50, 429.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204412 reads in 337.489 CPU sec, 27.747 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511602, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1200, 2245, 3170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7110)
[0000][PE] mean and std.dev: (1885.09, 1293.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 334, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (410.92, 303.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 345.923 CPU sec, 26.166 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510847, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1132, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (957.40, 525.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1676, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1683.00, 986.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 348.243 CPU sec, 28.239 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511378, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 1384, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6736)
[0000][PE] mean and std.dev: (1542.31, 1460.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 339.907 CPU sec, 26.226 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511318, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 867, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (952.67, 876.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 981, 3211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9085)
[0000][PE] mean and std.dev: (1966.23, 2323.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 344.827 CPU sec, 25.856 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 510840, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 61.89)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 664, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (727.15, 559.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3399)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 345.901 CPU sec, 27.801 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511691, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (711, 1430, 3918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10332)
[0000][PE] mean and std.dev: (1979.94, 1575.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 1085, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1098.67, 1004.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 386.666 CPU sec, 38.993 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510852, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 971, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7565)
[0000][PE] mean and std.dev: (1368.65, 1328.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 827, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (1066.61, 694.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 367.763 CPU sec, 36.579 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511126, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 2304, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1460.56, 1182.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.33, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1441, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1234.92, 790.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 346.246 CPU sec, 29.652 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511124, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1047, 2096, 4429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11193)
[0000][PE] mean and std.dev: (2373.80, 2087.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.31, 62.02)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1164, 2783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1795.08, 1654.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 348.973 CPU sec, 27.155 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510847, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 669, 3576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10336)
[0000][PE] mean and std.dev: (1708.71, 2064.93)
[0000][PE] low and high boundaries for proper pairs: (1, 13716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.32, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 2050, 4236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12290)
[0000][PE] mean and std.dev: (2332.50, 1897.22)
[0000][PE] low and high boundaries for proper pairs: (1, 16317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 346.896 CPU sec, 27.769 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511095, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 841, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9367)
[0000][PE] mean and std.dev: (1527.57, 1562.95)
[0000][PE] low and high boundaries for proper pairs: (1, 12426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.12, 61.85)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 350.592 CPU sec, 27.218 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510960, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 745, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (816.50, 821.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.43, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1681, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7343)
[0000][PE] mean and std.dev: (2163.50, 1626.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 346.386 CPU sec, 28.131 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204502
	[0000][ M::kt_pipeline] read 1204502 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511848, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.16, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 344.689 CPU sec, 27.791 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 510903, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1120, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8710)
[0000][PE] mean and std.dev: (1615.00, 1713.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.25, 62.03)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1514, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5624)
[0000][PE] mean and std.dev: (1708.07, 1579.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204502 reads in 351.868 CPU sec, 27.381 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511266, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1322, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1249.50, 1166.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.09, 62.12)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1509, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6686)
[0000][PE] mean and std.dev: (1452.93, 969.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 400.239 CPU sec, 44.903 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204568
	[0000][ M::kt_pipeline] read 1204568 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511004, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 178, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8173)
[0000][PE] mean and std.dev: (1062.08, 1215.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.27, 61.95)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 335, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (867.42, 728.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 359.123 CPU sec, 32.789 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510721, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 769, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (1057.10, 1019.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 61.91)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1715, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (1484.00, 576.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204568 reads in 343.537 CPU sec, 27.879 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511094, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 836, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1092.13, 841.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.18, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 348.549 CPU sec, 29.385 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510535, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 1229, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (881.91, 746.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.30, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 1400, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5307)
[0000][PE] mean and std.dev: (1228.56, 803.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 354.007 CPU sec, 29.221 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 510726, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.95, 61.83)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1189, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1076.27, 685.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 346.681 CPU sec, 25.578 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511002, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 1011, 4031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11621)
[0000][PE] mean and std.dev: (2277.00, 3127.75)
[0000][PE] low and high boundaries for proper pairs: (1, 15416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 1268, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1141.30, 666.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 347.881 CPU sec, 28.759 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 510856, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 1027, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (636.08, 522.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.19, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 903, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (799.00, 393.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 343.757 CPU sec, 26.468 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511220, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 897, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (916.61, 876.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.17, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 688, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1285.40, 1286.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 346.393 CPU sec, 27.028 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510931, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 592, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (741.58, 674.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.14, 62.00)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1104, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (895.07, 487.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 364.571 CPU sec, 35.733 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204510
	[0000][ M::kt_pipeline] read 1204510 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511009, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 621, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (955.19, 1040.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.09, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 867, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (860.64, 641.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 352.623 CPU sec, 30.806 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 510760, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 396, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2241)
[0000][PE] mean and std.dev: (439.47, 252.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 61.96)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1832, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7138)
[0000][PE] mean and std.dev: (1968.00, 1212.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204510 reads in 338.079 CPU sec, 26.736 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511031, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.87, 61.93)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 337.954 CPU sec, 26.011 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511387, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (862, 938, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1335.85, 1066.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1129, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1768.53, 1441.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 340.953 CPU sec, 28.278 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511206, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 514, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (564.60, 402.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.15, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1200, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1158.94, 1055.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 343.954 CPU sec, 28.067 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511217, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1490, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1480.14, 1138.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.34, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1080, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1238.60, 889.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 348.038 CPU sec, 28.533 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204488
	[0000][ M::kt_pipeline] read 1204488 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 510814, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 1100, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (985.67, 652.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7017)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 342.280 CPU sec, 25.165 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510909, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 473, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1040.58, 1197.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.79, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1624, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1502.50, 986.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204488 reads in 343.416 CPU sec, 25.970 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511247, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.00, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 862, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (804.89, 599.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 358.066 CPU sec, 31.895 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511301, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1196, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (1092.55, 672.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 358.897 CPU sec, 31.384 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511189, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 453, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (563.75, 472.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.86, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 338.674 CPU sec, 25.472 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511092, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 419, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (842.55, 699.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1303, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1589.62, 1327.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 343.110 CPU sec, 26.924 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 511061, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.10, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 343.397 CPU sec, 26.151 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511136, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 479, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (972.50, 1039.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.20, 62.01)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1244, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (1179.12, 592.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 345.135 CPU sec, 28.056 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511119, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 571, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (649.73, 546.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.15, 62.19)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 846, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6949)
[0000][PE] mean and std.dev: (1220.73, 1414.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 346.559 CPU sec, 25.538 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510568, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 616, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (895.10, 827.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1640, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1422.22, 1047.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 342.210 CPU sec, 25.465 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 510848, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.09, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1265, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6382)
[0000][PE] mean and std.dev: (1285.73, 1069.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8412)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 348.488 CPU sec, 27.064 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204508
	[0000][ M::kt_pipeline] read 1204508 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511324, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 674, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (624.25, 502.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 354.880 CPU sec, 30.560 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511046, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 389, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (614.35, 629.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.01, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1801, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1297.92, 804.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204508 reads in 370.417 CPU sec, 36.575 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511793, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 883, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (795.00, 583.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.91, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 347.863 CPU sec, 29.015 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511206, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 521, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (922.89, 884.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 61.98)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 343.584 CPU sec, 26.913 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511165, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 321, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (825.33, 921.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.90, 62.04)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 339.727 CPU sec, 26.860 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510980, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 1420, 4286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11738)
[0000][PE] mean and std.dev: (2454.54, 2060.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.21, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1663, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1484.56, 744.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 346.238 CPU sec, 26.083 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 510298, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 269, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (801.27, 671.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.94, 62.08)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 951, 3739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10543)
[0000][PE] mean and std.dev: (1721.46, 1706.15)
[0000][PE] low and high boundaries for proper pairs: (1, 13945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 345.056 CPU sec, 26.624 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 510728, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 742, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1143.92, 1263.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 61.99)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1173, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (938.56, 466.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 344.053 CPU sec, 27.700 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 510860, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1559, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8605)
[0000][PE] mean and std.dev: (1897.10, 1762.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.67, 62.10)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 881, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (693.00, 356.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 346.810 CPU sec, 25.741 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511440, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.58, 61.95)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 833, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (915.77, 633.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 341.697 CPU sec, 25.391 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 510748, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.61, 62.07)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1516, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1586.29, 1138.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 356.055 CPU sec, 31.030 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511104, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 1317, 5134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14268)
[0000][PE] mean and std.dev: (2648.64, 2976.83)
[0000][PE] low and high boundaries for proper pairs: (1, 18835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.88, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 950, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (867.27, 485.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 353.526 CPU sec, 31.021 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511596, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 260, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (415.50, 451.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.57, 61.97)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1836, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1472.79, 1011.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 349.675 CPU sec, 26.112 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 510637, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 698, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (492.21, 353.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.53, 62.05)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 1142, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1104.21, 750.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 359.609 CPU sec, 25.538 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 510693, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 902, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (917.21, 594.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.86, 62.11)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1329, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1590.92, 996.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 348.699 CPU sec, 27.053 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511149, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1064, 1070, 3368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7976)
[0000][PE] mean and std.dev: (1883.60, 1897.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.84, 62.06)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 814, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1075.38, 986.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 338.743 CPU sec, 26.153 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511260, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 369, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (460.91, 370.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.97, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 1677, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6013)
[0000][PE] mean and std.dev: (1364.00, 993.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 340.510 CPU sec, 24.593 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511450, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 687, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (759.54, 656.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 334.286 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511221, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 682, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (799.21, 690.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.13, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (385, 2246, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6115)
[0000][PE] mean and std.dev: (1647.20, 1101.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8025)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 342.537 CPU sec, 27.269 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 510791, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.02, 61.90)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 860, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1098.11, 960.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 360.997 CPU sec, 29.609 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511075, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (672, 986, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (941.44, 492.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 542)
[0000][PE] mean and std.dev: (340.57, 62.03)
[0000][PE] low and high boundaries for proper pairs: (56, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 1301, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1161.60, 866.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 364.462 CPU sec, 34.264 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511794, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 257, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (683.44, 776.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.88, 62.13)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1047, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (1139.00, 755.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 345.353 CPU sec, 26.014 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511682, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 316, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8305)
[0000][PE] mean and std.dev: (1029.58, 1626.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (340.97, 62.09)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1206, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 2325)
[0000][PE] mean and std.dev: (1126.36, 435.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 341.296 CPU sec, 27.758 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511046, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 197, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (497.00, 679.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.05, 62.23)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 238, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (556.67, 658.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 345.388 CPU sec, 25.607 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511246, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.06, 62.18)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 489, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (937.27, 727.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 340.607 CPU sec, 27.853 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 146180529, nseq: 978442
	[0000][ M::kt_pipeline] read 978442 sequences (146180529 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511028, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 774, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (992.77, 846.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.07, 62.14)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 336.491 CPU sec, 23.861 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 978442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 415220, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 1078, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8350)
[0000][PE] mean and std.dev: (1781.73, 2156.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 545)
[0000][PE] mean and std.dev: (341.08, 62.16)
[0000][PE] low and high boundaries for proper pairs: (53, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 978442 reads in 271.647 CPU sec, 21.564 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.687466 MHz
Runtime profile:

	Time taken for main_mem function: 64137.97 sec

	IO times (sec) :
	Reading IO time (reads) avg: 3799.60, (3799.60, 3799.60)
	Writing IO time (SAM) avg: 6398.80, (6398.80, 6398.80)
	Reading IO time (Reference Genome) avg: 11.06, (11.06, 11.06)
	Index read time avg: 13.79, (13.79, 13.79)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 64113.04
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 64099.66, (64099.66, 64099.66)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 23172.65, (23172.65, 23172.65)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 40606.84, (40606.84, 40606.84)
		SMEM compute avg: 12146.82, (12193.42, 12094.71)
		SAL compute avg: 5898.98, (5973.83, 5830.01)
				MEM_SA avg: 2302.93, (2328.63, 2275.44)

		BSW time, avg: 15018.53, (15033.30, 14998.39)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
