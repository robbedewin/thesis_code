Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000039 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511292, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1080, 4566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13026)
[0000][PE] mean and std.dev: (1997.85, 1896.78)
[0000][PE] low and high boundaries for proper pairs: (1, 17256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.29, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1530, 3169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7787)
[0000][PE] mean and std.dev: (2171.74, 1860.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000163 bp)...
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 384.136 CPU sec, 264.594 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512083, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (707, 1209, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5828)
[0000][PE] mean and std.dev: (1445.05, 1326.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.45, 63.04)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 428, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (831.23, 687.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 367.900 CPU sec, 60.226 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511450, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 850, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (786.92, 547.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.49, 63.00)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 941, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1026.62, 768.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 353.233 CPU sec, 56.418 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511371, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (884, 1052, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (1122.76, 696.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.84, 63.09)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 1067, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1269.33, 1247.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 345.261 CPU sec, 56.258 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511784, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (755, 996, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7097)
[0000][PE] mean and std.dev: (1458.25, 1220.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.73, 63.16)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (396, 1187, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1140.89, 841.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 339.591 CPU sec, 53.602 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204832
	[0000][ M::kt_pipeline] read 1204832 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 512138, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 1429, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (1192.41, 970.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.15)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 499, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (686.15, 511.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 344.343 CPU sec, 51.292 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511757, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 684, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6035)
[0000][PE] mean and std.dev: (999.08, 980.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.18)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 806, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8145)
[0000][PE] mean and std.dev: (1894.53, 2356.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204832 reads in 347.663 CPU sec, 56.816 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511878, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 682, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (997.69, 976.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1051, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1341.15, 909.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 345.449 CPU sec, 57.764 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511591, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (966, 1136, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (176, 2151)
[0000][PE] mean and std.dev: (1018.11, 412.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.31, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1455, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1448.71, 1070.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 340.087 CPU sec, 52.588 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511707, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 538, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (819.10, 736.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.63, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 621, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1518)
[0000][PE] mean and std.dev: (525.56, 222.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 345.355 CPU sec, 63.225 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512344, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (719, 1339, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (1204.93, 918.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1220, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1451.54, 814.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 339.621 CPU sec, 59.294 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511783, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1317, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1529.20, 1375.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1339, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1199.86, 550.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 336.195 CPU sec, 54.937 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511772, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (652, 939, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (991.87, 658.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.65, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1018, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1087.58, 590.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 339.132 CPU sec, 71.527 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512288, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 353, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (519.88, 580.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1135, 4915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12995)
[0000][PE] mean and std.dev: (2352.13, 2145.81)
[0000][PE] low and high boundaries for proper pairs: (1, 17035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 334.103 CPU sec, 51.410 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511650, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 1009, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (851.90, 607.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1654, 2072, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1883.00, 884.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 337.444 CPU sec, 47.434 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511497, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 970, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1193.86, 1206.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.68, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 339.558 CPU sec, 52.233 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512610, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 696, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1027.92, 1002.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 517, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (694.73, 707.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 332.010 CPU sec, 51.745 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511805, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (803, 831, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (239, 1649)
[0000][PE] mean and std.dev: (779.89, 215.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.60, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1404, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6638)
[0000][PE] mean and std.dev: (1812.19, 1650.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 341.471 CPU sec, 49.518 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512042, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 964, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1364.35, 1436.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.64, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1207, 3708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9646)
[0000][PE] mean and std.dev: (1748.38, 1450.33)
[0000][PE] low and high boundaries for proper pairs: (1, 12615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 329.056 CPU sec, 43.142 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511718, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 974, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5800)
[0000][PE] mean and std.dev: (1262.80, 943.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.35)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (458, 863, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (872.38, 526.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 336.370 CPU sec, 52.622 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511736, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 825, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9061)
[0000][PE] mean and std.dev: (1319.70, 1654.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 616, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8241)
[0000][PE] mean and std.dev: (1444.91, 1521.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 336.956 CPU sec, 66.052 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511924, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 754, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1036.37, 937.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.00, 63.32)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1262, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1452.47, 817.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 334.579 CPU sec, 58.692 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511895, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.70, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 984, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (867.87, 554.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 338.929 CPU sec, 57.159 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204606
	[0000][ M::kt_pipeline] read 1204606 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512220, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 950, 3342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9498)
[0000][PE] mean and std.dev: (1497.56, 1491.91)
[0000][PE] low and high boundaries for proper pairs: (1, 12576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.95, 63.46)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 335.121 CPU sec, 54.778 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511745, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 1522, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5882)
[0000][PE] mean and std.dev: (1322.44, 1054.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.03, 63.35)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204606 reads in 340.003 CPU sec, 72.216 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511620, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 333, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1638)
[0000][PE] mean and std.dev: (378.50, 221.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.87, 63.36)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1075, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (890.50, 654.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 339.659 CPU sec, 59.724 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511496, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 954, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1038.57, 655.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.04, 63.49)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1083, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1046.17, 684.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 342.081 CPU sec, 61.256 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511867, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 891, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (1117.11, 1210.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.14, 63.40)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1452, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5625)
[0000][PE] mean and std.dev: (1395.27, 1080.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.857 CPU sec, 63.249 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511717, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 874, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (697.17, 387.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.05, 63.41)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 939, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1099.33, 791.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 334.718 CPU sec, 61.745 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512160, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 777, 3678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10434)
[0000][PE] mean and std.dev: (2224.86, 2470.10)
[0000][PE] low and high boundaries for proper pairs: (1, 13812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.89, 63.46)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 910, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (855.56, 508.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 330.360 CPU sec, 44.019 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511556, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 275, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (861.54, 1066.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.96, 63.46)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 1076, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7468)
[0000][PE] mean and std.dev: (1694.14, 1479.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 337.532 CPU sec, 61.814 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511134, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 255, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (784.56, 816.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.72, 63.51)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1015, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1047.26, 713.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 335.398 CPU sec, 59.084 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511697, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 448, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (820.14, 691.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (341.13, 63.62)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 884, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (840.79, 729.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 337.342 CPU sec, 55.572 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 511120, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 605, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (753.96, 714.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.73, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 2355, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6656)
[0000][PE] mean and std.dev: (1847.58, 1054.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 342.345 CPU sec, 62.414 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511227, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 966, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (890.17, 502.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.96, 63.43)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 1165, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1186.45, 1013.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 338.691 CPU sec, 57.830 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511978, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1361, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5652)
[0000][PE] mean and std.dev: (1543.06, 1052.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.88, 63.47)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1497, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1711.59, 1511.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 330.284 CPU sec, 50.374 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511391, 5, 28)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.81, 63.58)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 1040, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1241.19, 1029.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 340.314 CPU sec, 68.258 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511743, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 374, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (555.27, 446.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.85, 63.59)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1722, 3140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7982)
[0000][PE] mean and std.dev: (1863.93, 1409.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 334.478 CPU sec, 48.870 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511548, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (563, 2556, 4497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12365)
[0000][PE] mean and std.dev: (2425.95, 1815.78)
[0000][PE] low and high boundaries for proper pairs: (1, 16299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.58, 63.37)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 333.945 CPU sec, 58.843 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511868, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 931, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7175)
[0000][PE] mean and std.dev: (1558.76, 1669.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.91, 63.53)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 867, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (1025.31, 920.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 331.996 CPU sec, 53.429 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512211, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 339, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.86, 63.43)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1334, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1560.71, 1058.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 330.929 CPU sec, 55.237 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511731, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 816, 4415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12679)
[0000][PE] mean and std.dev: (1678.50, 2107.03)
[0000][PE] low and high boundaries for proper pairs: (1, 16811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.76, 63.49)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 980, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (970.07, 819.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 337.125 CPU sec, 63.253 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512227, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1087, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (890.92, 494.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.64, 63.39)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 866, 3576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9554)
[0000][PE] mean and std.dev: (1760.33, 1759.65)
[0000][PE] low and high boundaries for proper pairs: (1, 12543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 336.089 CPU sec, 66.486 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511946, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 774, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (1700.45, 2024.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.79, 63.57)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 805, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (955.65, 848.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 338.406 CPU sec, 66.198 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511845, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 722, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (878.19, 559.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.45)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 1039, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (998.00, 804.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 335.436 CPU sec, 62.857 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512079, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1018, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6994)
[0000][PE] mean and std.dev: (1642.12, 1560.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.72, 63.39)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 945, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1183.65, 773.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 341.132 CPU sec, 60.511 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511968, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 873, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1042.48, 873.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.76, 63.48)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 742, 2650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6840)
[0000][PE] mean and std.dev: (1446.42, 1461.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 344.154 CPU sec, 66.204 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511348, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 802, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7259)
[0000][PE] mean and std.dev: (1455.73, 1436.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 340.343 CPU sec, 66.056 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204474
	[0000][ M::kt_pipeline] read 1204474 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512296, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1118, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1513.87, 1500.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.69, 63.49)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 636, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (687.08, 568.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 336.010 CPU sec, 58.605 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204438
	[0000][ M::kt_pipeline] read 1204438 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511965, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 1265, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7620)
[0000][PE] mean and std.dev: (2039.71, 2181.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.65, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 821, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5870)
[0000][PE] mean and std.dev: (1249.82, 887.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204474 reads in 339.354 CPU sec, 71.248 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511721, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 929, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1198.08, 1155.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 1505, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6703)
[0000][PE] mean and std.dev: (1643.80, 1438.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204438 reads in 335.639 CPU sec, 70.577 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512145, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 1138, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (990.80, 529.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.85, 63.37)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 1056, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1186.18, 1193.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 339.225 CPU sec, 73.036 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512109, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 811, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1240.73, 1132.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.73, 63.53)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 948, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (796.00, 743.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 340.599 CPU sec, 75.799 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512177, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 1101, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8455)
[0000][PE] mean and std.dev: (1513.26, 1661.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.65, 63.44)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 853, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (883.88, 630.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 342.039 CPU sec, 82.801 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511677, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1436, 3114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8634)
[0000][PE] mean and std.dev: (2040.62, 2097.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.77, 63.51)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1101, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (1010.35, 589.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 340.364 CPU sec, 78.122 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511091, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 780, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1133.48, 998.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 985, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6155)
[0000][PE] mean and std.dev: (1355.44, 1221.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 337.701 CPU sec, 77.397 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511503, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1309, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1869.86, 1719.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8749)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 343.683 CPU sec, 80.610 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511576, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 1059, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1010.08, 922.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.67, 63.44)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 921, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7035)
[0000][PE] mean and std.dev: (1363.82, 1315.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 341.611 CPU sec, 79.102 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204502
	[0000][ M::kt_pipeline] read 1204502 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512065, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 810, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7060)
[0000][PE] mean and std.dev: (1515.70, 1652.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1029, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7819)
[0000][PE] mean and std.dev: (1383.15, 1229.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 340.331 CPU sec, 90.425 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511625, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (655, 1220, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (1410.25, 1355.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1597, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1526.79, 726.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204502 reads in 332.863 CPU sec, 64.196 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511588, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (980, 1996, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5906)
[0000][PE] mean and std.dev: (1512.76, 939.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (489, 1644, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1844.00, 1718.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 337.425 CPU sec, 73.131 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204528
	[0000][ M::kt_pipeline] read 1204528 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512180, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 1455, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (1556.06, 1427.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 339.594 CPU sec, 70.718 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204604
	[0000][ M::kt_pipeline] read 1204604 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512623, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 1456, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6884)
[0000][PE] mean and std.dev: (1471.86, 1275.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 797, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (790.35, 572.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204528 reads in 352.374 CPU sec, 71.035 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512227, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1448, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1038.27, 655.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204604 reads in 339.023 CPU sec, 73.025 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511820, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 806, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (700.33, 379.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.32)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1181, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1234.79, 783.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 337.221 CPU sec, 76.075 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511828, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 550, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (924.77, 852.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1080, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5830)
[0000][PE] mean and std.dev: (1358.25, 1104.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 336.845 CPU sec, 70.445 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512051, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1364, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8908)
[0000][PE] mean and std.dev: (1722.33, 1525.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 1201, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (858.44, 492.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 337.148 CPU sec, 71.510 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512164, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 309, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (969.73, 1031.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.35)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 2104, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1808.23, 1135.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 340.995 CPU sec, 75.219 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511950, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 999, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1428.19, 1387.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1331, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (1043.13, 557.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 338.472 CPU sec, 77.383 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511537, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 331, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (839.88, 813.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.30, 63.52)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 1083, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5335)
[0000][PE] mean and std.dev: (956.76, 721.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 335.939 CPU sec, 72.265 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511849, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 684, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (641.25, 511.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.32, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 445, 3397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9665)
[0000][PE] mean and std.dev: (1752.80, 2297.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 337.659 CPU sec, 69.354 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511840, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 984, 4930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14232)
[0000][PE] mean and std.dev: (2208.35, 2686.24)
[0000][PE] low and high boundaries for proper pairs: (1, 18883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1606, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (1522.06, 869.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 339.713 CPU sec, 73.239 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204360
	[0000][ M::kt_pipeline] read 1204360 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512239, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 989, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1273.64, 756.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 337.139 CPU sec, 73.345 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511518, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 626, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1030.17, 1178.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 727, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6089)
[0000][PE] mean and std.dev: (1059.12, 1042.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204360 reads in 338.031 CPU sec, 68.017 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511932, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 724, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (559.54, 360.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 736, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8382)
[0000][PE] mean and std.dev: (1667.83, 1914.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11065)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1477, 5532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16098)
[0000][PE] mean and std.dev: (2348.36, 2450.29)
[0000][PE] low and high boundaries for proper pairs: (1, 21381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 339.768 CPU sec, 72.594 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512111, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1214, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1267.65, 894.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.49, 62.89)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1379, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1682.12, 1338.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 348.807 CPU sec, 76.287 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512363, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 484, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (630.89, 487.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.57, 63.01)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1277, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1428.40, 870.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 350.460 CPU sec, 77.186 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511724, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.17)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1156, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (912.09, 722.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 348.094 CPU sec, 67.817 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511993, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 962, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6153)
[0000][PE] mean and std.dev: (1182.85, 1008.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1229, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6963)
[0000][PE] mean and std.dev: (1453.86, 1009.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 338.586 CPU sec, 55.741 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511441, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 521, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6570)
[0000][PE] mean and std.dev: (1048.65, 1022.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.14, 63.19)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 678, 4450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12166)
[0000][PE] mean and std.dev: (1928.92, 2373.65)
[0000][PE] low and high boundaries for proper pairs: (1, 16024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 340.397 CPU sec, 55.943 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512180, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 617, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (580.00, 467.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 975, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (997.19, 791.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 340.141 CPU sec, 61.263 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511923, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 429, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (887.17, 914.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.03)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1490, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6048)
[0000][PE] mean and std.dev: (1597.77, 1345.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 338.914 CPU sec, 56.647 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511529, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 1146, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1377.21, 1011.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 355.297 CPU sec, 71.462 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512296, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 840, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1171.26, 985.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.10, 63.02)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 642, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (867.67, 944.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 336.680 CPU sec, 61.085 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511907, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 792, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (974.71, 1009.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1864, 4441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11447)
[0000][PE] mean and std.dev: (2541.88, 1839.29)
[0000][PE] low and high boundaries for proper pairs: (1, 14950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 336.591 CPU sec, 54.214 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511684, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (814, 1632, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1310.60, 526.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1380, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5805)
[0000][PE] mean and std.dev: (1536.00, 875.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 336.026 CPU sec, 51.268 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512346, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 2819, 3478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9768)
[0000][PE] mean and std.dev: (2893.79, 2903.31)
[0000][PE] low and high boundaries for proper pairs: (1, 14507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1196, 3956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10322)
[0000][PE] mean and std.dev: (2738.64, 3301.15)
[0000][PE] low and high boundaries for proper pairs: (1, 15943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 334.308 CPU sec, 52.178 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511510, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 418, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (703.41, 608.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 2141, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1634.25, 662.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 343.719 CPU sec, 68.664 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512013, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 686, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (656.82, 492.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 1288, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (944.60, 599.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 356.468 CPU sec, 78.065 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512123, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 543, 3680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10172)
[0000][PE] mean and std.dev: (1720.08, 1842.38)
[0000][PE] low and high boundaries for proper pairs: (1, 13418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1056, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1224.84, 980.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 339.690 CPU sec, 58.396 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511710, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 947, 3537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10049)
[0000][PE] mean and std.dev: (1500.35, 1498.22)
[0000][PE] low and high boundaries for proper pairs: (1, 13305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1360, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (1185.91, 540.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.419 CPU sec, 60.067 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512066, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 752, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1096.86, 1028.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 946, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (56, 1826)
[0000][PE] mean and std.dev: (780.29, 285.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 337.687 CPU sec, 56.451 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204552
	[0000][ M::kt_pipeline] read 1204552 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512329, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 283, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2500)
[0000][PE] mean and std.dev: (630.82, 682.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1399, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1214.30, 538.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 338.484 CPU sec, 69.320 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511712, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 764, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (837.62, 762.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 1033, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (1404.84, 1191.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204552 reads in 356.744 CPU sec, 64.214 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511726, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1060, 1216, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (1067.82, 652.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 774, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1078.21, 1127.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 349.848 CPU sec, 72.666 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512147, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1106, 2070, 4070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9998)
[0000][PE] mean and std.dev: (2283.07, 1498.31)
[0000][PE] low and high boundaries for proper pairs: (1, 12962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1099, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1288.25, 968.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 339.497 CPU sec, 53.662 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511694, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 645, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (938.71, 968.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.64, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 638, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5049)
[0000][PE] mean and std.dev: (1025.85, 1085.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 340.849 CPU sec, 55.298 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511798, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1351, 1514, 4179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9835)
[0000][PE] mean and std.dev: (2185.73, 1577.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.67, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 760, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (1287.69, 976.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 355.551 CPU sec, 83.869 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 511587, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.63, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1450, 6048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15848)
[0000][PE] mean and std.dev: (3261.70, 2989.00)
[0000][PE] low and high boundaries for proper pairs: (1, 20748)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 349.776 CPU sec, 61.396 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511915, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 548, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2042)
[0000][PE] mean and std.dev: (522.00, 308.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 1094, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1116.85, 958.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 336.039 CPU sec, 62.296 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204556
	[0000][ M::kt_pipeline] read 1204556 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511746, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 1065, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1149.38, 1178.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1820, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1561.09, 1058.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 338.916 CPU sec, 54.143 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512369, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (660, 1173, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6711)
[0000][PE] mean and std.dev: (1698.67, 1496.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 1192, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1073.96, 776.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204556 reads in 341.071 CPU sec, 64.084 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204508
	[0000][ M::kt_pipeline] read 1204508 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511777, 7, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.65, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 968, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (1167.79, 771.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 344.540 CPU sec, 69.969 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511972, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1013, 1126, 3792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9350)
[0000][PE] mean and std.dev: (2405.54, 1988.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.64, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1664, 3784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9952)
[0000][PE] mean and std.dev: (2299.60, 2284.94)
[0000][PE] low and high boundaries for proper pairs: (1, 13036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204508 reads in 356.325 CPU sec, 72.121 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512305, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 439, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (792.30, 939.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.60, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1123, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6122)
[0000][PE] mean and std.dev: (1479.33, 1322.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 334.138 CPU sec, 52.316 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204542
	[0000][ M::kt_pipeline] read 1204542 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512146, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (773, 1326, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1325.44, 797.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1301, 3891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10039)
[0000][PE] mean and std.dev: (2123.05, 1866.74)
[0000][PE] low and high boundaries for proper pairs: (1, 13113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 344.481 CPU sec, 73.211 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511670, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 639, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (708.25, 538.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.63, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1008, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5473)
[0000][PE] mean and std.dev: (1406.24, 867.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204542 reads in 334.555 CPU sec, 57.859 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511862, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1368, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1124.08, 765.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1215, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (1069.14, 611.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 353.029 CPU sec, 73.413 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511936, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 611, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (673.82, 534.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1668, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1675.27, 1405.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 339.240 CPU sec, 59.581 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511606, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1144, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6706)
[0000][PE] mean and std.dev: (1254.95, 1382.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.81, 63.40)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1387, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6814)
[0000][PE] mean and std.dev: (1834.06, 1605.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 346.061 CPU sec, 67.054 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511473, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 401, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1016.05, 1118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.70, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 994, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1319.13, 1244.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 339.378 CPU sec, 56.399 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511521, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1096, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1743.74, 1862.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1370, 6808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18986)
[0000][PE] mean and std.dev: (2879.25, 2838.56)
[0000][PE] low and high boundaries for proper pairs: (1, 25075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 363.692 CPU sec, 76.090 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511548, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 910, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (824.16, 496.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.59, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (430, 1376, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1295.62, 809.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 352.208 CPU sec, 61.912 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512009, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1018, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1414.25, 1350.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.80, 63.39)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 1529, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1259.71, 686.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 353.717 CPU sec, 63.066 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512179, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 1137, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1158.00, 887.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 777, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (896.30, 782.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 342.208 CPU sec, 65.326 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511950, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 676, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (824.31, 532.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1246, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1442.92, 1087.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 332.786 CPU sec, 47.671 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511512, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1138, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7098)
[0000][PE] mean and std.dev: (1488.76, 1086.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 1196, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1074.23, 969.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 337.032 CPU sec, 53.275 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512221, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 742, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2305)
[0000][PE] mean and std.dev: (691.13, 463.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1065, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1259.06, 1005.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 336.635 CPU sec, 52.635 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512272, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 835, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (1076.92, 949.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1328, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1220.78, 340.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 335.366 CPU sec, 61.398 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511870, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 691, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (807.70, 722.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.66, 63.49)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 675, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5924)
[0000][PE] mean and std.dev: (1149.12, 1379.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 338.468 CPU sec, 68.747 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511581, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 429, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (573.31, 560.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 894, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1046.85, 683.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 351.066 CPU sec, 63.007 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512043, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1206, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1106.08, 804.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 578, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (659.89, 387.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 349.799 CPU sec, 68.473 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512124, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1212, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (709.91, 533.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 428, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7390)
[0000][PE] mean and std.dev: (1135.69, 1120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 337.576 CPU sec, 62.767 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511748, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 1378, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5518)
[0000][PE] mean and std.dev: (1171.08, 900.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 899, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6428)
[0000][PE] mean and std.dev: (1267.69, 1331.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 336.450 CPU sec, 64.604 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511340, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (685, 1163, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (842.00, 507.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 2093, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1865.70, 1143.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 338.010 CPU sec, 49.522 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512012, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (819, 1123, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1134.33, 735.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.49, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 618, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (679.41, 478.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 333.076 CPU sec, 58.682 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204658
	[0000][ M::kt_pipeline] read 1204658 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511984, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1314, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1357.28, 1187.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 933, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7512)
[0000][PE] mean and std.dev: (1798.00, 1647.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 334.795 CPU sec, 54.253 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511483, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1166, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1214.26, 996.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 781, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1099.27, 901.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204658 reads in 340.720 CPU sec, 56.023 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511987, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (706, 868, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (813.67, 445.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 673, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (551.10, 390.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 334.012 CPU sec, 51.683 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511444, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 593, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (792.00, 758.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1647, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (1541.47, 921.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 338.341 CPU sec, 47.226 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512161, 5, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 976, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1113.78, 1015.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 352.582 CPU sec, 78.350 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512046, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 870, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1277.42, 1575.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.32)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1041, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (959.27, 590.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 338.769 CPU sec, 53.670 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512135, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1218, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1119.27, 830.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 761, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1000.50, 924.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 340.475 CPU sec, 69.816 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512077, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 776, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1174.85, 1282.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (405, 1195, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6528)
[0000][PE] mean and std.dev: (1182.00, 930.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8569)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 953, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (1050.59, 677.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 334.302 CPU sec, 57.601 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511464, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.21, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1237, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1297.94, 1019.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 341.026 CPU sec, 51.842 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512065, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1368, 3010, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7347)
[0000][PE] mean and std.dev: (2770.27, 1857.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (622, 1165, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1484.24, 1167.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 335.457 CPU sec, 52.282 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511569, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (796, 1512, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1375.33, 993.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 819, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1027.89, 828.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 360.642 CPU sec, 72.576 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512076, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (731, 1091, 3671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9551)
[0000][PE] mean and std.dev: (1999.59, 1991.15)
[0000][PE] low and high boundaries for proper pairs: (1, 12491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.30, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1131, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (1055.19, 522.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 341.705 CPU sec, 52.520 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511862, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 959, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1416.29, 1469.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1775, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1592.53, 810.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 341.903 CPU sec, 74.227 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512400, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 3462, 4257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12181)
[0000][PE] mean and std.dev: (2329.50, 1873.96)
[0000][PE] low and high boundaries for proper pairs: (1, 16143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 768, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (696.36, 393.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 337.462 CPU sec, 59.240 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511990, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1631, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1553.32, 1183.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 338.602 CPU sec, 58.754 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511365, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (668, 930, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (876.86, 481.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.31, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1408, 3342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8144)
[0000][PE] mean and std.dev: (1761.15, 1420.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 337.363 CPU sec, 63.865 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512377, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 350, 3685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10581)
[0000][PE] mean and std.dev: (2000.08, 2588.38)
[0000][PE] low and high boundaries for proper pairs: (1, 14029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.47)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1377, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1161.77, 707.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 335.576 CPU sec, 63.043 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512396, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1129, 1353, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1599.75, 709.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 585, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (754.89, 582.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 358.490 CPU sec, 72.505 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511389, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1048, 3399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9297)
[0000][PE] mean and std.dev: (2163.15, 2587.84)
[0000][PE] low and high boundaries for proper pairs: (1, 12515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1696, 5366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14060)
[0000][PE] mean and std.dev: (2797.50, 2231.33)
[0000][PE] low and high boundaries for proper pairs: (1, 18407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 335.894 CPU sec, 60.547 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512135, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 657, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (908.94, 835.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 840, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1468.56, 1585.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 341.792 CPU sec, 63.170 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512072, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 866, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (752.38, 507.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 693, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (794.18, 908.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 339.046 CPU sec, 49.155 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512074, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (681, 1146, 8399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 23835)
[0000][PE] mean and std.dev: (2887.38, 3326.32)
[0000][PE] low and high boundaries for proper pairs: (1, 31553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1257, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1666.10, 1283.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 346.775 CPU sec, 57.990 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511937, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1090, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (1061.06, 703.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 339.491 CPU sec, 55.309 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512015, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (738, 1354, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1200.27, 811.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.21, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 813, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (861.44, 430.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 345.784 CPU sec, 59.467 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512110, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1987, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7602)
[0000][PE] mean and std.dev: (1970.46, 1674.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 62.87)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 970, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1451.15, 1200.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 347.559 CPU sec, 52.812 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511412, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1332, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1328.94, 1149.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.64, 62.90)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 2242, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8009)
[0000][PE] mean and std.dev: (2068.00, 1318.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 345.725 CPU sec, 66.118 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511492, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 340, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (730.94, 752.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.71, 63.00)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1129, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5490)
[0000][PE] mean and std.dev: (1309.52, 868.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 345.691 CPU sec, 56.740 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512216, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1185, 3508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9924)
[0000][PE] mean and std.dev: (1341.82, 1293.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.03, 63.17)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1196, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1370.82, 804.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 341.791 CPU sec, 63.273 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511805, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (867, 1706, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6900)
[0000][PE] mean and std.dev: (1754.05, 1154.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.83, 62.98)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 394, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1118.12, 1159.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 340.856 CPU sec, 59.691 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511275, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1438, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8306)
[0000][PE] mean and std.dev: (2091.00, 2079.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1106, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6047)
[0000][PE] mean and std.dev: (1547.75, 1559.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 341.774 CPU sec, 62.391 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511608, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 962, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1467.40, 1439.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 62.96)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 2256, 4177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9871)
[0000][PE] mean and std.dev: (2603.50, 1678.65)
[0000][PE] low and high boundaries for proper pairs: (1, 12718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 347.456 CPU sec, 64.436 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511601, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 652, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (912.80, 837.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 802, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (789.67, 537.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 342.278 CPU sec, 67.314 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511796, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1154, 1173, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1581.90, 1104.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.23, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1645, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1635.92, 1034.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 343.102 CPU sec, 72.186 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512004, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 751, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1263.00, 1097.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1306, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7465)
[0000][PE] mean and std.dev: (1632.80, 1796.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 334.892 CPU sec, 51.896 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512333, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 884, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (818.19, 486.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 971, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (958.92, 577.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 337.485 CPU sec, 68.671 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511491, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1774, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6997)
[0000][PE] mean and std.dev: (1817.41, 1787.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1353, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6020)
[0000][PE] mean and std.dev: (1651.68, 1494.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 337.700 CPU sec, 67.015 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512286, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1182, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1080.18, 748.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.60, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1898, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6947)
[0000][PE] mean and std.dev: (1634.68, 1256.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 339.214 CPU sec, 54.146 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512319, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 344, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (575.38, 531.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1831, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7242)
[0000][PE] mean and std.dev: (1693.31, 1164.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 333.826 CPU sec, 47.129 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511705, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.48, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (459, 937, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7239)
[0000][PE] mean and std.dev: (1682.00, 1703.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9499)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 359.723 CPU sec, 64.793 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512319, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 824, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7791)
[0000][PE] mean and std.dev: (1696.00, 2014.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 1207, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5829)
[0000][PE] mean and std.dev: (1474.89, 1217.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 351.117 CPU sec, 62.249 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511771, 12, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 1422, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1332.00, 996.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.30, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2160, 2241, 4229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8367)
[0000][PE] mean and std.dev: (2731.83, 1784.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10436)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 881, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (952.00, 581.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 359.010 CPU sec, 69.584 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512424, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 658, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (785.00, 667.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1166, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1252.86, 950.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 350.880 CPU sec, 70.598 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512237, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 756, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1010.81, 1068.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.07)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 2164, 5227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14281)
[0000][PE] mean and std.dev: (2890.93, 2545.00)
[0000][PE] low and high boundaries for proper pairs: (1, 18808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 343.834 CPU sec, 65.746 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511864, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 527, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (735.20, 759.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1186, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1357.31, 963.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 354.546 CPU sec, 70.948 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512363, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (688, 1649, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1332.27, 855.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 989, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6163)
[0000][PE] mean and std.dev: (1450.88, 1314.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 342.652 CPU sec, 61.746 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512444, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 424, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (758.78, 669.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 404, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (559.25, 619.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 343.298 CPU sec, 69.138 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511393, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 626, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (805.22, 624.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.59, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1400, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1558.07, 1056.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 341.535 CPU sec, 63.533 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511985, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 862, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1201.19, 1122.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1008, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6119)
[0000][PE] mean and std.dev: (1551.62, 1122.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 341.401 CPU sec, 70.158 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512177, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.68, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1340, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1206.00, 656.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 342.107 CPU sec, 66.339 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512369, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 1092, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1173.93, 934.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6831)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 338.246 CPU sec, 49.001 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511766, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 809, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1086.06, 967.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 408, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (743.89, 781.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 337.822 CPU sec, 65.174 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512500, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 186, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (861.08, 959.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1037, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1185.89, 726.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 334.992 CPU sec, 77.083 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511660, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 879, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7757)
[0000][PE] mean and std.dev: (1154.08, 1087.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.76, 63.51)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1368, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1129.88, 558.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 339.617 CPU sec, 67.835 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512142, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1071, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (874.47, 581.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.55, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 948, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1273.85, 817.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 341.764 CPU sec, 61.029 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512064, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (913, 1763, 3345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8209)
[0000][PE] mean and std.dev: (2213.53, 1699.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 942, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1339.67, 1582.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 336.614 CPU sec, 56.785 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512097, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 950, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8373)
[0000][PE] mean and std.dev: (1650.71, 2136.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.59, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 367, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (591.29, 490.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 346.118 CPU sec, 73.194 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511894, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 360, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (645.07, 551.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 879, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (956.61, 740.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 363.552 CPU sec, 82.811 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511981, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 695, 3286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9352)
[0000][PE] mean and std.dev: (1463.07, 1538.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.63, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 1759, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1592.50, 1103.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 340.391 CPU sec, 65.327 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511558, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1043, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (888.00, 637.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.67, 63.43)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 851, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8112)
[0000][PE] mean and std.dev: (1627.24, 1914.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 359.356 CPU sec, 70.895 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511535, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 1305, 4422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12174)
[0000][PE] mean and std.dev: (2162.11, 1911.71)
[0000][PE] low and high boundaries for proper pairs: (1, 16050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.44)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 806, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (838.76, 568.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 336.412 CPU sec, 48.118 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512315, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1720, 4764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13752)
[0000][PE] mean and std.dev: (2078.38, 2122.86)
[0000][PE] low and high boundaries for proper pairs: (1, 18246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1260, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6604)
[0000][PE] mean and std.dev: (2049.17, 1792.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 336.381 CPU sec, 57.815 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512164, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 545, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (619.81, 393.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.60, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1183, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (443, 1733)
[0000][PE] mean and std.dev: (1089.67, 187.71)
[0000][PE] low and high boundaries for proper pairs: (185, 1991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 336.037 CPU sec, 64.952 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204606
	[0000][ M::kt_pipeline] read 1204606 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511903, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.70, 63.43)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 2503, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8562)
[0000][PE] mean and std.dev: (2184.79, 1830.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11322)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 351.801 CPU sec, 66.827 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512022, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (713, 1251, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (1369.65, 1002.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1147, 3177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7607)
[0000][PE] mean and std.dev: (1846.06, 1568.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204606 reads in 356.288 CPU sec, 69.652 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512046, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 1013, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (865.43, 592.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 1197, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1001.75, 596.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 355.471 CPU sec, 62.193 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511648, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 548, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (635.50, 466.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.48, 63.42)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 615, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (775.88, 643.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 339.681 CPU sec, 57.937 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511980, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1473, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8369)
[0000][PE] mean and std.dev: (2005.72, 1937.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1112, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 2238)
[0000][PE] mean and std.dev: (1113.62, 291.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 343.720 CPU sec, 70.065 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511450, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 444, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (949.88, 1008.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.61, 63.40)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 412, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (765.67, 767.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 340.656 CPU sec, 69.435 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511457, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 738, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (1171.71, 1288.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 1053, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1229.93, 1066.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 361.287 CPU sec, 76.028 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511795, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1058, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1865.57, 2160.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.48, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1781, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7671)
[0000][PE] mean and std.dev: (1804.12, 1141.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 343.900 CPU sec, 66.607 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512160, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 675, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1080.77, 1250.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.79, 63.42)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 1097, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7085)
[0000][PE] mean and std.dev: (1500.12, 1660.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 359.474 CPU sec, 68.287 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 511641, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1965, 3121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7739)
[0000][PE] mean and std.dev: (2203.07, 1778.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10048)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 356.911 CPU sec, 83.312 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511993, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 627, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (983.77, 811.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1031, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1169.75, 996.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 343.446 CPU sec, 66.251 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204502
	[0000][ M::kt_pipeline] read 1204502 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511484, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1457, 3533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10171)
[0000][PE] mean and std.dev: (2035.00, 2077.37)
[0000][PE] low and high boundaries for proper pairs: (1, 13490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 665, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (1106.60, 995.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 348.069 CPU sec, 59.741 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204554
	[0000][ M::kt_pipeline] read 1204554 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512268, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1184, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (1363.57, 1212.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1132, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1153.06, 730.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204502 reads in 339.477 CPU sec, 66.911 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512606, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1100, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (815.00, 615.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.32)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1137, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1094.75, 809.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204554 reads in 346.401 CPU sec, 63.344 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511908, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (755, 1450, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1285.77, 714.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 435, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (850.33, 762.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 364.612 CPU sec, 75.281 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511891, 3, 28)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.35, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1284, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (1284.88, 682.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 344.899 CPU sec, 60.019 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511715, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1073, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5975)
[0000][PE] mean and std.dev: (1300.71, 1278.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7778)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 341.192 CPU sec, 67.079 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512672, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 463, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2165)
[0000][PE] mean and std.dev: (545.16, 473.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.49, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1501, 6232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16944)
[0000][PE] mean and std.dev: (3025.00, 3058.25)
[0000][PE] low and high boundaries for proper pairs: (1, 22300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 334.880 CPU sec, 46.854 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511716, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1011, 1365, 3896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9666)
[0000][PE] mean and std.dev: (2173.31, 2057.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 1279, 5278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15434)
[0000][PE] mean and std.dev: (2106.18, 2384.05)
[0000][PE] low and high boundaries for proper pairs: (1, 20512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 343.051 CPU sec, 64.802 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511643, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 800, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (756.90, 491.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.47)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 883, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2169)
[0000][PE] mean and std.dev: (1018.76, 444.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 340.355 CPU sec, 58.316 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511497, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 492, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (633.32, 577.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1297, 2998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7330)
[0000][PE] mean and std.dev: (2168.59, 2070.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 338.861 CPU sec, 58.444 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512168, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 583, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (820.50, 611.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1532, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6737)
[0000][PE] mean and std.dev: (1358.57, 874.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 338.904 CPU sec, 53.553 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512303, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 833, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (770.82, 830.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 748, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5632)
[0000][PE] mean and std.dev: (999.82, 802.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 337.859 CPU sec, 52.905 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511741, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 1695, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8697)
[0000][PE] mean and std.dev: (1776.17, 1289.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1205, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1127.67, 611.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 341.723 CPU sec, 57.021 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511585, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (633, 1187, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1393.70, 1000.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.22, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1205, 3278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7712)
[0000][PE] mean and std.dev: (2206.24, 2025.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 352.651 CPU sec, 63.335 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511222, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 316, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (513.06, 476.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1216, 5380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14818)
[0000][PE] mean and std.dev: (2481.31, 2413.24)
[0000][PE] low and high boundaries for proper pairs: (1, 19537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 340.873 CPU sec, 51.532 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204658
	[0000][ M::kt_pipeline] read 1204658 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512213, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 1767, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1429.22, 1437.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 936, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1113.21, 904.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 340.002 CPU sec, 51.428 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512180, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 879, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (746.88, 469.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 935, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1181.62, 1060.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204658 reads in 336.034 CPU sec, 55.753 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511773, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1089, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (1270.16, 1114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1129, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (1284.11, 709.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 340.304 CPU sec, 64.743 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512140, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 1073, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5853)
[0000][PE] mean and std.dev: (908.74, 795.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.28, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1137, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1241.70, 895.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 345.077 CPU sec, 69.087 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511903, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.38, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 815, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (1047.27, 788.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 340.094 CPU sec, 57.409 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511835, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 827, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1027.14, 1207.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1073, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1398.00, 1154.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 356.395 CPU sec, 70.575 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511640, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 1728, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1398.00, 1229.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1156, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (925.11, 598.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 340.989 CPU sec, 69.918 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511878, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 703, 3536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10136)
[0000][PE] mean and std.dev: (1857.45, 2364.54)
[0000][PE] low and high boundaries for proper pairs: (1, 13436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1601, 3551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10039)
[0000][PE] mean and std.dev: (1937.46, 1585.41)
[0000][PE] low and high boundaries for proper pairs: (1, 13283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 340.396 CPU sec, 59.389 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511620, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1666, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1407.20, 898.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 1069, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9199)
[0000][PE] mean and std.dev: (1678.29, 1528.55)
[0000][PE] low and high boundaries for proper pairs: (1, 12174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 355.292 CPU sec, 71.815 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511909, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 663, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (666.38, 519.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 927, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1188.67, 1174.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 354.717 CPU sec, 72.830 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512217, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 334, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (651.25, 633.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1095, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1427.67, 1122.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 340.655 CPU sec, 55.675 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511759, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (655, 1353, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1499.14, 1309.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.74, 63.08)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1138, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (1140.30, 886.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 342.520 CPU sec, 55.582 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511856, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.84, 63.17)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1110, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6804)
[0000][PE] mean and std.dev: (1433.84, 1368.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8929)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 350.457 CPU sec, 67.850 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511961, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 465, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1010.70, 1262.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.80, 62.91)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 284, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (610.54, 636.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 347.799 CPU sec, 70.674 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204606
	[0000][ M::kt_pipeline] read 1204606 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512074, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1227, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (919.55, 600.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.02)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 1495, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6148)
[0000][PE] mean and std.dev: (1626.29, 1298.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 338.656 CPU sec, 59.280 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512481, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (779, 1235, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6620)
[0000][PE] mean and std.dev: (1812.12, 1554.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 1040, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1136.71, 1009.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204606 reads in 334.377 CPU sec, 56.606 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511936, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 357, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (916.91, 867.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.78, 62.93)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1458, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (1514.38, 943.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 335.513 CPU sec, 64.849 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511789, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 906, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8205)
[0000][PE] mean and std.dev: (1297.29, 1145.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 740, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5743)
[0000][PE] mean and std.dev: (1096.31, 1117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 342.703 CPU sec, 73.019 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511281, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 1510, 6818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20096)
[0000][PE] mean and std.dev: (2933.08, 3299.51)
[0000][PE] low and high boundaries for proper pairs: (1, 26735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.36, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 341.520 CPU sec, 79.635 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512409, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.21)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 337.223 CPU sec, 65.791 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511798, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.07)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1626, 3508, 4130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9138)
[0000][PE] mean and std.dev: (2948.80, 1721.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11642)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 338.607 CPU sec, 63.813 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511837, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1369, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8698)
[0000][PE] mean and std.dev: (1266.83, 1072.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 884, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (807.53, 570.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 338.828 CPU sec, 60.931 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511844, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1291, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1090.50, 1015.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.05)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 339.751 CPU sec, 58.960 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512302, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 2739, 4214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12066)
[0000][PE] mean and std.dev: (2631.43, 2312.70)
[0000][PE] low and high boundaries for proper pairs: (1, 15992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.00)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1083, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1335.74, 964.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 344.409 CPU sec, 69.463 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511796, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 755, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1084.94, 1017.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 1364, 3329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9427)
[0000][PE] mean and std.dev: (1639.25, 1631.71)
[0000][PE] low and high boundaries for proper pairs: (1, 12476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 338.452 CPU sec, 55.887 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512179, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 840, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8236)
[0000][PE] mean and std.dev: (1245.62, 1293.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 1016, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (941.75, 572.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 342.028 CPU sec, 62.333 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512143, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (652, 1080, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (996.56, 501.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1172, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (1058.78, 415.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 349.151 CPU sec, 55.473 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512568, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 498, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1077.47, 1045.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1503, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7000)
[0000][PE] mean and std.dev: (1735.60, 1383.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 336.378 CPU sec, 48.494 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512060, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (635, 1134, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (973.78, 420.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 1273, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6457)
[0000][PE] mean and std.dev: (1533.40, 1119.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 358.876 CPU sec, 66.665 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511953, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 910, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (736.53, 438.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.37)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1342, 2995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7369)
[0000][PE] mean and std.dev: (1703.93, 1583.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 338.006 CPU sec, 45.621 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511604, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1013, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (978.40, 661.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.05)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 995, 3181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8169)
[0000][PE] mean and std.dev: (1829.83, 2004.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 344.427 CPU sec, 57.198 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512181, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 1293, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1206.78, 1131.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (156, 914, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6309)
[0000][PE] mean and std.dev: (1338.67, 1368.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 336.407 CPU sec, 50.577 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512519, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 577, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6494)
[0000][PE] mean and std.dev: (1337.35, 1367.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 1073, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (928.00, 599.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 341.252 CPU sec, 63.174 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512245, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 532, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (636.80, 431.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.61, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (423, 1032, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1112.00, 769.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 340.760 CPU sec, 61.701 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512370, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1633, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8377)
[0000][PE] mean and std.dev: (1716.15, 1384.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1168, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (1045.30, 661.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 337.504 CPU sec, 59.974 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512397, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (671, 997, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (954.77, 627.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.59, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 1017, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1167.93, 1080.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 340.814 CPU sec, 61.428 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512143, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1251, 2127, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1786.33, 858.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.72, 63.44)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1892, 4280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10892)
[0000][PE] mean and std.dev: (2886.62, 2920.49)
[0000][PE] low and high boundaries for proper pairs: (1, 14569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 353.599 CPU sec, 70.592 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511868, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 1248, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6045)
[0000][PE] mean and std.dev: (1065.94, 866.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1180, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1550.21, 1392.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 341.280 CPU sec, 61.699 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512082, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 340, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (668.62, 577.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 347.620 CPU sec, 68.515 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511841, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (876, 1238, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5994)
[0000][PE] mean and std.dev: (1342.67, 1101.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.06)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (116, 1224, 5707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16889)
[0000][PE] mean and std.dev: (2302.00, 2789.22)
[0000][PE] low and high boundaries for proper pairs: (1, 22480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 341.078 CPU sec, 56.944 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511653, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (702, 1717, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1559.39, 961.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.55, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 852, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2359)
[0000][PE] mean and std.dev: (822.08, 270.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 340.872 CPU sec, 53.407 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511903, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1367, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6899)
[0000][PE] mean and std.dev: (1543.39, 1527.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1293, 3336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7844)
[0000][PE] mean and std.dev: (2253.60, 2279.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 342.064 CPU sec, 70.837 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512364, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 219, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7917)
[0000][PE] mean and std.dev: (1689.09, 2166.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 1308, 4625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12827)
[0000][PE] mean and std.dev: (2075.24, 1778.42)
[0000][PE] low and high boundaries for proper pairs: (1, 16928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 338.876 CPU sec, 56.211 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511915, 7, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 988, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5461)
[0000][PE] mean and std.dev: (1345.20, 1136.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7075)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 344.917 CPU sec, 70.531 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511770, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 357, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6687)
[0000][PE] mean and std.dev: (1044.50, 1512.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.83, 63.39)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1533, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1321.14, 626.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 345.219 CPU sec, 60.737 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204856
	[0000][ M::kt_pipeline] read 1204856 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512498, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 1863, 4491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13047)
[0000][PE] mean and std.dev: (2146.58, 2145.95)
[0000][PE] low and high boundaries for proper pairs: (1, 17325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.75, 63.54)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1024, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8226)
[0000][PE] mean and std.dev: (1619.50, 1692.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 353.906 CPU sec, 59.409 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511793, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 1544, 4761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13233)
[0000][PE] mean and std.dev: (2447.25, 2363.17)
[0000][PE] low and high boundaries for proper pairs: (1, 17469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1016, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1032.95, 791.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204856 reads in 340.235 CPU sec, 61.278 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512327, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 711, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (956.81, 967.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1438, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1327.07, 664.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 342.780 CPU sec, 75.252 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511666, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (639, 1415, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (926.38, 557.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.42, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1438, 2990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8218)
[0000][PE] mean and std.dev: (1886.00, 1641.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 332.945 CPU sec, 64.473 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511616, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1231, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8096)
[0000][PE] mean and std.dev: (1637.42, 1569.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 929, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1311.90, 1097.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 338.204 CPU sec, 70.073 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511610, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 637, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (756.46, 566.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1484, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1470.29, 1021.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 338.001 CPU sec, 71.291 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512162, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 830, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (785.17, 547.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.44)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1345, 1396, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (251, 2986)
[0000][PE] mean and std.dev: (1500.62, 489.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 337.324 CPU sec, 72.852 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511851, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1124, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (843.25, 795.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 1608, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1313.71, 902.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 333.580 CPU sec, 65.187 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511914, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (891, 1301, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (1041.29, 650.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 950, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (973.47, 622.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 336.249 CPU sec, 64.791 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512282, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 430, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (475.42, 326.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 1612, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6611)
[0000][PE] mean and std.dev: (1430.26, 1078.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 339.006 CPU sec, 76.567 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204474
	[0000][ M::kt_pipeline] read 1204474 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512218, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 252, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1977)
[0000][PE] mean and std.dev: (422.64, 352.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1047, 3857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10991)
[0000][PE] mean and std.dev: (2139.91, 2529.59)
[0000][PE] low and high boundaries for proper pairs: (1, 14558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 340.321 CPU sec, 69.352 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511962, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 1397, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8535)
[0000][PE] mean and std.dev: (1696.06, 1615.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.39)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1142, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (1123.45, 543.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204474 reads in 337.927 CPU sec, 72.310 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512625, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (806, 1080, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1178.50, 949.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1214, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1486.92, 1138.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 336.765 CPU sec, 75.042 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511712, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 606, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (883.24, 773.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 852, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (810.67, 681.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 344.229 CPU sec, 76.140 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511376, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 466, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (794.50, 895.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 733, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1195.53, 1112.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 337.147 CPU sec, 71.302 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511835, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 739, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8698)
[0000][PE] mean and std.dev: (1472.67, 1356.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.48, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 2920, 4519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11025)
[0000][PE] mean and std.dev: (3091.28, 2353.59)
[0000][PE] low and high boundaries for proper pairs: (1, 14278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 332.997 CPU sec, 62.751 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 511515, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1249, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1289.68, 1190.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.37, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 774, 3157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8975)
[0000][PE] mean and std.dev: (1812.67, 2446.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 336.426 CPU sec, 67.576 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511210, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1218, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5689)
[0000][PE] mean and std.dev: (1183.08, 839.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 1187, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (1053.42, 815.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 343.062 CPU sec, 70.911 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512333, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 2319, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1485.00, 1105.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 1034, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1247.36, 1009.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 342.878 CPU sec, 70.623 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511376, 3, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.36)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 920, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1197.95, 1070.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 338.655 CPU sec, 65.536 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512274, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (899, 2529, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8135)
[0000][PE] mean and std.dev: (2355.87, 1692.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1043, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1130.70, 843.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 336.568 CPU sec, 75.982 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204658
	[0000][ M::kt_pipeline] read 1204658 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511838, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 363, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (695.43, 683.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1185, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1238.06, 536.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 355.714 CPU sec, 71.865 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511910, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 842, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2146)
[0000][PE] mean and std.dev: (764.54, 373.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 1414, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (1268.24, 1037.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204658 reads in 341.126 CPU sec, 68.738 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512096, 6, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1561, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5713)
[0000][PE] mean and std.dev: (1661.89, 1020.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7329)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 339.909 CPU sec, 76.608 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512207, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 963, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1030.85, 877.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 2040, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (2236.67, 1516.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 337.737 CPU sec, 75.250 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512020, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (728, 1007, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1374.56, 1119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1654, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6492)
[0000][PE] mean and std.dev: (1789.31, 1495.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 353.414 CPU sec, 75.393 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511487, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 494, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (650.25, 516.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.40, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 342.648 CPU sec, 81.779 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512484, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (622, 1115, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6781)
[0000][PE] mean and std.dev: (1437.30, 1417.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.43)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1146, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (1090.67, 637.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 337.754 CPU sec, 63.281 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511878, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (668, 901, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6650)
[0000][PE] mean and std.dev: (1733.63, 1664.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.37, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1501, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7224)
[0000][PE] mean and std.dev: (1843.39, 1238.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 337.988 CPU sec, 71.946 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511968, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 706, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (676.50, 408.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 338.057 CPU sec, 66.398 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511670, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 735, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (619.56, 489.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.23, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 831, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (1193.11, 1162.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 341.529 CPU sec, 74.966 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511651, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 524, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (671.94, 610.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.21, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1300, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (1565.50, 1181.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 339.159 CPU sec, 72.826 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511936, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1348, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7900)
[0000][PE] mean and std.dev: (1549.31, 1404.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 1471, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8644)
[0000][PE] mean and std.dev: (1581.81, 1338.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 338.226 CPU sec, 73.076 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204888
	[0000][ M::kt_pipeline] read 1204888 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512398, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1422, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7079)
[0000][PE] mean and std.dev: (1627.67, 1175.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 340.664 CPU sec, 75.932 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511565, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 356, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (907.56, 870.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1350, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1830.44, 1558.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204888 reads in 337.726 CPU sec, 62.752 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511813, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.42, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 342.147 CPU sec, 75.299 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511929, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 901, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (1040.62, 793.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.40)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 899, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (890.50, 656.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 341.615 CPU sec, 71.298 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511756, 2, 25)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 839, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1134.61, 1256.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 351.984 CPU sec, 68.897 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511504, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 823, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (916.81, 842.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 343.778 CPU sec, 63.622 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512304, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 702, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (765.17, 626.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 843, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (922.47, 679.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 339.150 CPU sec, 73.319 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512106, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.18)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 1283, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1131.65, 849.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 339.035 CPU sec, 61.978 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511648, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 737, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (824.07, 805.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 2112, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (2188.67, 1638.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 342.308 CPU sec, 74.877 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511404, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 853, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (971.62, 913.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.51, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1247, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1296.56, 659.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 350.175 CPU sec, 66.650 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512019, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (861, 1012, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1277.64, 805.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 62.97)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1212, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1046.31, 620.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 345.471 CPU sec, 66.105 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512149, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 677, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5174)
[0000][PE] mean and std.dev: (969.33, 960.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 345.000 CPU sec, 66.624 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511674, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (969, 1160, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1194.50, 647.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.62, 63.04)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 923, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7130)
[0000][PE] mean and std.dev: (1140.00, 1166.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 341.168 CPU sec, 72.085 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512081, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 864, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1261.47, 1405.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1097, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (947.47, 589.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 352.117 CPU sec, 67.290 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511842, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 844, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (845.12, 568.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.10, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 941, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1065.00, 674.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 344.039 CPU sec, 67.872 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512103, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (579, 886, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7092)
[0000][PE] mean and std.dev: (1406.17, 1487.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 63.04)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 346.828 CPU sec, 67.657 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512163, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (793, 1020, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1134.52, 609.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 782, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (911.07, 742.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 349.149 CPU sec, 70.066 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512095, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (590, 1192, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (1115.86, 882.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 1297, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (1540.07, 1560.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 336.953 CPU sec, 69.023 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511895, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (562, 1432, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (1455.80, 984.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 789, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8327)
[0000][PE] mean and std.dev: (1560.21, 1555.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 337.204 CPU sec, 64.526 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511831, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 490, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (1143.36, 1239.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.09)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (441, 842, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1180.36, 1013.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 337.440 CPU sec, 62.416 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512097, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 834, 3719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10037)
[0000][PE] mean and std.dev: (1922.31, 2365.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.66, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 1149, 4547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12485)
[0000][PE] mean and std.dev: (2243.50, 2449.20)
[0000][PE] low and high boundaries for proper pairs: (1, 16454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 336.625 CPU sec, 64.306 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511798, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 1714, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1391.71, 749.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 1183, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1046.29, 811.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 338.262 CPU sec, 62.008 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511361, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 883, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6040)
[0000][PE] mean and std.dev: (1466.07, 1373.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.82, 63.51)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1051, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (964.85, 573.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 337.615 CPU sec, 69.687 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511624, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (590, 1212, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7703)
[0000][PE] mean and std.dev: (1733.31, 1587.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 633, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6263)
[0000][PE] mean and std.dev: (1091.85, 1128.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 339.575 CPU sec, 72.173 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511701, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 933, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5714)
[0000][PE] mean and std.dev: (1605.50, 1528.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1022, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (1057.78, 602.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 348.617 CPU sec, 70.152 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204636
	[0000][ M::kt_pipeline] read 1204636 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511875, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1056, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (1191.44, 909.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.55, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (618, 2144, 3366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8862)
[0000][PE] mean and std.dev: (1844.75, 1584.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11610)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 869, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1091.19, 872.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 349.469 CPU sec, 70.686 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512304, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 799, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7530)
[0000][PE] mean and std.dev: (1532.21, 1572.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1555, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6458)
[0000][PE] mean and std.dev: (1664.53, 1360.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204636 reads in 336.641 CPU sec, 66.005 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512554, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1071, 1400, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1749.33, 1233.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 745, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (699.47, 379.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 337.628 CPU sec, 66.944 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512197, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 872, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1210.59, 1029.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 1864, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7976)
[0000][PE] mean and std.dev: (1643.60, 1279.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 338.503 CPU sec, 86.051 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512697, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 880, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (966.17, 861.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 1508, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7341)
[0000][PE] mean and std.dev: (1630.62, 1233.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 337.579 CPU sec, 67.942 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512219, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 560, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1222.11, 1176.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 998, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1214.17, 927.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 339.168 CPU sec, 71.577 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512283, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.38)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 852, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (819.80, 540.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 333.065 CPU sec, 60.592 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512369, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 927, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (974.64, 748.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1537, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1718.64, 1177.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 337.191 CPU sec, 75.292 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512004, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 682, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (767.58, 778.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 986, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7767)
[0000][PE] mean and std.dev: (1457.42, 1227.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 336.436 CPU sec, 77.142 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511457, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 415, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (515.50, 326.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 657, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (1025.00, 786.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 338.172 CPU sec, 63.305 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512009, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 888, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1135.50, 1015.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.57, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 970, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6476)
[0000][PE] mean and std.dev: (1465.18, 1368.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 340.736 CPU sec, 68.219 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511842, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1094, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1159.06, 995.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 335.510 CPU sec, 70.431 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511761, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 350, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (699.08, 590.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.63, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1767, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6146)
[0000][PE] mean and std.dev: (1777.81, 1107.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 353.977 CPU sec, 77.318 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512516, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1166, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5883)
[0000][PE] mean and std.dev: (1421.00, 1471.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.55, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 983, 4413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12933)
[0000][PE] mean and std.dev: (2051.08, 2454.54)
[0000][PE] low and high boundaries for proper pairs: (1, 17193)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1283, 4494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11510)
[0000][PE] mean and std.dev: (2365.86, 1988.63)
[0000][PE] low and high boundaries for proper pairs: (1, 15018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 350.917 CPU sec, 75.451 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511672, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (608, 1181, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7400)
[0000][PE] mean and std.dev: (1503.82, 1367.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.75, 63.50)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1736, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5769)
[0000][PE] mean and std.dev: (1674.94, 978.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 340.779 CPU sec, 72.505 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512218, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 754, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (818.31, 650.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 994, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (981.67, 739.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 335.780 CPU sec, 68.215 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512208, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (879, 1251, 5002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13248)
[0000][PE] mean and std.dev: (2584.00, 2629.60)
[0000][PE] low and high boundaries for proper pairs: (1, 17371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1327, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1685.94, 1396.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 341.322 CPU sec, 74.862 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512250, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1064, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1156.23, 1069.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 3003, 4477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11357)
[0000][PE] mean and std.dev: (2865.14, 1807.33)
[0000][PE] low and high boundaries for proper pairs: (1, 14797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 337.782 CPU sec, 74.341 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512196, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 803, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1002.76, 1062.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 1187, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1251.19, 1074.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 333.148 CPU sec, 80.764 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512160, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1185, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (1229.22, 1101.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.37)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (560, 2110, 3765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10175)
[0000][PE] mean and std.dev: (2391.30, 2111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 13380)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1064, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1072.38, 888.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 339.581 CPU sec, 68.004 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512052, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 253, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 533)
[0000][PE] mean and std.dev: (235.30, 68.73)
[0000][PE] low and high boundaries for proper pairs: (1, 642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1448, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7897)
[0000][PE] mean and std.dev: (1939.56, 1964.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 335.785 CPU sec, 74.840 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511760, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 652, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (974.14, 756.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 988, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1127.83, 849.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 339.710 CPU sec, 63.760 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511999, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 854, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (683.47, 501.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.72, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1266, 3689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9615)
[0000][PE] mean and std.dev: (1940.65, 2037.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 330.096 CPU sec, 54.701 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512194, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 514, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (628.05, 471.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1219, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7084)
[0000][PE] mean and std.dev: (1651.00, 1424.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 374.592 CPU sec, 63.214 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511503, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 530, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1017.71, 973.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1052, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 2069)
[0000][PE] mean and std.dev: (856.10, 358.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 340.965 CPU sec, 39.567 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512286, 1, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.62, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 749, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6206)
[0000][PE] mean and std.dev: (1393.39, 1275.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8173)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 335.723 CPU sec, 52.393 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511882, 7, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1370, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1271.38, 832.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7753)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 335.681 CPU sec, 44.130 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512122, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 684, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7150)
[0000][PE] mean and std.dev: (849.89, 814.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 305, 3565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10305)
[0000][PE] mean and std.dev: (1657.60, 1760.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 345.104 CPU sec, 56.167 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511851, 5, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 940, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6656)
[0000][PE] mean and std.dev: (1443.27, 1227.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8766)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 343.761 CPU sec, 53.236 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511936, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 681, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (742.30, 600.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 937, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6821)
[0000][PE] mean and std.dev: (1290.83, 1150.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 347.630 CPU sec, 46.688 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512040, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 694, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (901.77, 757.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6930)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 332.708 CPU sec, 47.794 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512282, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (528, 800, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7605)
[0000][PE] mean and std.dev: (1526.68, 1543.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 843, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1280.06, 1190.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 335.552 CPU sec, 50.157 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512017, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 787, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (1097.69, 880.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.31)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 366.033 CPU sec, 67.872 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511664, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 699, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (789.62, 648.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 1149, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1039.42, 769.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 351.471 CPU sec, 55.879 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512085, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1391, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1337.57, 788.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6200)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 338.850 CPU sec, 52.655 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511968, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1174, 1473, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (1469.50, 569.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1153, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1258.10, 697.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 337.475 CPU sec, 44.530 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512137, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1670, 3868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9662)
[0000][PE] mean and std.dev: (2640.05, 2588.19)
[0000][PE] low and high boundaries for proper pairs: (1, 12993)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 334.263 CPU sec, 41.901 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512009, 7, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.36, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1135, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (1071.60, 426.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 338.109 CPU sec, 54.265 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512013, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 276, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (723.23, 977.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1452, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7284)
[0000][PE] mean and std.dev: (1531.24, 1200.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 340.305 CPU sec, 53.811 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511996, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 1025, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (886.79, 566.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1201, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (1230.69, 916.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 332.539 CPU sec, 48.967 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512356, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 816, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (778.58, 641.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1033, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1407.14, 1220.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 333.527 CPU sec, 46.686 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511897, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 420, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (649.15, 520.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.30, 63.49)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 335.840 CPU sec, 50.632 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512070, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 1251, 3608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9370)
[0000][PE] mean and std.dev: (2075.94, 1935.78)
[0000][PE] low and high boundaries for proper pairs: (1, 12251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 480, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (549.45, 448.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 334.353 CPU sec, 44.143 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512135, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 483, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (652.50, 599.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 335.588 CPU sec, 48.400 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512018, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1013, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1030.19, 710.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.32)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1014, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (953.07, 828.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 334.387 CPU sec, 46.937 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511544, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1478, 3694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10294)
[0000][PE] mean and std.dev: (2268.67, 2254.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 836, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1022.50, 1133.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 331.770 CPU sec, 44.977 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512383, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1270, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1662.82, 1398.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7258)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 330.607 CPU sec, 46.179 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512135, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 837, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (803.67, 616.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1246, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (1067.87, 431.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 344.664 CPU sec, 51.455 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512433, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 336, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (709.00, 587.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 691, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (896.89, 845.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 334.152 CPU sec, 46.476 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511756, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 501, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (532.73, 409.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 600, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (624.50, 468.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 338.048 CPU sec, 46.504 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512077, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 1082, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (988.44, 783.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 629, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (650.08, 598.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 335.760 CPU sec, 54.982 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512161, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 1029, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5706)
[0000][PE] mean and std.dev: (1095.36, 1127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.00, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 1222, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (998.69, 553.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 338.149 CPU sec, 49.248 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512646, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 742, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (890.00, 693.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 799, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1002.08, 938.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 340.683 CPU sec, 55.560 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512107, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 684, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (574.70, 449.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1112, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (977.77, 562.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 342.969 CPU sec, 58.869 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512119, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 993, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8091)
[0000][PE] mean and std.dev: (1637.43, 1833.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.09, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1465, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1408.71, 905.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 338.095 CPU sec, 51.767 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511599, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 964, 3577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10135)
[0000][PE] mean and std.dev: (1490.54, 1596.06)
[0000][PE] low and high boundaries for proper pairs: (1, 13414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1216, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5693)
[0000][PE] mean and std.dev: (1354.29, 805.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 341.967 CPU sec, 50.075 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511668, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 638, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (643.82, 429.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.19)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 340.111 CPU sec, 45.059 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512102, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 1140, 3872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10842)
[0000][PE] mean and std.dev: (1746.50, 1828.94)
[0000][PE] low and high boundaries for proper pairs: (1, 14327)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 337.075 CPU sec, 52.997 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512311, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 869, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (920.33, 746.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 711, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (637.00, 362.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 333.139 CPU sec, 49.682 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512240, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 803, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (690.73, 632.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.80, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 2426, 3397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7895)
[0000][PE] mean and std.dev: (2434.90, 1743.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 340.693 CPU sec, 53.797 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511573, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.36, 62.89)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 653, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (621.62, 461.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 339.349 CPU sec, 45.102 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511681, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 394, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (690.00, 652.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.27, 62.96)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 893, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1343.92, 1114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 340.978 CPU sec, 62.933 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512243, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.48, 63.00)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1227, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1063.54, 690.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 346.906 CPU sec, 54.504 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512427, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 672, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1168.00, 1287.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.57, 62.98)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 1092, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8914)
[0000][PE] mean and std.dev: (1581.11, 1421.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 337.818 CPU sec, 54.598 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512005, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1089, 1675, 3907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9543)
[0000][PE] mean and std.dev: (2812.07, 2795.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.91, 63.07)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1484, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1266.88, 753.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 349.585 CPU sec, 57.196 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512237, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 946, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8930)
[0000][PE] mean and std.dev: (1956.91, 2251.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.09)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 944, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (769.09, 508.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 341.210 CPU sec, 56.272 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512062, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (746, 1350, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1308.07, 870.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.22, 63.12)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 1289, 3101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8579)
[0000][PE] mean and std.dev: (1591.92, 1345.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 342.755 CPU sec, 55.191 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511716, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (627, 1184, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1339.16, 1011.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1310, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (1047.14, 529.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 348.249 CPU sec, 49.024 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512062, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 311, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (488.67, 445.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1233, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (1163.92, 747.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 335.059 CPU sec, 50.125 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511934, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 643, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (775.88, 710.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.21, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 934, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (758.22, 415.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 339.141 CPU sec, 51.827 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512069, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 682, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (856.06, 791.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1351, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1219.07, 536.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 343.035 CPU sec, 46.049 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512220, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1122, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (1026.62, 710.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.09)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 2029, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9823)
[0000][PE] mean and std.dev: (1765.20, 1685.36)
[0000][PE] low and high boundaries for proper pairs: (1, 13016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 336.094 CPU sec, 52.555 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511774, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 725, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (936.24, 853.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 783, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2165)
[0000][PE] mean and std.dev: (794.58, 393.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 346.459 CPU sec, 50.413 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512072, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (625, 977, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (838.00, 498.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.35, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 981, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (824.83, 517.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 334.227 CPU sec, 50.274 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511791, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1344, 3458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9378)
[0000][PE] mean and std.dev: (1419.18, 1285.33)
[0000][PE] low and high boundaries for proper pairs: (1, 12338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 917, 3721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10525)
[0000][PE] mean and std.dev: (2358.64, 2903.40)
[0000][PE] low and high boundaries for proper pairs: (1, 13972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 335.242 CPU sec, 43.098 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512288, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 472, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (585.67, 705.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1297, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1291.46, 786.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 338.039 CPU sec, 49.840 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512110, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 665, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (778.88, 665.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 63.07)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1005, 3342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8508)
[0000][PE] mean and std.dev: (1505.75, 1246.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 338.596 CPU sec, 49.554 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511586, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1176, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1133.36, 745.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1135, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (889.07, 500.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 336.070 CPU sec, 43.707 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512231, 4, 25)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 989, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1220.42, 900.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 332.902 CPU sec, 49.231 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512158, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1132, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1178.15, 826.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 333, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (437.67, 350.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 335.869 CPU sec, 49.192 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512187, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1220, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6656)
[0000][PE] mean and std.dev: (1190.00, 882.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8736)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 331.933 CPU sec, 64.862 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511605, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 326, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (786.07, 776.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 758, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2006)
[0000][PE] mean and std.dev: (751.90, 485.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 333.288 CPU sec, 45.409 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512231, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 368, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (405.12, 274.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 821, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (941.20, 580.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 335.818 CPU sec, 62.226 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512438, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (755, 1369, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1435.50, 1157.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1475, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (1213.50, 492.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 328.480 CPU sec, 37.160 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511931, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 790, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (788.77, 494.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (118, 274, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (363.56, 349.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 994, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (969.29, 731.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 336.258 CPU sec, 52.704 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511680, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 784, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (813.28, 624.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.71, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 994, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5544)
[0000][PE] mean and std.dev: (996.85, 777.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 336.893 CPU sec, 51.916 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204488
	[0000][ M::kt_pipeline] read 1204488 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511473, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (699, 983, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (798.30, 395.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.56, 63.32)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 834, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (862.41, 657.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 339.522 CPU sec, 49.439 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511907, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 702, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (964.36, 923.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.07)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 884, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (665.74, 425.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204488 reads in 335.445 CPU sec, 46.661 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512256, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 919, 4033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11521)
[0000][PE] mean and std.dev: (2292.92, 2809.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.42, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1194, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (1122.06, 668.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 335.529 CPU sec, 57.701 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512443, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1124, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6475)
[0000][PE] mean and std.dev: (1528.54, 1518.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 891, 4577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12405)
[0000][PE] mean and std.dev: (1894.75, 2171.53)
[0000][PE] low and high boundaries for proper pairs: (1, 16319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 340.568 CPU sec, 64.736 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512107, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 329, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (668.43, 630.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1106, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1116.18, 589.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 330.919 CPU sec, 48.205 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511919, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 494, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7419)
[0000][PE] mean and std.dev: (1261.08, 1588.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.55, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 330.713 CPU sec, 42.546 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512356, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 863, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (912.25, 896.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1448, 2328, 3650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8054)
[0000][PE] mean and std.dev: (2550.15, 1671.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 348.293 CPU sec, 60.713 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511670, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (692, 934, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (1012.07, 610.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.59, 63.44)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1558, 4514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11978)
[0000][PE] mean and std.dev: (2580.75, 2429.78)
[0000][PE] low and high boundaries for proper pairs: (1, 15710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 336.757 CPU sec, 51.470 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512239, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (750, 1222, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1184.42, 937.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1063, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1190.00, 860.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 333.033 CPU sec, 56.176 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511906, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1061, 1161, 2857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1587.40, 1307.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1043, 3663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9447)
[0000][PE] mean and std.dev: (1970.14, 1999.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 346.238 CPU sec, 62.607 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511839, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 773, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1048.25, 917.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.61, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1193, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1232.38, 883.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 335.950 CPU sec, 49.200 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511824, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1564, 3166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8068)
[0000][PE] mean and std.dev: (2050.75, 1837.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.53, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1656, 3474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9350)
[0000][PE] mean and std.dev: (2205.25, 2095.94)
[0000][PE] low and high boundaries for proper pairs: (1, 12288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 335.841 CPU sec, 63.215 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512730, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 621, 5908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17228)
[0000][PE] mean and std.dev: (1910.00, 2467.16)
[0000][PE] low and high boundaries for proper pairs: (1, 22888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.65, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1280, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1682.81, 1345.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 347.676 CPU sec, 71.153 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204574
	[0000][ M::kt_pipeline] read 1204574 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511932, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 341, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (693.87, 712.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 1052, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1034.39, 792.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 343.313 CPU sec, 50.612 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512178, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 848, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6696)
[0000][PE] mean and std.dev: (1255.85, 987.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1257, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (998.20, 578.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204574 reads in 344.215 CPU sec, 52.181 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512118, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1604, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7470)
[0000][PE] mean and std.dev: (2332.29, 2226.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 759, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (604.75, 289.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 333.701 CPU sec, 57.558 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512398, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (799, 1035, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7807)
[0000][PE] mean and std.dev: (1525.00, 1125.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 550)
[0000][PE] mean and std.dev: (340.66, 63.38)
[0000][PE] low and high boundaries for proper pairs: (46, 634)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1101, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1433.28, 1029.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 340.211 CPU sec, 72.778 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511680, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1166, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1443.44, 1208.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 966, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (778.29, 409.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 335.881 CPU sec, 57.388 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511214, 4, 25)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 600, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1238.48, 1143.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 340.463 CPU sec, 57.024 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511931, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 600, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (969.94, 1161.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 1306, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (1030.46, 656.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 330.275 CPU sec, 41.709 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512342, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 741, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1031.28, 957.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 990, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (872.08, 549.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 333.343 CPU sec, 54.945 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512599, 8, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.35)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1585, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5915)
[0000][PE] mean and std.dev: (1540.53, 795.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 333.406 CPU sec, 65.647 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512200, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 617, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (920.91, 770.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1232, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1208.14, 652.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 342.199 CPU sec, 56.041 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204664
	[0000][ M::kt_pipeline] read 1204664 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511679, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 698, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7370)
[0000][PE] mean and std.dev: (1330.12, 1192.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 995, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (1031.36, 670.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 333.609 CPU sec, 42.032 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511551, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 991, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (822.00, 565.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204664 reads in 340.932 CPU sec, 62.864 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511846, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 887, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (810.00, 499.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 780, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1229.47, 1044.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 334.632 CPU sec, 49.949 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 511725, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 1095, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7833)
[0000][PE] mean and std.dev: (1579.00, 1522.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.34, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 973, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4555)
[0000][PE] mean and std.dev: (1103.20, 960.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 336.481 CPU sec, 64.020 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512251, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 973, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5200)
[0000][PE] mean and std.dev: (1296.58, 1177.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 1373, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1094.25, 790.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 341.542 CPU sec, 69.938 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511911, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 855, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1358.07, 1475.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 339.734 CPU sec, 61.828 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512135, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 739, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (841.62, 860.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 1031, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6158)
[0000][PE] mean and std.dev: (1443.64, 1495.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 336.492 CPU sec, 48.339 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512313, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 632, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (630.67, 356.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1270, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1413.36, 1066.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 349.379 CPU sec, 56.731 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512580, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 862, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (994.00, 781.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 593, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (552.50, 349.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 344.342 CPU sec, 58.361 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512095, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 780, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1282.62, 1151.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 338.469 CPU sec, 55.486 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204570
	[0000][ M::kt_pipeline] read 1204570 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512050, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1574, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1577.18, 655.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 338.448 CPU sec, 43.028 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511852, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (593, 593, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (792.00, 616.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.52, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204570 reads in 333.980 CPU sec, 49.354 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512385, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (899, 1293, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (1104.40, 721.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1026, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (913.60, 390.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 331.065 CPU sec, 48.455 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512445, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 810, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8370)
[0000][PE] mean and std.dev: (1743.86, 1963.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1369, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1218.08, 652.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 337.584 CPU sec, 53.671 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512215, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 315, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (529.07, 522.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1362, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1723.69, 1537.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 344.916 CPU sec, 38.910 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512417, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (726, 1259, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8106)
[0000][PE] mean and std.dev: (1620.81, 1243.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.28, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1027, 5863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16371)
[0000][PE] mean and std.dev: (2412.92, 2312.06)
[0000][PE] low and high boundaries for proper pairs: (1, 21625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 332.628 CPU sec, 47.149 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512032, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1122, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7747)
[0000][PE] mean and std.dev: (2219.96, 2675.64)
[0000][PE] low and high boundaries for proper pairs: (1, 12923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.23, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 787, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (646.92, 397.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 346.366 CPU sec, 39.701 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511670, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 654, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (864.22, 720.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 1506, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6507)
[0000][PE] mean and std.dev: (1543.84, 1317.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 344.683 CPU sec, 66.388 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204650
	[0000][ M::kt_pipeline] read 1204650 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512054, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 1070, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6772)
[0000][PE] mean and std.dev: (1618.19, 1370.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1489, 3343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9207)
[0000][PE] mean and std.dev: (1839.10, 1577.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 334.658 CPU sec, 59.237 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511657, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 804, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (854.92, 773.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.22, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 926, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5743)
[0000][PE] mean and std.dev: (1239.21, 985.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204650 reads in 333.875 CPU sec, 45.152 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511945, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 265, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (739.91, 799.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1253, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (1218.86, 546.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 328.874 CPU sec, 36.278 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512128, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 276, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (641.42, 605.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.32, 63.49)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 1171, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1096.90, 700.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 337.828 CPU sec, 44.600 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511804, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 958, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9501)
[0000][PE] mean and std.dev: (1848.67, 1952.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.48, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 1171, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1095.83, 869.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 333.733 CPU sec, 45.822 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512152, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 1285, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6751)
[0000][PE] mean and std.dev: (1167.75, 888.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.43, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 534, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (651.67, 601.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 333.500 CPU sec, 50.404 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204572
	[0000][ M::kt_pipeline] read 1204572 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 511680, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 1032, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (843.04, 651.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 947, 3308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8772)
[0000][PE] mean and std.dev: (1891.78, 1977.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 337.909 CPU sec, 41.542 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204260
	[0000][ M::kt_pipeline] read 1204260 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511398, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 661, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (776.42, 739.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.83, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1320, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (1268.15, 583.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204572 reads in 338.076 CPU sec, 37.722 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204300
	[0000][ M::kt_pipeline] read 1204300 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511649, 4, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.49, 63.12)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 890, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1202.95, 1013.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204260 reads in 344.594 CPU sec, 58.784 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204290
	[0000][ M::kt_pipeline] read 1204290 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511567, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 787, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5112)
[0000][PE] mean and std.dev: (1119.33, 898.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.67, 63.14)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 970, 3705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10673)
[0000][PE] mean and std.dev: (1758.90, 2004.47)
[0000][PE] low and high boundaries for proper pairs: (1, 14157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204300 reads in 351.653 CPU sec, 53.134 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511852, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 1154, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (857.30, 576.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.73, 63.04)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1607, 3112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7758)
[0000][PE] mean and std.dev: (1889.65, 1681.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204290 reads in 347.244 CPU sec, 59.905 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204380
	[0000][ M::kt_pipeline] read 1204380 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511506, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 354, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1297)
[0000][PE] mean and std.dev: (406.33, 276.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.24)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1501, 4812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13228)
[0000][PE] mean and std.dev: (2285.40, 2126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 17436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 346.058 CPU sec, 53.353 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511642, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 551, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (889.71, 956.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1774, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7770)
[0000][PE] mean and std.dev: (2131.57, 1753.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204380 reads in 345.603 CPU sec, 52.796 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511836, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 647, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (658.67, 523.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.14)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 938, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (879.94, 414.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 349.646 CPU sec, 57.357 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511918, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (898, 1122, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1498.33, 1226.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 1292, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1507.79, 1191.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 347.111 CPU sec, 57.967 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512190, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (972, 1251, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (1213.30, 775.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.93, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1358, 3323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9439)
[0000][PE] mean and std.dev: (1920.86, 2245.49)
[0000][PE] low and high boundaries for proper pairs: (1, 12497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 348.707 CPU sec, 51.003 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511463, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 590, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6851)
[0000][PE] mean and std.dev: (1191.00, 1246.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.21, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 391, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (891.09, 894.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 351.306 CPU sec, 58.386 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511253, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 1254, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1111.65, 973.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 351.223 CPU sec, 51.685 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511497, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1107, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6506)
[0000][PE] mean and std.dev: (1478.94, 1346.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 986, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (986.62, 820.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 358.271 CPU sec, 54.129 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512057, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1486, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1521.10, 1080.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 1056, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1189.76, 981.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 351.891 CPU sec, 49.936 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511073, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 658, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1905)
[0000][PE] mean and std.dev: (516.42, 295.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.93, 63.20)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 948, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (790.91, 429.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 355.282 CPU sec, 61.041 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512001, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1075, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8070)
[0000][PE] mean and std.dev: (1750.73, 1620.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10511)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 342.704 CPU sec, 44.965 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204560
	[0000][ M::kt_pipeline] read 1204560 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511512, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 515, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (636.50, 611.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.14, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1500, 3012, 7508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19524)
[0000][PE] mean and std.dev: (4238.70, 3474.48)
[0000][PE] low and high boundaries for proper pairs: (1, 25532)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 986, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1214.71, 963.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 344.916 CPU sec, 47.297 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511465, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (749, 1531, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1073.91, 578.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1267, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1418.28, 793.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204560 reads in 348.134 CPU sec, 59.501 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511452, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 413, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (452.00, 355.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.13, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 1154, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (977.07, 541.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 339.858 CPU sec, 49.890 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511563, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 673, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (667.89, 491.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1268, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (1074.56, 699.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 341.626 CPU sec, 48.495 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511472, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (586, 878, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6136)
[0000][PE] mean and std.dev: (1205.71, 1185.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.04, 63.17)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 1328, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1290.12, 1087.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 336.370 CPU sec, 43.138 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511766, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 776, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (1108.86, 939.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.93, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1045, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1300.50, 961.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 345.612 CPU sec, 55.663 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511190, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 793, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1282.32, 1038.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.13, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (882, 2196, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1419.12, 764.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 975, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6960)
[0000][PE] mean and std.dev: (1652.16, 1594.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 344.276 CPU sec, 54.830 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511199, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 279, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (706.56, 697.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.04, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1085, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (1060.07, 681.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 341.465 CPU sec, 46.469 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511807, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 806, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1227.15, 1182.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 1309, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5983)
[0000][PE] mean and std.dev: (1437.89, 1618.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 355.670 CPU sec, 54.838 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511597, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (932, 1772, 5080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13376)
[0000][PE] mean and std.dev: (2499.85, 1970.52)
[0000][PE] low and high boundaries for proper pairs: (1, 17524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.33)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1454, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1147.50, 747.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 341.450 CPU sec, 50.557 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204470
	[0000][ M::kt_pipeline] read 1204470 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511385, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 853, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (948.00, 752.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.51, 63.30)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1157, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5577)
[0000][PE] mean and std.dev: (1274.62, 812.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 343.372 CPU sec, 47.850 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512376, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 887, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (956.30, 975.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1025, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1406.41, 861.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204470 reads in 339.863 CPU sec, 42.098 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511540, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 605, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (787.58, 731.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 1096, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (1452.18, 1249.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 341.910 CPU sec, 48.996 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204546
	[0000][ M::kt_pipeline] read 1204546 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512228, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2355, 2422, 5795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12675)
[0000][PE] mean and std.dev: (3595.36, 2572.07)
[0000][PE] low and high boundaries for proper pairs: (1, 16115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 2242, 6883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18925)
[0000][PE] mean and std.dev: (3087.60, 2786.50)
[0000][PE] low and high boundaries for proper pairs: (1, 24946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 339.814 CPU sec, 55.510 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204548
	[0000][ M::kt_pipeline] read 1204548 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511683, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 758, 4038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11582)
[0000][PE] mean and std.dev: (1648.67, 1928.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.91, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1230, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6731)
[0000][PE] mean and std.dev: (1313.38, 977.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204546 reads in 342.869 CPU sec, 46.034 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511800, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 672, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (664.58, 352.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1614, 3408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9704)
[0000][PE] mean and std.dev: (1758.53, 1551.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204548 reads in 340.495 CPU sec, 45.064 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511731, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 863, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7698)
[0000][PE] mean and std.dev: (1433.30, 1613.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10188)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 345.587 CPU sec, 51.197 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204360
	[0000][ M::kt_pipeline] read 1204360 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511581, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1519, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1317.69, 706.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 345.314 CPU sec, 53.173 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511585, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1627, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (1390.94, 1143.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.34, 63.47)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 1542, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1079.52, 708.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204360 reads in 343.665 CPU sec, 51.515 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511556, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1589, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7631)
[0000][PE] mean and std.dev: (1494.56, 1039.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1292, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7874)
[0000][PE] mean and std.dev: (1992.72, 2054.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 352.889 CPU sec, 43.404 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204322
	[0000][ M::kt_pipeline] read 1204322 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511656, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (629, 1054, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1265.45, 944.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1373, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (1113.50, 685.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 354.043 CPU sec, 57.037 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204484
	[0000][ M::kt_pipeline] read 1204484 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511465, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 909, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1133.31, 1056.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.14, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1370, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5723)
[0000][PE] mean and std.dev: (1565.53, 1278.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204322 reads in 351.797 CPU sec, 63.597 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511357, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 839, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2633)
[0000][PE] mean and std.dev: (666.91, 626.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 914, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8318)
[0000][PE] mean and std.dev: (1754.47, 1457.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204484 reads in 342.730 CPU sec, 50.974 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511114, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (545, 686, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (774.44, 654.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.31, 63.50)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1247, 3374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8458)
[0000][PE] mean and std.dev: (1861.69, 1532.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 349.916 CPU sec, 48.833 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511361, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 844, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (815.06, 622.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.20, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1727, 4400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10868)
[0000][PE] mean and std.dev: (2694.07, 2039.65)
[0000][PE] low and high boundaries for proper pairs: (1, 14102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 337.548 CPU sec, 42.391 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511546, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 342, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (451.40, 378.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.56)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 1194, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7725)
[0000][PE] mean and std.dev: (1769.14, 1538.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 333.136 CPU sec, 34.878 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512189, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1131, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1634.06, 1324.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 1052, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6658)
[0000][PE] mean and std.dev: (1474.62, 1371.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 343.127 CPU sec, 67.245 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511749, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (936, 1187, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1099.25, 386.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 849, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1039.35, 966.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 354.454 CPU sec, 57.742 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204376
	[0000][ M::kt_pipeline] read 1204376 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511374, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 734, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (969.57, 867.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1363, 3976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10496)
[0000][PE] mean and std.dev: (2375.90, 2615.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 343.763 CPU sec, 66.684 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511685, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 1134, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (941.67, 619.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.74, 63.28)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 1155, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1483.47, 1415.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204376 reads in 348.107 CPU sec, 52.160 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512026, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 697, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (894.14, 860.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.81, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1312, 3992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10288)
[0000][PE] mean and std.dev: (2409.55, 2334.50)
[0000][PE] low and high boundaries for proper pairs: (1, 13436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 338.399 CPU sec, 50.747 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511343, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 728, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1263.78, 1162.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.22)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1052, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1255.33, 838.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 336.726 CPU sec, 49.443 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204384
	[0000][ M::kt_pipeline] read 1204384 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511731, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 736, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (699.25, 536.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 63.25)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1109, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1336.33, 1474.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 338.622 CPU sec, 51.892 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511305, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1014, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1238.21, 1141.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.33)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1664, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1520.17, 718.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204384 reads in 340.168 CPU sec, 45.990 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511412, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 1308, 5884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17144)
[0000][PE] mean and std.dev: (2921.93, 3032.73)
[0000][PE] low and high boundaries for proper pairs: (1, 22774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.71, 63.22)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1182, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1427.40, 1011.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 341.195 CPU sec, 57.965 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204356
	[0000][ M::kt_pipeline] read 1204356 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511784, 3, 26)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 938, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1062.71, 728.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 351.198 CPU sec, 53.157 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204550
	[0000][ M::kt_pipeline] read 1204550 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511940, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (574, 880, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (900.76, 479.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 1184, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1235.28, 874.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204356 reads in 337.333 CPU sec, 52.948 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204420
	[0000][ M::kt_pipeline] read 1204420 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511477, 6, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.93, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1435, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7298)
[0000][PE] mean and std.dev: (2069.24, 1861.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9514)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204550 reads in 351.325 CPU sec, 42.033 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204348
	[0000][ M::kt_pipeline] read 1204348 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512272, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 295, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (587.38, 620.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.02, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 1056, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (933.50, 685.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204420 reads in 335.696 CPU sec, 49.033 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511808, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 855, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1104.45, 956.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.89, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 715, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (825.29, 639.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204348 reads in 340.893 CPU sec, 57.473 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 511679, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 803, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (907.23, 741.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.85, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 2055, 5721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14789)
[0000][PE] mean and std.dev: (2987.26, 2520.06)
[0000][PE] low and high boundaries for proper pairs: (1, 19323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 342.967 CPU sec, 45.532 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511760, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 715, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (615.10, 451.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.80, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1040, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1308.68, 1219.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 343.243 CPU sec, 51.748 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511591, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 288, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6213)
[0000][PE] mean and std.dev: (1191.71, 1377.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.75, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 338.434 CPU sec, 48.349 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204434
	[0000][ M::kt_pipeline] read 1204434 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511863, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 995, 4572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12782)
[0000][PE] mean and std.dev: (2112.12, 2481.50)
[0000][PE] low and high boundaries for proper pairs: (1, 16887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.74, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1361, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1088.06, 723.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 339.422 CPU sec, 47.183 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511629, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (545, 1526, 3514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9452)
[0000][PE] mean and std.dev: (2185.92, 2421.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.79, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1298, 4609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12123)
[0000][PE] mean and std.dev: (2419.14, 1895.91)
[0000][PE] low and high boundaries for proper pairs: (1, 15880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204434 reads in 343.206 CPU sec, 50.808 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511956, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 728, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1086.85, 849.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.62, 63.18)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 855, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5936)
[0000][PE] mean and std.dev: (1013.78, 844.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 343.794 CPU sec, 39.710 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511654, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 893, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1162.17, 857.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.14)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1332, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6490)
[0000][PE] mean and std.dev: (1635.38, 1842.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 349.603 CPU sec, 56.879 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204286
	[0000][ M::kt_pipeline] read 1204286 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512115, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 319, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (655.55, 691.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.46, 63.26)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 1136, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1264.64, 838.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 349.208 CPU sec, 47.994 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204334
	[0000][ M::kt_pipeline] read 1204334 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512059, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 845, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (843.00, 879.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1120, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (981.71, 563.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204286 reads in 347.739 CPU sec, 46.943 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511604, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 1176, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7256)
[0000][PE] mean and std.dev: (1357.00, 1291.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.66, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1338, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (1147.55, 704.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204334 reads in 342.276 CPU sec, 51.585 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511895, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (831, 1249, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8193)
[0000][PE] mean and std.dev: (1789.12, 1518.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.45, 63.21)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 616, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (905.29, 688.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 344.261 CPU sec, 54.159 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511323, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 520, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (815.53, 765.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.75, 63.33)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 961, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1035.19, 891.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 346.391 CPU sec, 54.062 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511451, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 610, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (732.18, 478.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1217, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1497.63, 903.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 340.874 CPU sec, 47.757 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511694, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 562, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2071)
[0000][PE] mean and std.dev: (654.53, 445.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.39)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 1059, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7601)
[0000][PE] mean and std.dev: (1508.64, 1563.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 354.948 CPU sec, 56.798 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511904, 2, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.32)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (622, 1477, 3351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8809)
[0000][PE] mean and std.dev: (2081.68, 1732.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11538)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 341.759 CPU sec, 51.025 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512373, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 855, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (983.92, 743.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.54, 63.34)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1140, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1325.17, 909.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 341.315 CPU sec, 58.546 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511777, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (685, 2203, 3625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9505)
[0000][PE] mean and std.dev: (2285.60, 1866.93)
[0000][PE] low and high boundaries for proper pairs: (1, 12445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1004, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (898.08, 563.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 345.248 CPU sec, 59.692 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511616, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 637, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (600.45, 369.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.92, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1160, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1187.88, 812.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 337.727 CPU sec, 52.063 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512429, 2, 24)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.58, 63.27)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 912, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5689)
[0000][PE] mean and std.dev: (1017.05, 956.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7500)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 341.429 CPU sec, 50.499 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511437, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 1706, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6221)
[0000][PE] mean and std.dev: (1345.62, 1231.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1112, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1059.25, 561.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 359.946 CPU sec, 60.611 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 510813, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 753, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6663)
[0000][PE] mean and std.dev: (1256.54, 1205.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.83, 63.05)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1002, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6680)
[0000][PE] mean and std.dev: (1430.40, 966.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 365.975 CPU sec, 65.692 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511706, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 894, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (938.67, 735.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 406, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (821.50, 862.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 354.906 CPU sec, 50.056 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204508
	[0000][ M::kt_pipeline] read 1204508 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512067, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 954, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (868.79, 582.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.12)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1173, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (1396.33, 1075.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 346.278 CPU sec, 56.037 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204280
	[0000][ M::kt_pipeline] read 1204280 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511951, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 787, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (818.88, 657.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.05)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204508 reads in 347.348 CPU sec, 58.323 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204342
	[0000][ M::kt_pipeline] read 1204342 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511788, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 869, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1075.95, 995.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1259, 2723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (1460.38, 950.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204280 reads in 346.650 CPU sec, 43.161 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512219, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 543, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (974.78, 1011.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.16)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 1149, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1070.82, 770.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204342 reads in 347.264 CPU sec, 57.577 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511983, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (666, 1075, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1170.12, 799.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1170, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1299.91, 898.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 339.432 CPU sec, 48.151 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511619, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1135, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8824)
[0000][PE] mean and std.dev: (1819.00, 1703.91)
[0000][PE] low and high boundaries for proper pairs: (1, 11615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.28, 63.03)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 979, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (1136.14, 434.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 344.777 CPU sec, 48.800 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511896, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1646, 3358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9440)
[0000][PE] mean and std.dev: (1901.54, 1766.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.09, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 349.018 CPU sec, 51.827 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204280
	[0000][ M::kt_pipeline] read 1204280 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511677, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 1062, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1220.30, 1054.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.45, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1077, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1250.33, 922.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 353.199 CPU sec, 52.978 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511945, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (626, 809, 2964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7640)
[0000][PE] mean and std.dev: (1508.56, 1438.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 705, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1031.12, 896.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204280 reads in 345.974 CPU sec, 61.898 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511887, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 888, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2771)
[0000][PE] mean and std.dev: (843.30, 493.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 62.99)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1037, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1230.94, 854.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 342.880 CPU sec, 49.471 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204430
	[0000][ M::kt_pipeline] read 1204430 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512007, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1396, 3243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8845)
[0000][PE] mean and std.dev: (1824.76, 1537.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1061, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1295.13, 888.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 359.542 CPU sec, 63.867 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204356
	[0000][ M::kt_pipeline] read 1204356 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512028, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (603, 1147, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1335.47, 1075.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.54, 63.06)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1226, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1468.50, 1098.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204430 reads in 351.948 CPU sec, 53.422 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511791, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 834, 3070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8138)
[0000][PE] mean and std.dev: (1319.31, 1127.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.09, 63.21)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 903, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8410)
[0000][PE] mean and std.dev: (1816.84, 2233.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204356 reads in 349.033 CPU sec, 44.194 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511868, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 801, 4325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12403)
[0000][PE] mean and std.dev: (2027.38, 2222.76)
[0000][PE] low and high boundaries for proper pairs: (1, 16442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1048, 4524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12066)
[0000][PE] mean and std.dev: (2243.40, 1954.17)
[0000][PE] low and high boundaries for proper pairs: (1, 15837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 348.457 CPU sec, 58.726 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204368
	[0000][ M::kt_pipeline] read 1204368 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511835, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 710, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (701.39, 597.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.14, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 933, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (983.38, 708.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 346.367 CPU sec, 58.508 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511953, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 1122, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1056.29, 754.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 1091, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1221.86, 971.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204368 reads in 341.699 CPU sec, 50.145 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512187, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 801, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (781.50, 647.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 931, 3983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10205)
[0000][PE] mean and std.dev: (2007.40, 1896.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 348.476 CPU sec, 47.125 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511303, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1303, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1233.36, 1016.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.28)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1387, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1355.00, 813.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 345.304 CPU sec, 56.869 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511903, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 847, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (1017.24, 847.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 985, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (1200.29, 1017.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 344.856 CPU sec, 57.249 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511576, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 929, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (848.79, 540.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.07)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1542, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1253.46, 704.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 346.197 CPU sec, 49.660 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512003, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (904, 1026, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1091.29, 705.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.46, 63.09)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 584, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6657)
[0000][PE] mean and std.dev: (1041.40, 980.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 342.393 CPU sec, 49.390 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511522, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 1001, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6630)
[0000][PE] mean and std.dev: (1047.17, 983.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.49, 63.22)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1110, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1249.27, 682.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 338.653 CPU sec, 46.075 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1203992
	[0000][ M::kt_pipeline] read 1203992 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511410, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 978, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (1444.06, 1183.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 746, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (730.31, 610.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 336.580 CPU sec, 43.040 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 502382, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1368, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (1274.50, 997.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.54, 63.09)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 1055, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (823.41, 612.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203992 reads in 408.349 CPU sec, 64.405 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204366
	[0000][ M::kt_pipeline] read 1204366 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512390, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1035, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (753.74, 604.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 538, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (631.73, 514.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 341.624 CPU sec, 48.889 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511606, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1423, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1313.61, 700.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204366 reads in 343.858 CPU sec, 49.489 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512239, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 976, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (900.33, 622.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.33, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1632, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5745)
[0000][PE] mean and std.dev: (1606.81, 1060.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 341.045 CPU sec, 52.381 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511821, 15, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 438, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (941.80, 886.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (828, 1460, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7335)
[0000][PE] mean and std.dev: (1284.25, 1073.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9504)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1057, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1185.00, 1210.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 340.376 CPU sec, 41.775 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204430
	[0000][ M::kt_pipeline] read 1204430 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512055, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 991, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5872)
[0000][PE] mean and std.dev: (1116.85, 994.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.09)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1033, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (1131.60, 719.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 343.641 CPU sec, 57.378 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511813, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 1805, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8134)
[0000][PE] mean and std.dev: (1865.15, 1783.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 872, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1034.91, 735.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204430 reads in 344.122 CPU sec, 42.150 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204330
	[0000][ M::kt_pipeline] read 1204330 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511384, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 2308, 3901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10893)
[0000][PE] mean and std.dev: (2638.00, 2663.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.50, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 891, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (962.40, 608.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 351.610 CPU sec, 52.328 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512040, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 809, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6518)
[0000][PE] mean and std.dev: (1896.63, 2194.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 931, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1250.59, 1100.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204330 reads in 337.443 CPU sec, 43.936 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511627, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 217, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (530.09, 599.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 1033, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (1034.65, 860.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 338.790 CPU sec, 43.173 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204378
	[0000][ M::kt_pipeline] read 1204378 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511885, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 271, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (794.43, 852.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.40, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 471, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (700.92, 491.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 348.127 CPU sec, 49.731 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511370, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 668, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (508.56, 401.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.21)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1363, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1599.62, 1071.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204378 reads in 341.118 CPU sec, 58.153 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512275, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 1021, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1205.30, 914.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 897, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8046)
[0000][PE] mean and std.dev: (1797.91, 2022.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 337.003 CPU sec, 54.540 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204278
	[0000][ M::kt_pipeline] read 1204278 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511681, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1232, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1346.25, 1239.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 337.393 CPU sec, 47.576 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512384, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 711, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6530)
[0000][PE] mean and std.dev: (1350.18, 1329.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 929, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (956.44, 448.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204278 reads in 335.122 CPU sec, 41.253 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511878, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1128, 1324, 5615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14589)
[0000][PE] mean and std.dev: (2410.85, 2034.69)
[0000][PE] low and high boundaries for proper pairs: (1, 19076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 778, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1015.80, 888.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 339.980 CPU sec, 47.759 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512202, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 874, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5322)
[0000][PE] mean and std.dev: (1228.11, 1234.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1682, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1353.56, 840.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 336.206 CPU sec, 52.149 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512191, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 791, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (850.50, 633.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.21, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 920, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1024.04, 775.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 342.651 CPU sec, 48.238 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512115, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 908, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (1168.22, 1222.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.47)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 918, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (977.17, 726.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 350.666 CPU sec, 46.682 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511756, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1580, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6146)
[0000][PE] mean and std.dev: (1330.05, 977.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 1021, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1095.43, 1020.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 338.486 CPU sec, 50.090 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511791, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1370, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1228.25, 821.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1132, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6203)
[0000][PE] mean and std.dev: (1517.15, 1266.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 337.978 CPU sec, 41.363 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511752, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 1132, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8572)
[0000][PE] mean and std.dev: (1269.42, 1192.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1050, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (931.05, 433.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 340.841 CPU sec, 54.189 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512407, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 623, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (581.69, 436.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.02, 63.43)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1291, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1393.41, 1220.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 335.199 CPU sec, 49.957 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204360
	[0000][ M::kt_pipeline] read 1204360 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511608, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 1409, 5237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15267)
[0000][PE] mean and std.dev: (2311.64, 2285.54)
[0000][PE] low and high boundaries for proper pairs: (1, 20282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.14, 63.15)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1037, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6851)
[0000][PE] mean and std.dev: (1773.15, 1798.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 338.427 CPU sec, 50.848 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512134, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1162, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6962)
[0000][PE] mean and std.dev: (1709.38, 1701.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9150)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204360 reads in 343.485 CPU sec, 57.950 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511299, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 714, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8026)
[0000][PE] mean and std.dev: (1232.75, 1400.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 983, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (953.13, 445.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 412.088 CPU sec, 74.926 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204356
	[0000][ M::kt_pipeline] read 1204356 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512171, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1002, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (994.88, 928.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1091, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (966.44, 310.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 340.066 CPU sec, 46.190 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204384
	[0000][ M::kt_pipeline] read 1204384 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511712, 4, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1612, 4663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11837)
[0000][PE] mean and std.dev: (2735.22, 2582.87)
[0000][PE] low and high boundaries for proper pairs: (1, 15424)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204356 reads in 343.644 CPU sec, 41.185 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511948, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (874, 1302, 3605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9067)
[0000][PE] mean and std.dev: (2669.70, 2900.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1402, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7225)
[0000][PE] mean and std.dev: (1925.27, 1446.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204384 reads in 343.476 CPU sec, 48.399 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204306
	[0000][ M::kt_pipeline] read 1204306 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511618, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 481, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (842.14, 809.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1656, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (1333.55, 562.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 342.123 CPU sec, 43.081 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511739, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (736, 1959, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1947.69, 1529.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.87, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 1269, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7459)
[0000][PE] mean and std.dev: (1496.42, 1420.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204306 reads in 341.899 CPU sec, 49.420 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204310
	[0000][ M::kt_pipeline] read 1204310 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511849, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (680, 1138, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (1044.16, 594.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.87, 63.20)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 395, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (878.43, 911.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 364.729 CPU sec, 55.937 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511849, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1195, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1060.39, 822.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1300, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1255.84, 696.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204310 reads in 361.338 CPU sec, 59.083 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204310
	[0000][ M::kt_pipeline] read 1204310 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511733, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 805, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8206)
[0000][PE] mean and std.dev: (1757.25, 1875.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.11, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1150, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1223.48, 948.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 339.856 CPU sec, 45.211 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511770, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1055, 1808, 4183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10439)
[0000][PE] mean and std.dev: (2551.15, 1975.92)
[0000][PE] low and high boundaries for proper pairs: (1, 13567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 338, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (608.92, 568.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204310 reads in 340.067 CPU sec, 44.579 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511899, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 667, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5680)
[0000][PE] mean and std.dev: (1027.35, 1117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 357.878 CPU sec, 48.534 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204614
	[0000][ M::kt_pipeline] read 1204614 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512549, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 334, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (974.67, 1326.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.31, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1444, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1736.62, 1344.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 346.768 CPU sec, 45.632 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511539, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 945, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1105.48, 897.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1331, 3810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10900)
[0000][PE] mean and std.dev: (2093.92, 2381.55)
[0000][PE] low and high boundaries for proper pairs: (1, 14445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204614 reads in 342.891 CPU sec, 48.427 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511687, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 989, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (814.00, 685.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1579, 3155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7863)
[0000][PE] mean and std.dev: (1771.00, 1516.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 363.433 CPU sec, 59.913 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512083, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 851, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (819.42, 593.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 674, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (842.33, 898.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 364.337 CPU sec, 56.587 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511939, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 825, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (878.38, 719.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 674, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (799.82, 596.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 349.115 CPU sec, 50.295 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511974, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1612, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8140)
[0000][PE] mean and std.dev: (1497.60, 1388.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.51)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1237, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1415.95, 1129.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 343.806 CPU sec, 51.954 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204246
	[0000][ M::kt_pipeline] read 1204246 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511314, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 647, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (679.21, 522.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1379, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1366.30, 647.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 345.307 CPU sec, 44.416 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204338
	[0000][ M::kt_pipeline] read 1204338 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512536, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 406, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1427)
[0000][PE] mean and std.dev: (348.20, 177.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.22, 63.48)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 803, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (654.22, 451.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204246 reads in 339.929 CPU sec, 46.273 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512104, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 724, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1198.38, 1271.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.85, 63.47)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 919, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (688.65, 548.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204338 reads in 365.396 CPU sec, 60.959 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204396
	[0000][ M::kt_pipeline] read 1204396 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512085, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1015, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1094.94, 569.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 349.403 CPU sec, 52.493 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511627, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1590, 2343, 5750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14070)
[0000][PE] mean and std.dev: (3039.36, 2581.23)
[0000][PE] low and high boundaries for proper pairs: (1, 18230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1286, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1170.07, 927.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204396 reads in 338.170 CPU sec, 43.992 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511953, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 764, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (769.27, 631.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.51)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 2191, 3927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9873)
[0000][PE] mean and std.dev: (2436.38, 2109.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 339.471 CPU sec, 39.246 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511382, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.75, 63.01)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1095, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (977.94, 590.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 353.180 CPU sec, 36.380 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511520, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1757, 2666, 4516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10034)
[0000][PE] mean and std.dev: (3242.05, 2768.07)
[0000][PE] low and high boundaries for proper pairs: (1, 14314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.89, 63.12)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 689, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (670.29, 349.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 356.999 CPU sec, 41.630 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204342
	[0000][ M::kt_pipeline] read 1204342 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511817, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 692, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (824.42, 663.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.80, 62.94)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 2381, 4223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10811)
[0000][PE] mean and std.dev: (2612.67, 2233.27)
[0000][PE] low and high boundaries for proper pairs: (1, 14105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 348.230 CPU sec, 42.507 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511960, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 1580, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7733)
[0000][PE] mean and std.dev: (1817.62, 1594.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.85, 62.99)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (294, 607, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (731.22, 582.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 1012, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1078.25, 717.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204342 reads in 388.237 CPU sec, 57.947 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511966, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 676, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1228.18, 1297.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.89, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1050, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1067.38, 634.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 356.589 CPU sec, 42.058 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512052, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (906, 1621, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1574.33, 1073.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.02, 63.17)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1896, 3949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10241)
[0000][PE] mean and std.dev: (2931.68, 2929.15)
[0000][PE] low and high boundaries for proper pairs: (1, 14648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 342.622 CPU sec, 42.502 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511960, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 719, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2010)
[0000][PE] mean and std.dev: (593.00, 468.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 908, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1134.71, 1019.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 351.162 CPU sec, 44.931 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204388
	[0000][ M::kt_pipeline] read 1204388 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511877, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 992, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8925)
[0000][PE] mean and std.dev: (1870.30, 2087.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 352.602 CPU sec, 37.113 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512108, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 757, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5615)
[0000][PE] mean and std.dev: (1142.78, 1107.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1389, 3727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9551)
[0000][PE] mean and std.dev: (2061.52, 1958.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204388 reads in 353.906 CPU sec, 46.703 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511805, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 1019, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7998)
[0000][PE] mean and std.dev: (1698.33, 1464.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 791, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (777.75, 419.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 347.012 CPU sec, 40.035 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204314
	[0000][ M::kt_pipeline] read 1204314 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511915, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1058, 1804, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1700.00, 977.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 62.99)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 2336, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6424)
[0000][PE] mean and std.dev: (1928.75, 1067.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 378.914 CPU sec, 60.539 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204448
	[0000][ M::kt_pipeline] read 1204448 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511587, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1039, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1290.91, 1230.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.14, 63.13)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1719, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6932)
[0000][PE] mean and std.dev: (2052.27, 1576.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204314 reads in 351.063 CPU sec, 49.929 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511489, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 524, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (538.57, 485.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.10, 63.01)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1170, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1489.07, 903.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204448 reads in 345.812 CPU sec, 44.888 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511775, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 761, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2564)
[0000][PE] mean and std.dev: (632.27, 461.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.33, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (161, 954, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7943)
[0000][PE] mean and std.dev: (1369.77, 1604.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 349.034 CPU sec, 39.060 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511774, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 1393, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6157)
[0000][PE] mean and std.dev: (1229.42, 1466.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 543, 3639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10163)
[0000][PE] mean and std.dev: (1723.23, 1859.96)
[0000][PE] low and high boundaries for proper pairs: (1, 13425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 345.649 CPU sec, 38.969 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511772, 6, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 2631, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7798)
[0000][PE] mean and std.dev: (2289.06, 1729.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10040)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 350.836 CPU sec, 39.227 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204532
	[0000][ M::kt_pipeline] read 1204532 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511534, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 584, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (776.54, 728.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1302, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (1085.31, 462.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 368.768 CPU sec, 59.952 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 511739, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 864, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (953.77, 833.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.23, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 759, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (695.44, 463.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204532 reads in 361.850 CPU sec, 53.607 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511381, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 715, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (845.44, 624.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.23, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1434, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1151.94, 777.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 353.917 CPU sec, 46.976 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511759, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 675, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7451)
[0000][PE] mean and std.dev: (1394.53, 1534.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.21, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 683, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (990.75, 802.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 347.394 CPU sec, 49.913 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204484
	[0000][ M::kt_pipeline] read 1204484 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511052, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 960, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (990.87, 715.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.44, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 1075, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1162.68, 751.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 349.030 CPU sec, 44.769 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511787, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 533, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1546)
[0000][PE] mean and std.dev: (567.00, 245.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.10)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1176, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1404.06, 1178.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204484 reads in 343.777 CPU sec, 42.424 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511828, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 1117, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1021.30, 782.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.41, 63.34)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1534, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1898.00, 1206.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 358.405 CPU sec, 38.261 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511349, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 821, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1034.77, 1090.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1024, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1455.27, 1309.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 357.652 CPU sec, 45.560 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512235, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 444, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1283.28, 1520.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 1098, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1160.84, 877.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 342.897 CPU sec, 43.121 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204536
	[0000][ M::kt_pipeline] read 1204536 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511720, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 893, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1485.86, 1623.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.35, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1013, 3381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8205)
[0000][PE] mean and std.dev: (1715.82, 1302.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 347.474 CPU sec, 45.222 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512063, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 899, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1288.78, 1423.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.31, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1075, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (1520.60, 1518.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204536 reads in 337.941 CPU sec, 37.005 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204264
	[0000][ M::kt_pipeline] read 1204264 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511931, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 627, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1039.39, 1083.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.20, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 1302, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (1438.75, 1216.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 338.468 CPU sec, 38.796 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512052, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 1353, 2858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7300)
[0000][PE] mean and std.dev: (1435.23, 1143.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 993, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1015.53, 626.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204264 reads in 350.511 CPU sec, 42.097 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511604, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 1324, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8194)
[0000][PE] mean and std.dev: (1632.38, 1729.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 1096, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1074.31, 785.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 346.426 CPU sec, 51.601 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204470
	[0000][ M::kt_pipeline] read 1204470 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512014, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 1344, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (1099.33, 703.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1016, 3393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8757)
[0000][PE] mean and std.dev: (2358.38, 2492.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 340.674 CPU sec, 43.245 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511848, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 280, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (527.56, 468.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1218, 3181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7703)
[0000][PE] mean and std.dev: (2004.94, 1815.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204470 reads in 350.036 CPU sec, 47.952 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511147, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 726, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1152.24, 1060.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 1289, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1043.07, 783.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 340.987 CPU sec, 41.965 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512129, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1059, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1026.94, 651.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1402, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (1322.75, 793.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 346.355 CPU sec, 41.804 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512136, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 772, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (875.69, 851.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 337.666 CPU sec, 29.893 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511737, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 788, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1051.29, 987.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.09, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1090, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1002.79, 433.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 352.737 CPU sec, 42.688 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511722, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1301, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5235)
[0000][PE] mean and std.dev: (1498.42, 1231.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 877, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1120.14, 875.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 351.552 CPU sec, 44.833 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511698, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 995, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7127)
[0000][PE] mean and std.dev: (1220.14, 1414.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (447, 858, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (695.79, 391.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 347.970 CPU sec, 46.708 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511676, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (894, 1492, 3634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9114)
[0000][PE] mean and std.dev: (2311.64, 2214.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1477, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7870)
[0000][PE] mean and std.dev: (2003.13, 1874.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 339.755 CPU sec, 43.168 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511737, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1157, 1965, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1586.36, 923.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1923, 3401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9705)
[0000][PE] mean and std.dev: (2221.15, 2137.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 345.738 CPU sec, 42.337 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204436
	[0000][ M::kt_pipeline] read 1204436 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511861, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 810, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1046.13, 1009.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 432, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (465.08, 314.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 336.764 CPU sec, 34.767 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512318, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 418, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (837.65, 920.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.16, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 928, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (935.77, 553.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204436 reads in 353.561 CPU sec, 40.090 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204496
	[0000][ M::kt_pipeline] read 1204496 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512315, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1082, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1168.69, 830.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1414, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1730.56, 1162.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 350.097 CPU sec, 38.977 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511667, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 970, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (847.61, 520.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.31, 63.48)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 969, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1447.26, 1410.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204496 reads in 338.781 CPU sec, 39.505 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511758, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 1603, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8314)
[0000][PE] mean and std.dev: (1813.75, 1419.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 898, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7659)
[0000][PE] mean and std.dev: (1307.33, 1091.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 339.059 CPU sec, 39.897 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204530
	[0000][ M::kt_pipeline] read 1204530 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512300, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 987, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (901.69, 569.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1113, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1150.37, 713.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 343.612 CPU sec, 43.930 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511854, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 341, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (678.77, 706.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.00, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1199, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7009)
[0000][PE] mean and std.dev: (1349.67, 1149.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204530 reads in 346.295 CPU sec, 43.753 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204484
	[0000][ M::kt_pipeline] read 1204484 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512042, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 561, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1261.73, 1454.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.13, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 1029, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6349)
[0000][PE] mean and std.dev: (937.57, 1050.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 343.639 CPU sec, 49.750 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512022, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 746, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7921)
[0000][PE] mean and std.dev: (1333.82, 1240.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 1096, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7442)
[0000][PE] mean and std.dev: (1390.65, 1208.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204484 reads in 342.032 CPU sec, 48.580 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511697, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 935, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (824.38, 525.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.65, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 2240, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7691)
[0000][PE] mean and std.dev: (2350.40, 1750.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 333.911 CPU sec, 37.026 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511928, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 874, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7039)
[0000][PE] mean and std.dev: (1254.70, 1032.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.94, 63.43)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 1955, 2778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7864)
[0000][PE] mean and std.dev: (2029.52, 1985.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 356.261 CPU sec, 39.174 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204492
	[0000][ M::kt_pipeline] read 1204492 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511823, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 885, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1570.18, 1623.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.81, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 1050, 3654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10582)
[0000][PE] mean and std.dev: (1504.31, 1523.28)
[0000][PE] low and high boundaries for proper pairs: (1, 14046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 342.637 CPU sec, 48.500 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511659, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (712, 2040, 4363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11665)
[0000][PE] mean and std.dev: (2696.21, 2573.89)
[0000][PE] low and high boundaries for proper pairs: (1, 15316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.92, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1097, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (948.92, 596.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204492 reads in 348.480 CPU sec, 45.817 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204396
	[0000][ M::kt_pipeline] read 1204396 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 512142, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 843, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (887.67, 726.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 345.715 CPU sec, 47.360 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511750, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 884, 6386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18728)
[0000][PE] mean and std.dev: (2349.29, 2690.18)
[0000][PE] low and high boundaries for proper pairs: (1, 24899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 918, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6571)
[0000][PE] mean and std.dev: (1233.00, 1037.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204396 reads in 340.709 CPU sec, 42.376 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511967, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 847, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6768)
[0000][PE] mean and std.dev: (1372.53, 1215.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.92, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1673, 3465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8511)
[0000][PE] mean and std.dev: (2188.86, 1979.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 339.876 CPU sec, 49.370 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511933, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (808, 1213, 3394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8566)
[0000][PE] mean and std.dev: (2087.44, 1821.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1529, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6690)
[0000][PE] mean and std.dev: (2039.00, 1693.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 343.833 CPU sec, 43.618 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204384
	[0000][ M::kt_pipeline] read 1204384 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511891, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 916, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (819.00, 464.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 2077, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1573.60, 856.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 340.966 CPU sec, 35.019 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204448
	[0000][ M::kt_pipeline] read 1204448 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512112, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 934, 4519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12841)
[0000][PE] mean and std.dev: (2083.60, 2198.48)
[0000][PE] low and high boundaries for proper pairs: (1, 17002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204384 reads in 336.572 CPU sec, 41.791 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511849, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 332, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (773.75, 752.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.71, 63.03)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 760, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (784.00, 725.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204448 reads in 337.452 CPU sec, 39.346 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204490
	[0000][ M::kt_pipeline] read 1204490 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512008, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (745, 1144, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1407.20, 1087.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 854, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (1020.50, 886.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 336.421 CPU sec, 46.957 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511048, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 963, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (900.11, 789.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.27, 63.56)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 715, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1171.00, 1189.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204490 reads in 344.617 CPU sec, 44.126 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204390
	[0000][ M::kt_pipeline] read 1204390 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511257, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1015, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5560)
[0000][PE] mean and std.dev: (1217.18, 1053.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1269, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1093.76, 905.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 335.522 CPU sec, 45.095 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512098, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1101, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (719.33, 534.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.91, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 470, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (917.25, 920.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204390 reads in 338.254 CPU sec, 35.357 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 511760, 3, 24)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.91, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 1039, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1076.73, 1227.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 342.264 CPU sec, 42.169 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512010, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1187, 3867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11035)
[0000][PE] mean and std.dev: (2244.00, 2305.02)
[0000][PE] low and high boundaries for proper pairs: (1, 14619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.73, 63.24)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 864, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (906.00, 473.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 335.373 CPU sec, 36.818 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512068, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (648, 1391, 2756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6972)
[0000][PE] mean and std.dev: (1507.13, 1374.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1720, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1798.10, 893.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 346.476 CPU sec, 51.516 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204418
	[0000][ M::kt_pipeline] read 1204418 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 511876, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.71, 63.27)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1519, 3980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10632)
[0000][PE] mean and std.dev: (2519.94, 2419.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13958)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 341.707 CPU sec, 44.503 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511989, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 545, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6949)
[0000][PE] mean and std.dev: (948.73, 970.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 884, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (1018.06, 669.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204418 reads in 336.378 CPU sec, 51.497 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511947, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 267, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (966.00, 1083.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1027, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1141.73, 802.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 343.089 CPU sec, 47.379 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204520
	[0000][ M::kt_pipeline] read 1204520 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512424, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 456, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (851.42, 923.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 833, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (974.28, 807.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 348.281 CPU sec, 47.424 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204324
	[0000][ M::kt_pipeline] read 1204324 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512068, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 917, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (1143.31, 1128.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.21)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1777, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1655.58, 1300.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204520 reads in 348.679 CPU sec, 42.587 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204314
	[0000][ M::kt_pipeline] read 1204314 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512251, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 1332, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7126)
[0000][PE] mean and std.dev: (1321.88, 1448.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.79, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 1237, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1296.20, 1061.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204324 reads in 339.772 CPU sec, 45.985 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511418, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 820, 3525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10065)
[0000][PE] mean and std.dev: (1645.63, 1636.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (141, 732, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (660.81, 603.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204314 reads in 339.644 CPU sec, 35.979 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204292
	[0000][ M::kt_pipeline] read 1204292 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511998, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 224, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (503.12, 405.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 1073, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7152)
[0000][PE] mean and std.dev: (1674.32, 1819.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 342.930 CPU sec, 39.779 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204280
	[0000][ M::kt_pipeline] read 1204280 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511741, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 673, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (669.38, 462.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.66, 62.96)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1096, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (994.40, 485.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204292 reads in 363.666 CPU sec, 49.678 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512055, 14, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 497, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (524.08, 432.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.92, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (729, 971, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (940.75, 580.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 1136, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1256.88, 1224.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204280 reads in 347.410 CPU sec, 45.644 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511722, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 902, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1529.75, 1605.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.83, 62.98)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1133, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1165.25, 823.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 343.185 CPU sec, 46.238 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204446
	[0000][ M::kt_pipeline] read 1204446 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512010, 4, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.76, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 852, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (1038.61, 634.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 338.147 CPU sec, 38.042 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511748, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 748, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (914.20, 774.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1792, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7712)
[0000][PE] mean and std.dev: (1918.44, 1405.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204446 reads in 334.218 CPU sec, 37.476 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511760, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 454, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (590.42, 490.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.94, 63.04)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 817, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (586.22, 311.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 343.243 CPU sec, 44.027 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512327, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (682, 1144, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1322.96, 866.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 1242, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (992.87, 797.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 339.795 CPU sec, 41.148 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511327, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 569, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1036.00, 981.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.26, 63.14)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1048, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1077.58, 701.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 356.411 CPU sec, 42.915 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511331, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 403, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (603.46, 465.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.17)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 847, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1200.83, 1272.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 355.470 CPU sec, 44.390 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511865, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (865, 1510, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7045)
[0000][PE] mean and std.dev: (2097.11, 1828.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.21)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 776, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (926.57, 858.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 347.550 CPU sec, 45.441 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511563, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 772, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1128.86, 1042.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.30, 63.06)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1101, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1295.91, 633.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 351.246 CPU sec, 49.848 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511850, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 469, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (888.05, 892.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.04)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 936, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (824.25, 627.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 340.052 CPU sec, 43.102 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511581, 3, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.39, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1137, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1235.14, 770.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 345.628 CPU sec, 48.107 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511737, 3, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.02)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1796, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6735)
[0000][PE] mean and std.dev: (1894.18, 1270.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8756)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 341.662 CPU sec, 47.681 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511589, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (524, 738, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7328)
[0000][PE] mean and std.dev: (1372.93, 1134.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 1091, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (834.75, 538.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 350.390 CPU sec, 51.185 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204290
	[0000][ M::kt_pipeline] read 1204290 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512185, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 1226, 3548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9510)
[0000][PE] mean and std.dev: (1413.71, 1292.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.14, 62.99)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 2431, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7848)
[0000][PE] mean and std.dev: (2473.07, 2377.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 341.481 CPU sec, 44.181 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511948, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1552, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7229)
[0000][PE] mean and std.dev: (1799.77, 1380.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 952, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6171)
[0000][PE] mean and std.dev: (1289.14, 1107.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204290 reads in 340.760 CPU sec, 42.751 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512002, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (845, 1481, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1405.60, 1116.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.11, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1106, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6347)
[0000][PE] mean and std.dev: (1218.91, 977.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 338.667 CPU sec, 43.241 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204398
	[0000][ M::kt_pipeline] read 1204398 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512324, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1070, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1228.69, 908.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.47, 63.25)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 976, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (995.53, 807.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 356.132 CPU sec, 34.793 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511423, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1195, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1441.81, 1172.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.38, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 709, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (860.15, 754.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204398 reads in 340.997 CPU sec, 44.715 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512044, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 1639, 8023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 23069)
[0000][PE] mean and std.dev: (3060.17, 3353.88)
[0000][PE] low and high boundaries for proper pairs: (1, 30592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.14, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1054, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (919.14, 479.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 338.218 CPU sec, 42.650 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204426
	[0000][ M::kt_pipeline] read 1204426 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512073, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 695, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (733.59, 598.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.03)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 935, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (1073.11, 910.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 338.389 CPU sec, 38.819 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511793, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1313, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1216.45, 1008.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1472, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1202.15, 796.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204426 reads in 341.941 CPU sec, 43.489 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204540
	[0000][ M::kt_pipeline] read 1204540 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511818, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1226, 3433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9219)
[0000][PE] mean and std.dev: (1902.22, 1605.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.12, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1373, 3251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8059)
[0000][PE] mean and std.dev: (1745.17, 1193.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 337.530 CPU sec, 41.548 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204278
	[0000][ M::kt_pipeline] read 1204278 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511969, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 223, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (210.91, 102.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 884, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (1024.87, 719.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204540 reads in 338.000 CPU sec, 41.165 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511745, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1820, 3495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9955)
[0000][PE] mean and std.dev: (2414.36, 2567.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1762, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1668.00, 768.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204278 reads in 342.957 CPU sec, 41.547 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204254
	[0000][ M::kt_pipeline] read 1204254 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512371, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 245, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6296)
[0000][PE] mean and std.dev: (1083.50, 1443.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.41, 63.45)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1235, 3921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9939)
[0000][PE] mean and std.dev: (2284.20, 1751.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 339.041 CPU sec, 45.997 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204522
	[0000][ M::kt_pipeline] read 1204522 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512187, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 642, 3237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9269)
[0000][PE] mean and std.dev: (1257.45, 1346.23)
[0000][PE] low and high boundaries for proper pairs: (1, 12285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1224, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1867.73, 1309.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204254 reads in 339.830 CPU sec, 54.528 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512256, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (778, 1437, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4657)
[0000][PE] mean and std.dev: (1220.92, 631.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.29, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204522 reads in 336.633 CPU sec, 41.840 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512375, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 306, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (747.17, 848.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 860, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (729.30, 362.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 350.702 CPU sec, 42.972 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512135, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (876, 1347, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1394.08, 1021.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 632, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5737)
[0000][PE] mean and std.dev: (1183.68, 1262.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 337.267 CPU sec, 47.329 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511575, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 1712, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7558)
[0000][PE] mean and std.dev: (1550.08, 1651.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.29, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 349.209 CPU sec, 52.208 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204420
	[0000][ M::kt_pipeline] read 1204420 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512693, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 569, 4134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11840)
[0000][PE] mean and std.dev: (1814.00, 2155.63)
[0000][PE] low and high boundaries for proper pairs: (1, 15693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.34, 63.49)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1094, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1314.45, 939.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 333.614 CPU sec, 36.423 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204430
	[0000][ M::kt_pipeline] read 1204430 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511727, 6, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 860, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1174.65, 965.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204420 reads in 348.226 CPU sec, 40.964 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204340
	[0000][ M::kt_pipeline] read 1204340 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512155, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 383, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1097.67, 1322.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 876, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (730.53, 683.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204430 reads in 343.483 CPU sec, 39.288 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 511787, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 857, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (936.15, 746.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.03, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 1398, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1156.60, 797.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204340 reads in 342.485 CPU sec, 42.958 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511749, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 1715, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (1457.00, 1147.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1329, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1598.25, 978.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 345.209 CPU sec, 49.210 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204432
	[0000][ M::kt_pipeline] read 1204432 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512122, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1186, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1679.11, 1632.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.02, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1680, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1363.45, 1067.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 342.022 CPU sec, 46.555 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204318
	[0000][ M::kt_pipeline] read 1204318 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512150, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1102, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (1446.43, 1262.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 1015, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6710)
[0000][PE] mean and std.dev: (1491.41, 1419.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204432 reads in 344.347 CPU sec, 36.122 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511909, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 873, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (952.44, 848.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 755, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1119.18, 981.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204318 reads in 342.591 CPU sec, 49.574 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204372
	[0000][ M::kt_pipeline] read 1204372 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512354, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 1019, 3482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9364)
[0000][PE] mean and std.dev: (1627.29, 1528.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 936, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (903.80, 638.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 348.730 CPU sec, 37.752 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511335, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 540, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (626.25, 690.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 2255, 3449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9777)
[0000][PE] mean and std.dev: (1846.31, 1539.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204372 reads in 345.728 CPU sec, 44.602 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511731, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 924, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1162.26, 1111.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.48)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1260, 5242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14224)
[0000][PE] mean and std.dev: (2072.92, 2039.59)
[0000][PE] low and high boundaries for proper pairs: (1, 18715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 351.064 CPU sec, 44.161 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204426
	[0000][ M::kt_pipeline] read 1204426 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511877, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 1283, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7516)
[0000][PE] mean and std.dev: (1736.11, 1901.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 962, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1336.94, 1423.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 336.648 CPU sec, 40.128 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511973, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 964, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1017.71, 789.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 623, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (613.08, 436.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204426 reads in 336.836 CPU sec, 38.590 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511829, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 646, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (1133.00, 934.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.92, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1093, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1543.24, 1321.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 339.452 CPU sec, 52.880 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 511624, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 889, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (906.73, 721.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.72, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1112, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1495.29, 1148.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 345.284 CPU sec, 38.906 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511579, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 481, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8120)
[0000][PE] mean and std.dev: (1533.00, 1455.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1016, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (976.67, 719.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 347.932 CPU sec, 36.384 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511708, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1407, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1592.15, 1087.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8200)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 369.427 CPU sec, 41.019 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204448
	[0000][ M::kt_pipeline] read 1204448 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511484, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1071, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1128.08, 799.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.89, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 1048, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (992.36, 861.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 342.776 CPU sec, 47.120 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512127, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 511, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6563)
[0000][PE] mean and std.dev: (1015.27, 1125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.76, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 993, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1132.00, 776.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204448 reads in 339.534 CPU sec, 36.479 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511726, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 714, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (938.82, 852.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.18)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 827, 3493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9771)
[0000][PE] mean and std.dev: (1228.33, 1253.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 338.434 CPU sec, 43.144 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204434
	[0000][ M::kt_pipeline] read 1204434 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511711, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.90, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 934, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (809.00, 469.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 338.546 CPU sec, 39.603 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512176, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 1436, 4696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12634)
[0000][PE] mean and std.dev: (2379.89, 2014.40)
[0000][PE] low and high boundaries for proper pairs: (1, 16603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.87, 63.48)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 925, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (822.43, 480.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204434 reads in 351.154 CPU sec, 38.007 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204368
	[0000][ M::kt_pipeline] read 1204368 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511731, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 1252, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1040.90, 968.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.89, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 1409, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (1108.33, 750.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 366.721 CPU sec, 40.874 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204340
	[0000][ M::kt_pipeline] read 1204340 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511615, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 978, 3989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11415)
[0000][PE] mean and std.dev: (2485.57, 2977.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1191, 3019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7227)
[0000][PE] mean and std.dev: (1800.65, 1528.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204368 reads in 343.879 CPU sec, 43.718 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204296
	[0000][ M::kt_pipeline] read 1204296 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511876, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (833, 1118, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4772)
[0000][PE] mean and std.dev: (1382.17, 1200.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 1191, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7293)
[0000][PE] mean and std.dev: (1678.37, 1790.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204340 reads in 340.091 CPU sec, 38.277 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204390
	[0000][ M::kt_pipeline] read 1204390 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512165, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1404, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7129)
[0000][PE] mean and std.dev: (1307.32, 1187.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.02, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 970, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (958.81, 708.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204296 reads in 361.939 CPU sec, 45.618 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511810, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (661, 874, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1489.08, 1367.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204390 reads in 343.286 CPU sec, 45.848 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204376
	[0000][ M::kt_pipeline] read 1204376 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511968, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 850, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1133.90, 945.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.65, 63.42)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 1436, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1313.13, 1116.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 339.023 CPU sec, 50.071 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511968, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1100, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1106.57, 843.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 775, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1168.85, 1036.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204376 reads in 340.461 CPU sec, 46.361 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512107, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1436, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5992)
[0000][PE] mean and std.dev: (1477.80, 1019.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1041, 3701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10503)
[0000][PE] mean and std.dev: (2130.73, 2690.79)
[0000][PE] low and high boundaries for proper pairs: (1, 13904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 338.433 CPU sec, 41.354 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204526
	[0000][ M::kt_pipeline] read 1204526 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512151, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 612, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (882.27, 890.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 1250, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (955.06, 719.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 338.966 CPU sec, 38.307 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512087, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1387, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8181)
[0000][PE] mean and std.dev: (1621.00, 1426.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.77, 63.16)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 951, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (980.83, 956.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204526 reads in 335.678 CPU sec, 31.001 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511813, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 684, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8431)
[0000][PE] mean and std.dev: (1589.67, 1546.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.00, 63.21)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 975, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1287.86, 959.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 349.660 CPU sec, 40.475 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511799, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.67, 63.14)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1250, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6952)
[0000][PE] mean and std.dev: (1450.00, 1155.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9102)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 342.057 CPU sec, 37.687 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511248, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 611, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7207)
[0000][PE] mean and std.dev: (1591.46, 1869.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.61, 63.16)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 1074, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (813.00, 490.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 341.501 CPU sec, 35.848 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511981, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 885, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (812.69, 593.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.99, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 750, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1129.80, 1029.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 340.624 CPU sec, 32.806 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511831, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 492, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7441)
[0000][PE] mean and std.dev: (1161.94, 1097.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.72, 63.23)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (129, 2361, 5736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16950)
[0000][PE] mean and std.dev: (2732.20, 2333.35)
[0000][PE] low and high boundaries for proper pairs: (1, 22557)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 1364, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1025.76, 949.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 347.093 CPU sec, 42.160 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204408
	[0000][ M::kt_pipeline] read 1204408 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512294, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 1050, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9054)
[0000][PE] mean and std.dev: (1553.07, 1508.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.22)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 855, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1050.73, 838.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 355.108 CPU sec, 40.962 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511862, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (577, 1851, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1464.55, 1041.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.04, 63.41)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1074, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (882.00, 524.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204408 reads in 341.801 CPU sec, 42.476 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204434
	[0000][ M::kt_pipeline] read 1204434 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512175, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (883, 1787, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1471.38, 995.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.89, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1301, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1259.53, 770.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 338.737 CPU sec, 41.234 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511984, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.89, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204434 reads in 337.750 CPU sec, 35.991 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511776, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1177, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1309.16, 1138.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.75, 63.22)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1569, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7451)
[0000][PE] mean and std.dev: (2114.50, 2286.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 342.255 CPU sec, 36.585 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511746, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 2810, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8985)
[0000][PE] mean and std.dev: (2530.29, 2005.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.65, 63.02)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 400, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5490)
[0000][PE] mean and std.dev: (935.88, 1036.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 335.996 CPU sec, 27.896 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511593, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 797, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (877.88, 913.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.77, 63.05)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1015, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (1097.18, 640.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 350.723 CPU sec, 41.341 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511620, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 233, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (684.12, 645.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1255, 4317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11669)
[0000][PE] mean and std.dev: (1997.08, 1870.76)
[0000][PE] low and high boundaries for proper pairs: (1, 15345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 342.721 CPU sec, 31.027 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512492, 10, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.77, 62.90)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (973, 1605, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7723)
[0000][PE] mean and std.dev: (2279.30, 2009.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10317)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1568, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1622.20, 1095.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 340.284 CPU sec, 29.518 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512034, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 2632, 4411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12755)
[0000][PE] mean and std.dev: (2542.88, 2089.77)
[0000][PE] low and high boundaries for proper pairs: (1, 16927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.66, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 662, 3229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8921)
[0000][PE] mean and std.dev: (1784.42, 2144.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 355.112 CPU sec, 44.907 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511820, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 624, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8121)
[0000][PE] mean and std.dev: (1198.33, 1463.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.94, 63.00)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 1036, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1370.40, 1296.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 342.913 CPU sec, 36.166 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511811, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1131, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1240.58, 907.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.15)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 768, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (981.00, 928.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 343.793 CPU sec, 32.765 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511987, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 362, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1126.53, 1464.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.13, 63.29)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 879, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (955.00, 492.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 353.338 CPU sec, 38.293 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511454, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1167, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (718.88, 547.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1263, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4528)
[0000][PE] mean and std.dev: (1166.08, 856.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 354.665 CPU sec, 36.327 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512062, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 862, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (846.95, 557.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.16, 63.16)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 873, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (851.52, 564.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 337.825 CPU sec, 31.706 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204426
	[0000][ M::kt_pipeline] read 1204426 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512305, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 841, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (776.67, 594.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 839, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6892)
[0000][PE] mean and std.dev: (1487.88, 1699.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 340.711 CPU sec, 38.064 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 511707, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (615, 922, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1331.05, 1214.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.36, 63.08)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 777, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (870.09, 413.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204426 reads in 340.427 CPU sec, 29.146 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512407, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 1303, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (878.45, 645.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.11)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 350, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (834.82, 768.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 353.402 CPU sec, 39.887 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204330
	[0000][ M::kt_pipeline] read 1204330 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512153, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.32, 63.18)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1254, 3905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9725)
[0000][PE] mean and std.dev: (2025.69, 1649.65)
[0000][PE] low and high boundaries for proper pairs: (1, 12635)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 352.569 CPU sec, 39.880 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512188, 10, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.38, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (67, 1014, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6331)
[0000][PE] mean and std.dev: (1562.50, 2044.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9740)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 965, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (928.47, 510.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204330 reads in 345.841 CPU sec, 37.817 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204376
	[0000][ M::kt_pipeline] read 1204376 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512402, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 816, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1316.88, 1228.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.28, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 351.920 CPU sec, 40.474 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204482
	[0000][ M::kt_pipeline] read 1204482 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512554, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1106, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1209.62, 942.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.18, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1149, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7346)
[0000][PE] mean and std.dev: (1455.80, 1179.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204376 reads in 345.814 CPU sec, 43.515 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204384
	[0000][ M::kt_pipeline] read 1204384 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511753, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 766, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (824.18, 740.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.14, 63.01)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 658, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (770.33, 706.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204482 reads in 340.743 CPU sec, 37.126 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204410
	[0000][ M::kt_pipeline] read 1204410 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512156, 3, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.22, 63.12)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1487, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (1285.47, 583.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204384 reads in 341.668 CPU sec, 32.844 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204376
	[0000][ M::kt_pipeline] read 1204376 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511942, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 773, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6604)
[0000][PE] mean and std.dev: (1341.31, 1511.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.37, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 847, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1013.53, 609.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204410 reads in 338.620 CPU sec, 35.774 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511751, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1070, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1160.61, 1032.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.24, 63.13)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 956, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (840.42, 638.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204376 reads in 352.311 CPU sec, 32.566 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512197, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 1438, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1111.85, 794.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.19, 63.24)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 352.553 CPU sec, 44.272 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512190, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 1523, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7492)
[0000][PE] mean and std.dev: (1564.13, 1352.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 63.16)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1055, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6724)
[0000][PE] mean and std.dev: (1691.62, 1330.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 360.564 CPU sec, 42.788 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204396
	[0000][ M::kt_pipeline] read 1204396 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511893, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 967, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7776)
[0000][PE] mean and std.dev: (965.62, 825.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 1058, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1303.60, 1173.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 344.331 CPU sec, 36.728 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204478
	[0000][ M::kt_pipeline] read 1204478 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511086, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.25, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204396 reads in 346.658 CPU sec, 31.679 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511814, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 746, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (610.40, 437.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1394, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (1301.56, 822.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204478 reads in 349.382 CPU sec, 39.485 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512209, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 846, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (930.57, 675.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 1203, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1059.10, 861.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 356.456 CPU sec, 35.859 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204438
	[0000][ M::kt_pipeline] read 1204438 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511742, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1197, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1296.06, 1081.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.29)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 965, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1040.27, 683.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 358.030 CPU sec, 41.852 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204326
	[0000][ M::kt_pipeline] read 1204326 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512728, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 1265, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (1447.14, 1182.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.19, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 921, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (885.12, 734.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204438 reads in 355.977 CPU sec, 42.966 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512082, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1039, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (985.00, 741.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.26, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1284, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7382)
[0000][PE] mean and std.dev: (1896.64, 1777.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204326 reads in 349.050 CPU sec, 42.423 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204348
	[0000][ M::kt_pipeline] read 1204348 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512091, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 237, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7768)
[0000][PE] mean and std.dev: (977.23, 1286.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.06, 63.24)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 764, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1265.77, 1148.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 349.119 CPU sec, 40.419 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512112, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 780, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (624.53, 401.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.23, 63.15)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1375, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1468.86, 987.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204348 reads in 345.598 CPU sec, 31.981 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204270
	[0000][ M::kt_pipeline] read 1204270 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512376, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 652, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (622.78, 431.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1486, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1705.27, 1158.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 353.664 CPU sec, 41.792 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511557, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 970, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (939.12, 579.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.40)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 886, 2950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8208)
[0000][PE] mean and std.dev: (1667.29, 1722.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204270 reads in 347.353 CPU sec, 36.297 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204360
	[0000][ M::kt_pipeline] read 1204360 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511770, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.18, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 973, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (836.67, 507.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 342.133 CPU sec, 30.132 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204452
	[0000][ M::kt_pipeline] read 1204452 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512456, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (724, 1427, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1578.50, 1403.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.15, 63.27)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1611, 3115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7851)
[0000][PE] mean and std.dev: (1651.15, 1351.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204360 reads in 353.772 CPU sec, 36.114 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511979, 13, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 276, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (719.92, 722.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.25, 63.23)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (342, 1410, 3662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10302)
[0000][PE] mean and std.dev: (2126.85, 2150.02)
[0000][PE] low and high boundaries for proper pairs: (1, 13622)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1921, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6434)
[0000][PE] mean and std.dev: (1816.47, 1296.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204452 reads in 348.429 CPU sec, 40.470 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204342
	[0000][ M::kt_pipeline] read 1204342 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511251, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 435, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (577.70, 442.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1317, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1431.30, 1137.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 344.261 CPU sec, 38.012 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512113, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1116, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (1045.29, 827.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.94, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1383, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1552.87, 972.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204342 reads in 358.937 CPU sec, 35.844 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511648, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 233, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (766.18, 1081.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1275, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1431.38, 929.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 349.800 CPU sec, 40.494 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511939, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (746, 971, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1483.20, 1392.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.20)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1689, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7795)
[0000][PE] mean and std.dev: (1538.93, 1391.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 350.264 CPU sec, 35.632 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511968, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 471, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7847)
[0000][PE] mean and std.dev: (1122.57, 1202.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.10, 63.44)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1206, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (780.91, 545.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 341.079 CPU sec, 37.328 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204292
	[0000][ M::kt_pipeline] read 1204292 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511443, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 388, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (566.27, 406.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.11, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1131, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (954.50, 390.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 346.258 CPU sec, 27.700 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512155, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 622, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1239.24, 1243.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.03, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 587, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (1111.59, 1126.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204292 reads in 359.236 CPU sec, 44.291 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511891, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1146, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7790)
[0000][PE] mean and std.dev: (1419.83, 1308.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.69, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 895, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (912.19, 648.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 346.505 CPU sec, 40.722 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512227, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 816, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (847.94, 740.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 981, 2823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8073)
[0000][PE] mean and std.dev: (1474.00, 1851.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 343.327 CPU sec, 31.953 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204288
	[0000][ M::kt_pipeline] read 1204288 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512051, 7, 24)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.86, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 1171, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1278.87, 1143.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 342.710 CPU sec, 33.425 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204462
	[0000][ M::kt_pipeline] read 1204462 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512211, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 493, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (691.08, 648.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.87, 63.26)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 988, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1541.31, 1499.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204288 reads in 341.710 CPU sec, 35.560 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204430
	[0000][ M::kt_pipeline] read 1204430 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511661, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 666, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (734.21, 714.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.46)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 711, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (857.82, 734.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204462 reads in 356.638 CPU sec, 45.576 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204296
	[0000][ M::kt_pipeline] read 1204296 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512008, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 812, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (679.50, 498.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.84, 63.18)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 999, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (996.78, 412.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204430 reads in 351.759 CPU sec, 36.054 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511662, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 610, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1205)
[0000][PE] mean and std.dev: (539.24, 249.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.03, 63.34)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1055, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1164.43, 875.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204296 reads in 338.986 CPU sec, 32.266 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204368
	[0000][ M::kt_pipeline] read 1204368 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511530, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1686, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8616)
[0000][PE] mean and std.dev: (2004.50, 1683.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.09, 63.31)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 2442, 3998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10048)
[0000][PE] mean and std.dev: (2724.86, 2362.41)
[0000][PE] low and high boundaries for proper pairs: (1, 13073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 348.148 CPU sec, 41.132 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512005, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 822, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7247)
[0000][PE] mean and std.dev: (1396.94, 1581.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.93, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2007, 3607, 4366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9084)
[0000][PE] mean and std.dev: (3303.60, 1996.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11443)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1566, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5004)
[0000][PE] mean and std.dev: (1420.67, 849.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204368 reads in 337.360 CPU sec, 35.175 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204386
	[0000][ M::kt_pipeline] read 1204386 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511700, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.81, 63.18)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1203, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1146.92, 658.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 345.115 CPU sec, 31.592 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512253, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1504, 3369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9595)
[0000][PE] mean and std.dev: (2374.50, 2548.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.73, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1092, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6058)
[0000][PE] mean and std.dev: (1312.38, 883.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204386 reads in 358.284 CPU sec, 45.664 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204364
	[0000][ M::kt_pipeline] read 1204364 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511636, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (675, 1707, 3319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8607)
[0000][PE] mean and std.dev: (2010.20, 1415.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.67, 63.19)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1108, 5278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14606)
[0000][PE] mean and std.dev: (2682.92, 2779.58)
[0000][PE] low and high boundaries for proper pairs: (1, 19270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 355.186 CPU sec, 39.998 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204500
	[0000][ M::kt_pipeline] read 1204500 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512049, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 426, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (626.42, 460.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.96, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1118, 1983, 3716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8912)
[0000][PE] mean and std.dev: (2430.90, 1554.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11510)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1045, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1189.77, 791.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204364 reads in 351.515 CPU sec, 39.520 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512157, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1760, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1325.93, 946.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.07, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 850, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1324.17, 996.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204500 reads in 351.604 CPU sec, 42.524 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511860, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1024, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7123)
[0000][PE] mean and std.dev: (1295.00, 1105.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.17, 63.23)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 821, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (980.00, 650.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 346.760 CPU sec, 41.210 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204360
	[0000][ M::kt_pipeline] read 1204360 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 511822, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 693, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1060.45, 1035.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.26)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1445, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1346.57, 898.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 347.654 CPU sec, 41.298 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204498
	[0000][ M::kt_pipeline] read 1204498 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512267, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1324, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5473)
[0000][PE] mean and std.dev: (1490.91, 1332.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.12, 63.20)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1619, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1721.67, 717.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204360 reads in 336.101 CPU sec, 32.739 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511787, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 177, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 741)
[0000][PE] mean and std.dev: (172.79, 84.64)
[0000][PE] low and high boundaries for proper pairs: (1, 951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.77, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 992, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1170.29, 1006.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204498 reads in 341.099 CPU sec, 28.491 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204340
	[0000][ M::kt_pipeline] read 1204340 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511755, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 696, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (665.17, 412.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.35)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 742, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (800.14, 680.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 341.039 CPU sec, 42.462 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511765, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1209, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (849.00, 607.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.33)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 1330, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8956)
[0000][PE] mean and std.dev: (2157.07, 2462.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204340 reads in 356.265 CPU sec, 32.854 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204412
	[0000][ M::kt_pipeline] read 1204412 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511915, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 970, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1072.62, 1048.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.08, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 658, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (828.71, 764.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 341.020 CPU sec, 36.575 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204456
	[0000][ M::kt_pipeline] read 1204456 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511591, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1403, 4400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12584)
[0000][PE] mean and std.dev: (2103.12, 2312.50)
[0000][PE] low and high boundaries for proper pairs: (1, 16676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.14, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 967, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1127.00, 1020.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204412 reads in 338.568 CPU sec, 33.285 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512206, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1018, 1602, 4459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11341)
[0000][PE] mean and std.dev: (2678.36, 2739.77)
[0000][PE] low and high boundaries for proper pairs: (1, 14782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.39)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1345, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8899)
[0000][PE] mean and std.dev: (2129.74, 2111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204456 reads in 342.239 CPU sec, 35.417 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204538
	[0000][ M::kt_pipeline] read 1204538 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511552, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 287, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7792)
[0000][PE] mean and std.dev: (1220.92, 1744.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.97, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1638, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1700.57, 1243.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 339.352 CPU sec, 30.988 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204416
	[0000][ M::kt_pipeline] read 1204416 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512007, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 764, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (912.35, 771.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.72, 63.20)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 865, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (918.41, 684.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204538 reads in 340.366 CPU sec, 30.394 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204348
	[0000][ M::kt_pipeline] read 1204348 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511455, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 467, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (747.50, 652.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.05, 63.30)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1141, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1240.00, 915.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204416 reads in 350.555 CPU sec, 40.636 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204516
	[0000][ M::kt_pipeline] read 1204516 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511985, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (737, 848, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (777.17, 427.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.27, 63.14)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204348 reads in 336.057 CPU sec, 31.361 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204372
	[0000][ M::kt_pipeline] read 1204372 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512018, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 746, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6106)
[0000][PE] mean and std.dev: (1063.17, 1160.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.15, 63.28)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204516 reads in 346.048 CPU sec, 38.222 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204468
	[0000][ M::kt_pipeline] read 1204468 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511804, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 865, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (779.40, 582.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.12, 63.38)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1021, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6711)
[0000][PE] mean and std.dev: (1884.93, 1811.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204372 reads in 335.047 CPU sec, 36.453 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512296, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 1336, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5759)
[0000][PE] mean and std.dev: (1436.70, 1566.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.07)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1049, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (1304.14, 843.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204468 reads in 346.286 CPU sec, 36.524 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204366
	[0000][ M::kt_pipeline] read 1204366 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512067, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1094, 1772, 3932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9608)
[0000][PE] mean and std.dev: (2489.27, 1991.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.64, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 918, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (830.64, 491.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 350.878 CPU sec, 39.986 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204268
	[0000][ M::kt_pipeline] read 1204268 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511161, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1663, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8110)
[0000][PE] mean and std.dev: (1839.27, 1532.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (296, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 548)
[0000][PE] mean and std.dev: (339.26, 63.16)
[0000][PE] low and high boundaries for proper pairs: (44, 632)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 893, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (624.25, 449.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204366 reads in 376.695 CPU sec, 45.013 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204596
	[0000][ M::kt_pipeline] read 1204596 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512342, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (935, 965, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2393)
[0000][PE] mean and std.dev: (805.40, 396.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.40, 63.02)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 888, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (835.64, 458.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204268 reads in 354.012 CPU sec, 44.420 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511736, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1075, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7808)
[0000][PE] mean and std.dev: (1740.69, 1969.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.34, 62.99)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 828, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (945.10, 608.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204596 reads in 369.147 CPU sec, 44.462 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204460
	[0000][ M::kt_pipeline] read 1204460 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512005, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 586, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (803.94, 616.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.28, 63.01)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 351.674 CPU sec, 40.704 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512139, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 659, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (968.00, 876.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.51, 62.92)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204460 reads in 336.802 CPU sec, 33.013 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204398
	[0000][ M::kt_pipeline] read 1204398 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511624, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 547, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (673.94, 507.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.26, 62.96)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1115, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1250.12, 751.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 339.985 CPU sec, 34.561 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204324
	[0000][ M::kt_pipeline] read 1204324 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511745, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 304, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (727.27, 733.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.46, 62.95)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 706, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (862.50, 694.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204398 reads in 339.230 CPU sec, 36.589 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511816, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (769, 930, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1344.33, 1047.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.29, 63.03)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 1152, 5787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16775)
[0000][PE] mean and std.dev: (2441.10, 2802.00)
[0000][PE] low and high boundaries for proper pairs: (1, 22269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204324 reads in 344.389 CPU sec, 37.300 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204422
	[0000][ M::kt_pipeline] read 1204422 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512456, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 335, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (375.20, 262.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.62, 63.02)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 2603, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (2167.20, 1103.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 336.363 CPU sec, 35.148 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511786, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 659, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (720.67, 499.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.69, 63.09)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 2170, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8608)
[0000][PE] mean and std.dev: (1738.13, 1115.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204422 reads in 339.943 CPU sec, 36.473 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511607, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 733, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6472)
[0000][PE] mean and std.dev: (1049.00, 1008.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (340.03, 63.19)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 799, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1039.24, 993.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 341.316 CPU sec, 29.032 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204504
	[0000][ M::kt_pipeline] read 1204504 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 511792, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1109, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1208.59, 987.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.70, 63.07)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1055, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1165.80, 814.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 333.605 CPU sec, 32.509 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511889, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 1161, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7422)
[0000][PE] mean and std.dev: (1504.71, 1398.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.72, 62.95)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1294, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1077.18, 507.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204504 reads in 339.966 CPU sec, 28.405 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204524
	[0000][ M::kt_pipeline] read 1204524 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511643, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.53, 63.07)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 864, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (609.62, 233.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2361)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 338.438 CPU sec, 34.063 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511572, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 940, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (832.06, 779.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.51, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1006, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1011.21, 709.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204524 reads in 343.281 CPU sec, 43.367 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511807, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 751, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (1419.64, 1527.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.94, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1169, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1655.04, 1441.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 342.228 CPU sec, 33.770 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204604
	[0000][ M::kt_pipeline] read 1204604 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 511851, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 547)
[0000][PE] mean and std.dev: (339.99, 62.90)
[0000][PE] low and high boundaries for proper pairs: (49, 630)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 773, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (943.00, 715.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 337.647 CPU sec, 31.361 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204480
	[0000][ M::kt_pipeline] read 1204480 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 511282, 7, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.95, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 1278, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7325)
[0000][PE] mean and std.dev: (1899.86, 2023.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9996)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204604 reads in 344.091 CPU sec, 38.233 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204424
	[0000][ M::kt_pipeline] read 1204424 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512333, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (580, 1188, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1961.45, 1898.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.61, 63.03)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 519, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (596.58, 406.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204480 reads in 348.791 CPU sec, 33.119 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204286
	[0000][ M::kt_pipeline] read 1204286 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511776, 1, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.98, 63.27)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1107, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (1037.05, 560.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204424 reads in 341.229 CPU sec, 40.740 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204494
	[0000][ M::kt_pipeline] read 1204494 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511616, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 354, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (986.12, 1178.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.57, 63.07)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1757, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1616.00, 917.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204286 reads in 337.973 CPU sec, 27.751 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204318
	[0000][ M::kt_pipeline] read 1204318 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512009, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 270, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (499.33, 448.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.02)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 897, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (944.25, 722.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204494 reads in 344.275 CPU sec, 37.697 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204420
	[0000][ M::kt_pipeline] read 1204420 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511647, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 274, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (603.53, 680.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.08)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1232, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7280)
[0000][PE] mean and std.dev: (1921.21, 1651.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204318 reads in 344.023 CPU sec, 40.872 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204390
	[0000][ M::kt_pipeline] read 1204390 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511433, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (766, 1254, 7722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21634)
[0000][PE] mean and std.dev: (2772.92, 3099.18)
[0000][PE] low and high boundaries for proper pairs: (1, 28590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.72, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 885, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5693)
[0000][PE] mean and std.dev: (1508.26, 1247.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204420 reads in 339.775 CPU sec, 30.086 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511616, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1181, 1791, 3319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7595)
[0000][PE] mean and std.dev: (2155.47, 1598.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.74, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1616, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6508)
[0000][PE] mean and std.dev: (1633.64, 1171.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204390 reads in 340.317 CPU sec, 35.210 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204454
	[0000][ M::kt_pipeline] read 1204454 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 512052, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 644, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7815)
[0000][PE] mean and std.dev: (1105.22, 1073.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.88, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 1015, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (959.50, 583.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 348.976 CPU sec, 31.480 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204464
	[0000][ M::kt_pipeline] read 1204464 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511496, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 802, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1087.92, 992.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.75, 63.09)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (407, 1291, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (969.19, 622.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204454 reads in 348.829 CPU sec, 42.585 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511829, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (84, 1791, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7761)
[0000][PE] mean and std.dev: (1754.40, 1784.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.94, 63.43)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204464 reads in 344.216 CPU sec, 42.309 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204256
	[0000][ M::kt_pipeline] read 1204256 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511956, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 746, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1417.29, 1527.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.66, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1373, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1265.43, 768.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 337.180 CPU sec, 37.158 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511811, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (855, 1137, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1608.09, 1094.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.87, 63.32)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1186, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5758)
[0000][PE] mean and std.dev: (1394.08, 1098.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204256 reads in 334.133 CPU sec, 31.275 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511265, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (683, 971, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (811.65, 444.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.23)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1499, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1639.05, 1501.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 341.250 CPU sec, 40.324 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204486
	[0000][ M::kt_pipeline] read 1204486 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512120, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 888, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7167)
[0000][PE] mean and std.dev: (1278.70, 1163.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.61, 62.96)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 936, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2057)
[0000][PE] mean and std.dev: (802.11, 409.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 332.589 CPU sec, 31.188 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511932, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 1877, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6925)
[0000][PE] mean and std.dev: (1478.27, 1042.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.88, 63.21)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 845, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1164.00, 1114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204486 reads in 343.491 CPU sec, 36.204 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511999, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1284, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1112.43, 735.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.74, 63.12)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 860, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2552)
[0000][PE] mean and std.dev: (681.50, 408.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 333.458 CPU sec, 29.347 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204412
	[0000][ M::kt_pipeline] read 1204412 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511781, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 622, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (962.46, 849.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.49, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 822, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (1308.33, 1202.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 342.313 CPU sec, 33.977 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204388
	[0000][ M::kt_pipeline] read 1204388 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511809, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1010, 1912, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1562.45, 899.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.50, 63.07)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1079, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (1081.80, 576.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204412 reads in 337.210 CPU sec, 34.305 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511883, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 297, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2219)
[0000][PE] mean and std.dev: (487.21, 451.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.55, 63.12)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 837, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (1073.40, 1027.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204388 reads in 338.131 CPU sec, 35.524 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204436
	[0000][ M::kt_pipeline] read 1204436 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511401, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 341, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (603.50, 568.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.48, 63.24)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1005, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1046.25, 791.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 336.660 CPU sec, 34.620 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204376
	[0000][ M::kt_pipeline] read 1204376 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 511307, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 283, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (490.61, 451.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.53, 63.16)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1312, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1606.19, 1398.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204436 reads in 336.956 CPU sec, 29.501 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512150, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 635, 3636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10318)
[0000][PE] mean and std.dev: (1611.62, 1533.16)
[0000][PE] low and high boundaries for proper pairs: (1, 13659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.45, 63.16)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1720, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7469)
[0000][PE] mean and std.dev: (2118.83, 1922.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204376 reads in 343.022 CPU sec, 38.692 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204324
	[0000][ M::kt_pipeline] read 1204324 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511787, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1080, 3784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10836)
[0000][PE] mean and std.dev: (1868.65, 1929.46)
[0000][PE] low and high boundaries for proper pairs: (1, 14362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.48, 63.05)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 334.472 CPU sec, 30.582 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204384
	[0000][ M::kt_pipeline] read 1204384 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512205, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 481, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1806)
[0000][PE] mean and std.dev: (506.70, 333.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.49, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 936, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1113.56, 1093.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204324 reads in 339.095 CPU sec, 34.895 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204404
	[0000][ M::kt_pipeline] read 1204404 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511786, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 999, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (811.92, 475.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.12)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1179, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1277.00, 1063.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204384 reads in 334.946 CPU sec, 29.139 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204372
	[0000][ M::kt_pipeline] read 1204372 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 511866, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 616, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2698)
[0000][PE] mean and std.dev: (672.35, 524.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.43, 63.05)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1205, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (1523.20, 1247.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204404 reads in 339.565 CPU sec, 31.204 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204356
	[0000][ M::kt_pipeline] read 1204356 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511818, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 319, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (519.83, 417.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.31, 63.04)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1355, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (1203.24, 757.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204372 reads in 344.286 CPU sec, 44.242 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204544
	[0000][ M::kt_pipeline] read 1204544 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511896, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 312, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (725.36, 768.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 63.21)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1252, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6881)
[0000][PE] mean and std.dev: (1709.92, 1764.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204356 reads in 336.038 CPU sec, 32.158 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511494, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (720, 1187, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6504)
[0000][PE] mean and std.dev: (1935.73, 1966.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 313, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (558.00, 562.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204544 reads in 341.324 CPU sec, 36.355 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 511652, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1095, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (999.67, 666.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.56, 63.14)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 541, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7061)
[0000][PE] mean and std.dev: (1210.06, 1484.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 340.412 CPU sec, 39.262 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204566
	[0000][ M::kt_pipeline] read 1204566 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512114, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 357, 3293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9463)
[0000][PE] mean and std.dev: (1516.20, 1632.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.59, 63.20)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 901, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1108.94, 1098.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 339.890 CPU sec, 37.900 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204466
	[0000][ M::kt_pipeline] read 1204466 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512440, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 655, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1159.29, 1137.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1178, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1285.41, 714.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204566 reads in 337.421 CPU sec, 41.703 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204344
	[0000][ M::kt_pipeline] read 1204344 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511640, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 417, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (536.12, 522.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.68, 63.18)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 823, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (905.79, 680.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204466 reads in 344.233 CPU sec, 42.827 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204506
	[0000][ M::kt_pipeline] read 1204506 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 511992, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 1020, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1086.00, 920.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.41, 63.03)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 997, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7125)
[0000][PE] mean and std.dev: (1331.44, 1174.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204344 reads in 341.701 CPU sec, 35.746 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204442
	[0000][ M::kt_pipeline] read 1204442 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512093, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 427, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1404)
[0000][PE] mean and std.dev: (467.70, 276.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 63.23)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1052, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (887.12, 522.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204506 reads in 330.892 CPU sec, 29.652 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512375, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.52, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 379, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (513.83, 427.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204442 reads in 340.257 CPU sec, 40.800 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204398
	[0000][ M::kt_pipeline] read 1204398 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512027, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 1085, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1250.05, 913.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.26, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1156, 4153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10817)
[0000][PE] mean and std.dev: (2305.36, 2695.92)
[0000][PE] low and high boundaries for proper pairs: (1, 14149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 338.852 CPU sec, 33.501 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 511734, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (693, 1046, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (882.22, 391.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.53, 63.03)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1688, 2078, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1958.90, 578.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204398 reads in 346.330 CPU sec, 42.702 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204402
	[0000][ M::kt_pipeline] read 1204402 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512024, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 963, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (859.00, 714.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.50, 63.15)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1054, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6120)
[0000][PE] mean and std.dev: (1111.10, 1052.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 331.531 CPU sec, 27.375 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204420
	[0000][ M::kt_pipeline] read 1204420 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511906, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 829, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6530)
[0000][PE] mean and std.dev: (1276.50, 1272.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.75, 63.11)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 847, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1035.54, 809.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204402 reads in 343.198 CPU sec, 34.830 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 511821, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 978, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5792)
[0000][PE] mean and std.dev: (1244.28, 1202.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.93, 63.25)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1406, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8028)
[0000][PE] mean and std.dev: (2158.82, 2183.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204420 reads in 337.741 CPU sec, 34.695 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204514
	[0000][ M::kt_pipeline] read 1204514 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511808, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 175, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (462.93, 613.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.57, 63.32)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1193, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1245.94, 972.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 336.985 CPU sec, 35.532 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204414
	[0000][ M::kt_pipeline] read 1204414 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 511915, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 703, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (829.29, 554.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.50, 63.12)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 793, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (856.07, 616.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204514 reads in 333.790 CPU sec, 33.716 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204512
	[0000][ M::kt_pipeline] read 1204512 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512485, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (788, 1996, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6353)
[0000][PE] mean and std.dev: (1626.70, 1183.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.51, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 879, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1027.35, 723.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204414 reads in 336.414 CPU sec, 35.519 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204472
	[0000][ M::kt_pipeline] read 1204472 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511604, 5, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.60, 63.21)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1086, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7483)
[0000][PE] mean and std.dev: (1795.60, 1802.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9752)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204512 reads in 340.341 CPU sec, 38.257 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511752, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 1507, 3561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10385)
[0000][PE] mean and std.dev: (2047.94, 2201.85)
[0000][PE] low and high boundaries for proper pairs: (1, 13797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.63, 63.06)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 947, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1035.06, 725.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204472 reads in 346.030 CPU sec, 42.018 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511764, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 823, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (501.75, 302.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.79, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1091, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5710)
[0000][PE] mean and std.dev: (1569.70, 1415.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 337.209 CPU sec, 37.553 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512283, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 782, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (884.19, 743.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.37, 63.10)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1182, 4112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11482)
[0000][PE] mean and std.dev: (2575.46, 2753.77)
[0000][PE] low and high boundaries for proper pairs: (1, 15167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 335.932 CPU sec, 34.679 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204534
	[0000][ M::kt_pipeline] read 1204534 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512239, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1113, 3416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9528)
[0000][PE] mean and std.dev: (1427.91, 1383.92)
[0000][PE] low and high boundaries for proper pairs: (1, 12584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.46, 63.13)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 379, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (664.57, 717.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 336.168 CPU sec, 31.905 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 511810, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 249, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (461.64, 426.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.59, 63.37)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1260, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (1285.81, 1102.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204534 reads in 342.536 CPU sec, 41.751 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204428
	[0000][ M::kt_pipeline] read 1204428 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512173, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 810, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (947.12, 652.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.62, 63.17)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1025, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1031.55, 721.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 344.426 CPU sec, 41.288 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204450
	[0000][ M::kt_pipeline] read 1204450 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 511921, 5, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 338, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (340.01, 63.49)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1291, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (1277.35, 695.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204428 reads in 336.136 CPU sec, 41.009 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 511656, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 557, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1959)
[0000][PE] mean and std.dev: (416.78, 251.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.80, 63.42)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 776, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (897.15, 686.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204450 reads in 345.916 CPU sec, 32.977 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204444
	[0000][ M::kt_pipeline] read 1204444 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511931, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (708, 1826, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7482)
[0000][PE] mean and std.dev: (1830.83, 1307.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 549)
[0000][PE] mean and std.dev: (339.88, 63.36)
[0000][PE] low and high boundaries for proper pairs: (45, 633)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1279, 3735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9391)
[0000][PE] mean and std.dev: (1969.90, 1522.93)
[0000][PE] low and high boundaries for proper pairs: (1, 12219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 335.438 CPU sec, 34.703 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 32050299, nseq: 214464
	[0000][ M::kt_pipeline] read 214464 sequences (32050299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512165, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 365, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (829.31, 733.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.46, 63.11)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1532, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5656)
[0000][PE] mean and std.dev: (1350.67, 984.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204444 reads in 334.870 CPU sec, 28.068 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 214464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 91003, 1, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (297, 337, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 546)
[0000][PE] mean and std.dev: (339.71, 63.22)
[0000][PE] low and high boundaries for proper pairs: (48, 629)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 214464 reads in 64.167 CPU sec, 7.384 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.147132 MHz
Runtime profile:

	Time taken for main_mem function: 47398.15 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2519.87, (2519.87, 2519.87)
	Writing IO time (SAM) avg: 5372.22, (5372.22, 5372.22)
	Reading IO time (Reference Genome) avg: 10.91, (10.91, 10.91)
	Index read time avg: 7.04, (7.04, 7.04)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 47379.10
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 47366.07, (47366.07, 47366.07)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 15066.52, (15066.52, 15066.52)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 32099.83, (32099.83, 32099.83)
		SMEM compute avg: 9753.25, (9786.61, 9706.55)
		SAL compute avg: 6909.28, (6960.41, 6856.60)
				MEM_SA avg: 3440.15, (3465.43, 3409.86)

		BSW time, avg: 8889.02, (8907.66, 8871.37)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
