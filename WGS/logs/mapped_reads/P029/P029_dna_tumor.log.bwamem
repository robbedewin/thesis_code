Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000006 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518308, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 293, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (620.20, 730.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 384, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8807)
[0000][PE] mean and std.dev: (1785.46, 2556.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1864, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1799.47, 1141.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000020 bp)...
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 430.458 CPU sec, 173.636 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517549, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 342, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (343.05, 184.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (215, 1680, 4353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12629)
[0000][PE] mean and std.dev: (2342.91, 2897.80)
[0000][PE] low and high boundaries for proper pairs: (1, 16767)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1091, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1076.62, 533.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 441.512 CPU sec, 50.224 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517894, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 308, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (523.04, 593.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (630, 2175, 4968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13644)
[0000][PE] mean and std.dev: (2591.67, 2393.98)
[0000][PE] low and high boundaries for proper pairs: (1, 17982)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 414.347 CPU sec, 45.459 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517853, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 307, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (646.00, 679.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 876, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (1210.64, 1465.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8753)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 400.590 CPU sec, 49.928 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517983, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 478, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (665.71, 602.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.05, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 466, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10378)
[0000][PE] mean and std.dev: (1852.20, 2230.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13784)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 962, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1144.82, 767.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 417.731 CPU sec, 56.531 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517832, 20, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 419, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1116)
[0000][PE] mean and std.dev: (443.33, 201.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 729, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (678.59, 629.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 403.068 CPU sec, 41.623 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517921, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 392, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (799.90, 856.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 551, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5839)
[0000][PE] mean and std.dev: (950.79, 1202.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7779)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 404.890 CPU sec, 54.760 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517889, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 411, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (705.95, 641.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 411, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (519.27, 688.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4558)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 403.359 CPU sec, 41.774 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518121, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 427, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (641.05, 583.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 864, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5387)
[0000][PE] mean and std.dev: (871.38, 759.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1649, 3352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8374)
[0000][PE] mean and std.dev: (1920.83, 1544.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 404.569 CPU sec, 43.704 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518538, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 368, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (632.67, 602.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 635, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4493)
[0000][PE] mean and std.dev: (647.56, 605.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5865)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1773, 3211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7465)
[0000][PE] mean and std.dev: (2141.82, 1447.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 399.654 CPU sec, 44.845 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518508, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 294, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (467.53, 416.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 409.034 CPU sec, 54.660 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518480, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 365, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (747.27, 814.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1243, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1239.08, 662.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 403.648 CPU sec, 40.346 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518236, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 306, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (276.56, 128.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 2031, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (2117.80, 1270.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 403.718 CPU sec, 50.897 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518308, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 355, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (545.00, 466.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 455, 2922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8622)
[0000][PE] mean and std.dev: (1451.15, 1872.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11472)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 398.364 CPU sec, 49.156 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518042, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 310, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1371)
[0000][PE] mean and std.dev: (326.47, 217.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 926, 4352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12714)
[0000][PE] mean and std.dev: (2247.40, 2533.31)
[0000][PE] low and high boundaries for proper pairs: (1, 16895)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1301, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 2750)
[0000][PE] mean and std.dev: (1311.58, 650.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 404.249 CPU sec, 54.849 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518333, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 343, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1796)
[0000][PE] mean and std.dev: (303.09, 193.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (328, 754, 5483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15793)
[0000][PE] mean and std.dev: (2344.60, 2725.86)
[0000][PE] low and high boundaries for proper pairs: (1, 20948)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 399.965 CPU sec, 43.116 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518320, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 290, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (342.82, 278.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 288, 3404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10174)
[0000][PE] mean and std.dev: (1674.46, 2227.11)
[0000][PE] low and high boundaries for proper pairs: (1, 13559)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 406.382 CPU sec, 52.816 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518292, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 354, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (541.17, 668.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 404.354 CPU sec, 49.909 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518036, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 356, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1551)
[0000][PE] mean and std.dev: (420.86, 335.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 406.996 CPU sec, 55.389 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518268, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 301, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (502.25, 459.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 53, 208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (61.25, 77.55)
[0000][PE] low and high boundaries for proper pairs: (1, 793)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1382, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1427.38, 797.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 402.921 CPU sec, 46.320 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517973, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 420, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1444)
[0000][PE] mean and std.dev: (517.33, 327.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 402.448 CPU sec, 46.440 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517776, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 434, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (498.64, 476.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 260, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (485.29, 666.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 399.703 CPU sec, 43.792 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518309, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 335, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 900)
[0000][PE] mean and std.dev: (335.39, 167.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 417.499 CPU sec, 42.308 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517611, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 361, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (964.10, 1049.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (262, 642, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (687.56, 703.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 410.566 CPU sec, 44.526 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518169, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 225, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (456.24, 562.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 646, 3122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8418)
[0000][PE] mean and std.dev: (1867.64, 2231.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11066)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1464, 3273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8431)
[0000][PE] mean and std.dev: (1574.08, 1324.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 415.081 CPU sec, 41.643 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517877, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 317, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (453.04, 406.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 2610, 4081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11943)
[0000][PE] mean and std.dev: (2315.27, 2061.63)
[0000][PE] low and high boundaries for proper pairs: (1, 15874)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 398.007 CPU sec, 43.231 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518059, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 358, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 723)
[0000][PE] mean and std.dev: (332.62, 92.56)
[0000][PE] low and high boundaries for proper pairs: (1, 866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 200, 5691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17057)
[0000][PE] mean and std.dev: (2106.56, 2851.50)
[0000][PE] low and high boundaries for proper pairs: (1, 22740)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 406.707 CPU sec, 47.669 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517913, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 561, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (989.15, 1045.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 1209, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6487)
[0000][PE] mean and std.dev: (1767.75, 1657.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8510)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1504, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1603.58, 1127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 413.071 CPU sec, 43.490 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518011, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 318, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 714)
[0000][PE] mean and std.dev: (290.70, 147.25)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 842, 3868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11430)
[0000][PE] mean and std.dev: (1792.00, 2251.82)
[0000][PE] low and high boundaries for proper pairs: (1, 15211)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 414.475 CPU sec, 51.205 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518194, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 373, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (525.08, 492.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 653, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (702.13, 773.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 393.744 CPU sec, 38.010 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518162, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 342, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (376.26, 250.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (704, 832, 6095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16877)
[0000][PE] mean and std.dev: (2544.50, 2993.49)
[0000][PE] low and high boundaries for proper pairs: (1, 22268)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 407.246 CPU sec, 41.316 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517997, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 672, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (984.04, 1000.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 205, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (260.85, 353.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 2888, 3768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8992)
[0000][PE] mean and std.dev: (2954.80, 2190.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 404.872 CPU sec, 45.958 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518319, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 387, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1767)
[0000][PE] mean and std.dev: (393.61, 272.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 517, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8226)
[0000][PE] mean and std.dev: (1488.77, 2116.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10947)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1211, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 2559)
[0000][PE] mean and std.dev: (1192.11, 371.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 402.599 CPU sec, 36.379 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518001, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 326, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1116)
[0000][PE] mean and std.dev: (340.53, 187.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (498, 882, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7773)
[0000][PE] mean and std.dev: (1598.31, 1728.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10198)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 1279, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1301.57, 876.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 399.136 CPU sec, 46.365 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518434, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 319, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (280.11, 136.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 261, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (583.42, 791.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1627, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1502.11, 767.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 406.400 CPU sec, 50.647 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518362, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 365, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (850.81, 852.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1232, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (1479.67, 555.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 401.805 CPU sec, 40.070 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518497, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 368, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2084)
[0000][PE] mean and std.dev: (473.74, 452.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 402.175 CPU sec, 40.503 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518083, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 412, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (780.03, 678.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 407.860 CPU sec, 41.471 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517704, 18, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 396, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (549.32, 517.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (68, 499, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (773.41, 870.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1555, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1849.50, 1288.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 411.012 CPU sec, 41.473 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518344, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 264, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (342.10, 230.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 119.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 412, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (372.56, 307.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2620)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1714, 5333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13809)
[0000][PE] mean and std.dev: (2991.23, 2506.04)
[0000][PE] low and high boundaries for proper pairs: (1, 18047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.948 CPU sec, 41.588 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518089, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 344, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (404.81, 316.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 578, 5184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15072)
[0000][PE] mean and std.dev: (2183.17, 2890.52)
[0000][PE] low and high boundaries for proper pairs: (1, 20016)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 246, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (1584.09, 2054.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 405.788 CPU sec, 43.898 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517852, 12, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 319, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (507.17, 493.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (162, 545, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (723.82, 858.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 406.220 CPU sec, 47.801 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518414, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 295, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (358.14, 247.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 358, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (439.00, 490.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 413.352 CPU sec, 54.121 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518230, 16, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 492, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (690.23, 647.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 486, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (663.67, 808.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 411.082 CPU sec, 52.105 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517943, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 333, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1042.83, 1219.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 574, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6534)
[0000][PE] mean and std.dev: (1097.38, 1370.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 990, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (1159.08, 495.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 410.975 CPU sec, 56.275 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517950, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 263, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 648)
[0000][PE] mean and std.dev: (252.40, 81.07)
[0000][PE] low and high boundaries for proper pairs: (1, 795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 599, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (491.42, 520.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1277, 3576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8350)
[0000][PE] mean and std.dev: (2555.10, 2210.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 399.309 CPU sec, 42.706 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517925, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 311, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (368.24, 281.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 797, 5852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17090)
[0000][PE] mean and std.dev: (2240.58, 2517.59)
[0000][PE] low and high boundaries for proper pairs: (1, 22709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1354, 3920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9846)
[0000][PE] mean and std.dev: (1856.85, 1330.64)
[0000][PE] low and high boundaries for proper pairs: (1, 12809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 402.382 CPU sec, 53.702 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517908, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 331, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (548.31, 569.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1490, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1487.33, 909.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 408.085 CPU sec, 60.936 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517873, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 321, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (526.33, 577.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 583, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2301)
[0000][PE] mean and std.dev: (621.33, 577.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 403.709 CPU sec, 52.131 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518040, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 315, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1700)
[0000][PE] mean and std.dev: (466.38, 387.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (369, 511, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (475.44, 374.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 401.428 CPU sec, 53.026 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518256, 22, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 207, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (705.75, 952.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 780, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9464)
[0000][PE] mean and std.dev: (1756.10, 2181.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12615)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 415.206 CPU sec, 55.072 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518027, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 345, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (322.94, 141.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 558, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (799.85, 971.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 406.486 CPU sec, 59.363 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517555, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 312, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (240.93, 112.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 27, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6940)
[0000][PE] mean and std.dev: (1006.00, 1690.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 1475, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (1687.20, 856.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 393.312 CPU sec, 57.406 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517646, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 391, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (564.88, 548.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 812, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (813.21, 664.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1457, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (1141.22, 597.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 394.465 CPU sec, 51.778 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517894, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 262, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (852.48, 1083.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (121, 737, 3754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11020)
[0000][PE] mean and std.dev: (1703.69, 2118.17)
[0000][PE] low and high boundaries for proper pairs: (1, 14653)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1398, 1577, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1493.22, 353.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 393.468 CPU sec, 52.017 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517425, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 267, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (618.24, 754.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 831, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (997.93, 1187.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 396.207 CPU sec, 43.578 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517784, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 358, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1695)
[0000][PE] mean and std.dev: (292.25, 169.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 405.123 CPU sec, 58.983 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206118
	[0000][ M::kt_pipeline] read 1206118 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518098, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 269, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (260.00, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 178, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (598.00, 947.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 407.910 CPU sec, 58.680 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517664, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 326, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (505.11, 476.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 334, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (598.36, 874.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206118 reads in 401.153 CPU sec, 60.269 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518407, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 343, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (719.61, 707.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 2484, 5248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14900)
[0000][PE] mean and std.dev: (3026.00, 3154.75)
[0000][PE] low and high boundaries for proper pairs: (1, 19726)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1414, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1636.41, 857.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 404.774 CPU sec, 55.739 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517877, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 344, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (432.48, 340.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 785, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (708.62, 595.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 398.495 CPU sec, 61.961 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517873, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 376, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1751)
[0000][PE] mean and std.dev: (424.52, 354.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 771, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1019.70, 1124.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8174)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 404.258 CPU sec, 62.934 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518199, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 431, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (898.24, 1028.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 380, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8699)
[0000][PE] mean and std.dev: (1213.77, 1411.85)
[0000][PE] low and high boundaries for proper pairs: (1, 11597)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 395.989 CPU sec, 48.363 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517955, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 398, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1674)
[0000][PE] mean and std.dev: (502.86, 416.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 398.311 CPU sec, 44.455 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518673, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 228, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 694)
[0000][PE] mean and std.dev: (210.89, 102.23)
[0000][PE] low and high boundaries for proper pairs: (1, 878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 407.833 CPU sec, 61.206 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518189, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 494, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2084)
[0000][PE] mean and std.dev: (564.84, 341.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 385, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1078.15, 1451.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 396.365 CPU sec, 51.883 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518217, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 325, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (514.52, 488.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (713, 1066, 5847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16115)
[0000][PE] mean and std.dev: (2172.75, 2328.18)
[0000][PE] low and high boundaries for proper pairs: (1, 21249)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 408.595 CPU sec, 51.120 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517993, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 519, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (914.50, 1071.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (382, 780, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1003.25, 1003.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 397.669 CPU sec, 58.100 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517891, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 282, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (292.06, 211.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 400.265 CPU sec, 61.457 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517615, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 338, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (598.57, 632.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 524, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (542.47, 555.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 1202, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5278)
[0000][PE] mean and std.dev: (840.90, 691.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 395.627 CPU sec, 54.023 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517660, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 381, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (661.05, 520.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (749, 2374, 4047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10643)
[0000][PE] mean and std.dev: (2181.40, 1674.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13941)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 397.789 CPU sec, 61.391 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517967, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 321, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 615)
[0000][PE] mean and std.dev: (273.42, 84.53)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 243, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (701.50, 1308.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1429, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5791)
[0000][PE] mean and std.dev: (1509.60, 924.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 400.873 CPU sec, 60.002 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517512, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 251, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (241.13, 94.72)
[0000][PE] low and high boundaries for proper pairs: (1, 754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.57, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (329, 565, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (521.33, 360.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2817)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 397.423 CPU sec, 51.707 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518259, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 481, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (520.68, 468.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 351, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1555)
[0000][PE] mean and std.dev: (260.89, 264.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2073)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1296, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1454.30, 775.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 397.807 CPU sec, 54.775 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518440, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 405, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2183)
[0000][PE] mean and std.dev: (400.38, 283.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (468, 1460, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7401)
[0000][PE] mean and std.dev: (1885.00, 1883.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9712)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1488, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1506.11, 1080.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 405.815 CPU sec, 66.446 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518199, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 383, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (498.88, 420.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.75, 119.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 576, 4396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13062)
[0000][PE] mean and std.dev: (2097.64, 2555.25)
[0000][PE] low and high boundaries for proper pairs: (1, 17395)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1211, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1346.17, 812.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 402.855 CPU sec, 63.438 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518044, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 284, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 812)
[0000][PE] mean and std.dev: (228.00, 100.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 736, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (453.58, 491.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 396.444 CPU sec, 55.671 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517662, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 356, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (746.65, 665.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 278, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6459)
[0000][PE] mean and std.dev: (1035.85, 1648.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 397.431 CPU sec, 51.479 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518082, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 597, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (785.64, 651.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 264, 5033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15055)
[0000][PE] mean and std.dev: (2266.36, 2746.00)
[0000][PE] low and high boundaries for proper pairs: (1, 20066)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 407.057 CPU sec, 58.753 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517961, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 347, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (314.53, 112.00)
[0000][PE] low and high boundaries for proper pairs: (1, 986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 72, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (404.20, 598.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2851)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 402.506 CPU sec, 61.321 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517988, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 328, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 722)
[0000][PE] mean and std.dev: (274.73, 101.69)
[0000][PE] low and high boundaries for proper pairs: (1, 882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 783, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7083)
[0000][PE] mean and std.dev: (1570.41, 1719.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9415)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1047, 3753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9689)
[0000][PE] mean and std.dev: (1950.15, 2082.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 400.143 CPU sec, 55.589 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518129, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 353, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1447)
[0000][PE] mean and std.dev: (404.82, 269.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 406.076 CPU sec, 56.486 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517912, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 291, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (271.65, 133.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 784, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5791)
[0000][PE] mean and std.dev: (1069.69, 1218.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 397.945 CPU sec, 58.268 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517857, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 246, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (429.26, 370.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 55, 4287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12827)
[0000][PE] mean and std.dev: (1540.92, 2382.44)
[0000][PE] low and high boundaries for proper pairs: (1, 17097)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1305, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (1194.40, 354.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 397.953 CPU sec, 73.262 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518137, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 475, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1207.44, 1411.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 768, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (1058.40, 909.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 396.258 CPU sec, 54.769 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517892, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 281, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 812)
[0000][PE] mean and std.dev: (251.42, 129.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1609, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1440.50, 844.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 400.225 CPU sec, 64.101 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517940, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 412, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (702.93, 687.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 376, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (690.00, 837.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 397.607 CPU sec, 49.213 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518080, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 278, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (270.75, 108.63)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (517, 683, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (497.22, 393.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 396.090 CPU sec, 65.644 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518106, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 363, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1585)
[0000][PE] mean and std.dev: (449.12, 331.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 171, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (538.40, 812.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 395.373 CPU sec, 52.774 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518179, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 328, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (301.38, 187.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 441, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (595.73, 665.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 395.913 CPU sec, 48.513 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518633, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 299, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (601.59, 644.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 672, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7732)
[0000][PE] mean and std.dev: (1158.78, 1347.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10300)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1335, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1400.67, 717.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 394.971 CPU sec, 50.324 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518349, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 370, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1801)
[0000][PE] mean and std.dev: (398.87, 280.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 701, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7324)
[0000][PE] mean and std.dev: (968.18, 1209.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9655)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1596, 1897, 3124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (2062.17, 1027.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 401.615 CPU sec, 54.034 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517963, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 371, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (467.13, 362.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 290, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (465.00, 665.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 393.206 CPU sec, 52.393 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518310, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 223, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1598)
[0000][PE] mean and std.dev: (317.41, 265.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 928, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (775.17, 770.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5383)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 897, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (903.80, 520.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 406.740 CPU sec, 46.273 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518396, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 443, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (602.10, 486.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 220, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1594)
[0000][PE] mean and std.dev: (320.35, 282.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2101)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 1503, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1735.15, 944.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 402.469 CPU sec, 58.594 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518072, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 346, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (498.81, 360.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 730, 4296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12508)
[0000][PE] mean and std.dev: (1933.20, 1926.43)
[0000][PE] low and high boundaries for proper pairs: (1, 16614)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1456, 3663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9223)
[0000][PE] mean and std.dev: (1873.33, 1263.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 394.648 CPU sec, 50.235 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518258, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 287, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (637.58, 681.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 2148, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6691)
[0000][PE] mean and std.dev: (2117.60, 1563.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 398.829 CPU sec, 67.928 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517783, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 327, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (633.39, 726.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 528, 3533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10005)
[0000][PE] mean and std.dev: (1659.50, 2347.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13241)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1098, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (983.90, 599.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 397.843 CPU sec, 55.831 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518058, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 380, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (518.05, 417.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (135, 461, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (702.45, 738.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 398.181 CPU sec, 50.061 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518279, 13, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 285, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (483.22, 428.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 351, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (294.55, 324.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 390.508 CPU sec, 50.948 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517612, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 339, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (536.14, 522.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 405.822 CPU sec, 53.503 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518559, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 371, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (418.30, 302.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1016, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1375.20, 768.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 395.457 CPU sec, 55.447 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518198, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 317, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (655.33, 820.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 679, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1146.47, 1574.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8289)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1463, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (329, 2789)
[0000][PE] mean and std.dev: (1539.25, 323.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 395.860 CPU sec, 46.655 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518553, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 401, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (473.00, 402.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (626, 2492, 5380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14888)
[0000][PE] mean and std.dev: (2837.18, 2436.05)
[0000][PE] low and high boundaries for proper pairs: (1, 19642)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1333, 1704, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (233, 2983)
[0000][PE] mean and std.dev: (1563.36, 574.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 398.465 CPU sec, 54.478 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518362, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 299, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (558.35, 630.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1333, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1407.20, 713.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 393.528 CPU sec, 51.401 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517834, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 375, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (503.85, 495.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 134, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1124)
[0000][PE] mean and std.dev: (171.07, 259.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1693, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (77, 3182)
[0000][PE] mean and std.dev: (1479.91, 352.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 406.511 CPU sec, 44.336 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518084, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 344, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (561.55, 521.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 375, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1801)
[0000][PE] mean and std.dev: (449.40, 499.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2448)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 402.203 CPU sec, 54.238 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517654, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 352, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1022)
[0000][PE] mean and std.dev: (394.31, 207.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 634, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (540.89, 441.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 396.035 CPU sec, 48.974 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517593, 9, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 378, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (699.00, 605.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.400 CPU sec, 48.094 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518086, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 229, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (573.65, 699.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 1020, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6230)
[0000][PE] mean and std.dev: (1030.47, 829.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8190)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 965, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1053.60, 792.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 393.178 CPU sec, 48.433 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518161, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 350, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (482.68, 487.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 624, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1048.92, 1510.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9640)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1390, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1501.15, 682.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 395.305 CPU sec, 52.133 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517711, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 321, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (337.29, 215.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 866, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1360.07, 1528.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9146)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 405.989 CPU sec, 45.733 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517810, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 332, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (361.47, 254.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (390, 1182, 3690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10290)
[0000][PE] mean and std.dev: (2049.77, 1725.50)
[0000][PE] low and high boundaries for proper pairs: (1, 13590)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 406.199 CPU sec, 50.707 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518172, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 341, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1483)
[0000][PE] mean and std.dev: (299.72, 129.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 293, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (438.42, 586.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 397.272 CPU sec, 48.648 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518079, 22, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 378, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (633.14, 468.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (170, 619, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (854.40, 854.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 403.226 CPU sec, 51.327 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517981, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 270, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (533.93, 447.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 535, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1094.38, 1539.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7804)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1492, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (1289.22, 588.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 396.992 CPU sec, 44.359 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517808, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 335, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (687.29, 752.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1148, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1035.70, 710.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 392.096 CPU sec, 42.619 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517741, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 603, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (741.04, 563.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 633, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (578.29, 637.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 392.833 CPU sec, 46.999 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518192, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 282, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (312.71, 201.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 292, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (613.29, 921.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1119, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1589.77, 1142.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 392.229 CPU sec, 47.859 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518009, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 337, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (353.09, 217.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 309, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (491.69, 728.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1559, 4310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10662)
[0000][PE] mean and std.dev: (2389.69, 2055.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 405.681 CPU sec, 50.940 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518102, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 430, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (477.24, 256.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 405.494 CPU sec, 54.617 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517973, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 350, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (585.12, 633.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 371, 3253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9751)
[0000][PE] mean and std.dev: (1786.53, 2228.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13000)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 400.154 CPU sec, 52.287 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517874, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 427, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (498.71, 389.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 668, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (771.73, 738.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 392.938 CPU sec, 48.630 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518420, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 380, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (504.12, 541.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 489, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (1178.00, 1320.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1646, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1546.55, 743.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 393.078 CPU sec, 49.177 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517958, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 306, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 879)
[0000][PE] mean and std.dev: (281.05, 131.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 999, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7426)
[0000][PE] mean and std.dev: (1197.50, 1247.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9878)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 2164, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (1987.44, 1182.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 392.194 CPU sec, 41.838 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517879, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 226, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1595)
[0000][PE] mean and std.dev: (224.64, 148.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 335, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (428.77, 401.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1101, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (1104.70, 516.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 390.950 CPU sec, 36.879 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518165, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 289, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1237)
[0000][PE] mean and std.dev: (272.00, 156.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (505, 1236, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7660)
[0000][PE] mean and std.dev: (1763.13, 1941.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10045)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1439, 3373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8031)
[0000][PE] mean and std.dev: (2025.92, 1595.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 395.957 CPU sec, 48.512 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518151, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 332, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (294.40, 134.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 1809, 3843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11049)
[0000][PE] mean and std.dev: (1969.83, 1709.84)
[0000][PE] low and high boundaries for proper pairs: (1, 14652)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1138, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6890)
[0000][PE] mean and std.dev: (1342.25, 720.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 401.708 CPU sec, 46.613 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518095, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 500, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (701.75, 683.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 1020, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (854.08, 727.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1258, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1179.36, 410.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 405.728 CPU sec, 52.262 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517856, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 331, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (433.40, 378.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 1544, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9918)
[0000][PE] mean and std.dev: (1657.36, 1839.54)
[0000][PE] low and high boundaries for proper pairs: (1, 13205)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 384.525 CPU sec, 42.824 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518432, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 351, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1905)
[0000][PE] mean and std.dev: (413.64, 204.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 668, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1063.71, 1513.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1512, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (1347.33, 607.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 396.974 CPU sec, 48.135 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518463, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 321, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 863)
[0000][PE] mean and std.dev: (284.57, 133.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 220, 3509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10451)
[0000][PE] mean and std.dev: (2027.82, 2953.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13922)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 394.600 CPU sec, 51.387 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517907, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 470, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (919.93, 799.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1643, 5537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14129)
[0000][PE] mean and std.dev: (2696.33, 2406.70)
[0000][PE] low and high boundaries for proper pairs: (1, 18425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 394.105 CPU sec, 49.155 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518113, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 530, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (558.60, 407.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.15, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 537, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6056)
[0000][PE] mean and std.dev: (1110.12, 1539.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 390.244 CPU sec, 47.628 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517991, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 326, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (581.52, 693.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 568, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (342.25, 428.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1219, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1189.92, 519.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 397.382 CPU sec, 45.946 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518245, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 323, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (355.53, 256.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 627, 4556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13528)
[0000][PE] mean and std.dev: (1575.08, 2002.56)
[0000][PE] low and high boundaries for proper pairs: (1, 18014)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 693, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6353)
[0000][PE] mean and std.dev: (1576.67, 1333.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 395.656 CPU sec, 49.857 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518152, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 346, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 921)
[0000][PE] mean and std.dev: (333.05, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 514, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (755.67, 933.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7665)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1166, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (1336.30, 694.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 384.944 CPU sec, 41.399 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517740, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 531, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (842.83, 810.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 1416, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6610)
[0000][PE] mean and std.dev: (1498.90, 1628.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8789)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1848, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6690)
[0000][PE] mean and std.dev: (2393.53, 1353.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 395.009 CPU sec, 49.963 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518128, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 394, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (652.48, 547.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 639, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (393.27, 461.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1359, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1205.18, 555.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 390.292 CPU sec, 48.923 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518177, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 291, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (471.89, 452.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (291, 558, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1273.07, 1484.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1075, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (1246.00, 790.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 389.858 CPU sec, 50.500 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517823, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 266, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 711)
[0000][PE] mean and std.dev: (276.50, 168.77)
[0000][PE] low and high boundaries for proper pairs: (1, 952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 309, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3075)
[0000][PE] mean and std.dev: (484.50, 554.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 390.538 CPU sec, 42.741 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517791, 17, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 324, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (625.83, 599.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (255, 1084, 4427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12771)
[0000][PE] mean and std.dev: (2054.53, 2360.58)
[0000][PE] low and high boundaries for proper pairs: (1, 16943)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 400.107 CPU sec, 54.723 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518563, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 311, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (321.79, 256.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 443, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1246.44, 1616.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 404.825 CPU sec, 51.232 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518147, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 531, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1031.57, 1000.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (229, 656, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (432.75, 388.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 395.737 CPU sec, 51.583 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518232, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 313, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (401.75, 400.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 411, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (834.00, 1216.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 397.372 CPU sec, 53.356 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518206, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 435, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2340)
[0000][PE] mean and std.dev: (489.48, 387.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (229, 619, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9274)
[0000][PE] mean and std.dev: (1385.00, 1654.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12289)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 389.980 CPU sec, 50.473 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518668, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 847, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1092.25, 1070.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 252, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (293.33, 465.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2193)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 397.161 CPU sec, 39.435 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517807, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 430, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (736.45, 673.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (49, 824, 3157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9373)
[0000][PE] mean and std.dev: (1382.63, 1470.49)
[0000][PE] low and high boundaries for proper pairs: (1, 12481)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 395.097 CPU sec, 50.171 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517798, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 339, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (461.94, 341.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 389.150 CPU sec, 52.512 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517823, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 551, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (667.81, 528.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 300, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (451.20, 503.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 386.668 CPU sec, 41.408 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517893, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 290, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (304.32, 158.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.84, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (450, 861, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1127.64, 1047.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1141, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (1060.46, 583.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 401.634 CPU sec, 51.002 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517557, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 376, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (359.75, 207.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 216, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (511.21, 599.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3521)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1557, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (1627.10, 1004.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 399.927 CPU sec, 47.028 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518063, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 347, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (701.82, 767.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 395.793 CPU sec, 51.213 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518100, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 522, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (705.72, 553.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 385.044 CPU sec, 40.711 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518260, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 385, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (396.92, 281.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 859, 4833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14313)
[0000][PE] mean and std.dev: (2279.08, 2197.92)
[0000][PE] low and high boundaries for proper pairs: (1, 19053)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 391.560 CPU sec, 51.704 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518272, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 352, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1663)
[0000][PE] mean and std.dev: (459.67, 387.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 391.783 CPU sec, 47.643 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518285, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 461, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (743.10, 718.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (618, 2480, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6564)
[0000][PE] mean and std.dev: (1980.30, 1420.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8546)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 394.161 CPU sec, 49.729 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517989, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 355, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1022)
[0000][PE] mean and std.dev: (353.93, 145.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 407.077 CPU sec, 54.785 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518323, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 250, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (9, 539)
[0000][PE] mean and std.dev: (258.00, 64.95)
[0000][PE] low and high boundaries for proper pairs: (1, 645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 407, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (365.45, 445.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2700)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 391.962 CPU sec, 44.734 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518282, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 298, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2034)
[0000][PE] mean and std.dev: (448.18, 436.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 1404, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1630.42, 1612.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8086)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 396.794 CPU sec, 54.759 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518457, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 337, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (800.43, 898.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 584, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2125)
[0000][PE] mean and std.dev: (529.22, 507.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 390.792 CPU sec, 51.070 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518128, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 335, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1575)
[0000][PE] mean and std.dev: (435.83, 336.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 375, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1015.00, 1819.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8776)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 392.354 CPU sec, 46.703 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518085, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 380, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 783)
[0000][PE] mean and std.dev: (308.88, 104.84)
[0000][PE] low and high boundaries for proper pairs: (1, 942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 376, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (514.14, 592.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 396.063 CPU sec, 53.848 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518078, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 353, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6591)
[0000][PE] mean and std.dev: (1098.29, 1568.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.80, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 1643, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1143.22, 1222.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8200)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1992, 4812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11970)
[0000][PE] mean and std.dev: (2838.23, 2729.99)
[0000][PE] low and high boundaries for proper pairs: (1, 15549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 396.171 CPU sec, 50.416 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518239, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 405, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2146)
[0000][PE] mean and std.dev: (673.27, 566.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1249, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (963.40, 440.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 391.773 CPU sec, 49.328 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517663, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 437, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1943)
[0000][PE] mean and std.dev: (526.71, 393.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1374, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1523.15, 853.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 404.237 CPU sec, 63.577 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517888, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 267, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (750.15, 941.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 1043, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1079.64, 1123.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1303, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1465.00, 758.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 396.654 CPU sec, 47.412 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517525, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 286, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (677.38, 721.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 176, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2135)
[0000][PE] mean and std.dev: (217.00, 245.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2841)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 398.717 CPU sec, 50.643 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517752, 17, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 381, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (381.88, 264.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.23, 118.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (49, 1018, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5830)
[0000][PE] mean and std.dev: (1104.47, 1153.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7757)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1065, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7503)
[0000][PE] mean and std.dev: (2162.79, 2141.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 393.095 CPU sec, 39.920 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517962, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 313, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1787)
[0000][PE] mean and std.dev: (303.86, 197.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 390.948 CPU sec, 37.840 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518163, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 320, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (288.85, 162.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 721, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (713.92, 677.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 391.603 CPU sec, 43.398 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517939, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 528, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (963.56, 1020.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 381, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (734.31, 1061.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 393.080 CPU sec, 41.160 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518271, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 330, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2306)
[0000][PE] mean and std.dev: (474.06, 434.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1461, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1477.45, 896.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 396.119 CPU sec, 43.419 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517745, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 281, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 730)
[0000][PE] mean and std.dev: (243.56, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1332, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6097)
[0000][PE] mean and std.dev: (1590.91, 1029.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 393.704 CPU sec, 45.912 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518183, 9, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1128, 3220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7802)
[0000][PE] mean and std.dev: (1798.25, 1735.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10093)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 391.577 CPU sec, 36.493 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517854, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 317, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (452.75, 317.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.60, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 402.042 CPU sec, 45.784 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518082, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 369, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 978)
[0000][PE] mean and std.dev: (321.36, 106.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 615, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8873)
[0000][PE] mean and std.dev: (1331.81, 1972.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1553, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1487.40, 822.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 394.231 CPU sec, 44.763 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518167, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 402, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2041)
[0000][PE] mean and std.dev: (498.33, 383.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 670, 4967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14893)
[0000][PE] mean and std.dev: (2343.59, 2751.41)
[0000][PE] low and high boundaries for proper pairs: (1, 19856)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 394.079 CPU sec, 39.190 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518077, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 391, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (662.07, 561.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 1433, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10611)
[0000][PE] mean and std.dev: (1919.43, 2213.28)
[0000][PE] low and high boundaries for proper pairs: (1, 14140)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1030, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (1042.33, 714.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 393.311 CPU sec, 40.062 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518419, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 274, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1489)
[0000][PE] mean and std.dev: (366.00, 283.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 390.695 CPU sec, 38.294 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518011, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 362, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (571.60, 587.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (177, 294, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1728)
[0000][PE] mean and std.dev: (300.91, 269.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2245)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 396.122 CPU sec, 42.131 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517908, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 348, 3652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10502)
[0000][PE] mean and std.dev: (1757.35, 2225.11)
[0000][PE] low and high boundaries for proper pairs: (1, 13927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 152, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (412.41, 544.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 401.933 CPU sec, 46.932 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517811, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 322, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2198)
[0000][PE] mean and std.dev: (439.35, 327.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 396.114 CPU sec, 49.654 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518074, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 246, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1619)
[0000][PE] mean and std.dev: (379.00, 356.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 69, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (282.67, 321.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2381)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 391.879 CPU sec, 39.455 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518040, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 679, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (685.43, 476.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 68, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (491.31, 682.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1581, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1774.58, 1161.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 399.560 CPU sec, 46.805 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518028, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 363, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (493.56, 482.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 358, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (691.67, 1180.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7626)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1112, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (1007.50, 701.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 405.766 CPU sec, 50.477 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517876, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 672, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (639.00, 557.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 304, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (176.62, 215.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 407.786 CPU sec, 47.411 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518146, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 390, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (731.73, 654.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1314, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1342.11, 511.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 405.679 CPU sec, 45.014 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517869, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 274, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (564.48, 662.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (212, 1111, 4367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12677)
[0000][PE] mean and std.dev: (2034.86, 2320.07)
[0000][PE] low and high boundaries for proper pairs: (1, 16832)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 400.296 CPU sec, 40.242 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517847, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 347, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (685.48, 691.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1472, 3086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (2031.94, 1506.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 401.607 CPU sec, 41.376 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518259, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 322, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (410.13, 291.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 616, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6534)
[0000][PE] mean and std.dev: (1206.69, 1385.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 410.185 CPU sec, 38.344 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517768, 19, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 363, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (352.18, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 568, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6761)
[0000][PE] mean and std.dev: (1360.47, 1739.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8912)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1081, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2309)
[0000][PE] mean and std.dev: (867.50, 391.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 418.640 CPU sec, 46.034 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518328, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 323, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (484.67, 495.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 293, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (431.09, 673.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 410.672 CPU sec, 36.420 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518548, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 300, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1526)
[0000][PE] mean and std.dev: (331.17, 270.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 317, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (208.50, 252.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3077)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 416.089 CPU sec, 33.169 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518102, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 331, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1048)
[0000][PE] mean and std.dev: (331.63, 199.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 515, 4137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11777)
[0000][PE] mean and std.dev: (1710.00, 2202.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15597)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 412.403 CPU sec, 38.535 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518049, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (542.17, 583.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 374, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (534.50, 515.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 414.851 CPU sec, 37.546 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517532, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 359, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (627.56, 695.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.12, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 417, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (721.94, 895.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 427.107 CPU sec, 34.690 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518303, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 368, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (759.53, 748.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 428.508 CPU sec, 46.857 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518507, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 279, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (561.84, 597.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 358, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (385.91, 433.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2488)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1242, 4765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12499)
[0000][PE] mean and std.dev: (2211.00, 2278.20)
[0000][PE] low and high boundaries for proper pairs: (1, 16366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 427.407 CPU sec, 43.695 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518086, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 339, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (254.12, 109.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (131, 575, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1134.90, 1356.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7435)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1593, 4618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12750)
[0000][PE] mean and std.dev: (2471.70, 2464.78)
[0000][PE] low and high boundaries for proper pairs: (1, 16816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 413.051 CPU sec, 36.410 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517651, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 411, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (603.74, 474.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 286, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10006)
[0000][PE] mean and std.dev: (1620.58, 2045.63)
[0000][PE] low and high boundaries for proper pairs: (1, 13340)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 710, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (924.09, 460.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 415.187 CPU sec, 31.640 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518206, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 310, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (757.44, 863.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 1780, 5816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17444)
[0000][PE] mean and std.dev: (2352.90, 2579.81)
[0000][PE] low and high boundaries for proper pairs: (1, 23258)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 418.993 CPU sec, 36.472 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518292, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 390, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2165)
[0000][PE] mean and std.dev: (412.53, 260.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1267, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (1661.25, 1321.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 425.497 CPU sec, 45.872 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518497, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 503, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (840.50, 781.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 487, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (650.40, 803.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1471, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (1378.20, 598.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 420.376 CPU sec, 33.873 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518131, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 246, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (389.62, 368.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 963, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8264)
[0000][PE] mean and std.dev: (2043.10, 2559.60)
[0000][PE] low and high boundaries for proper pairs: (1, 12282)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 428.636 CPU sec, 45.072 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518280, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 418, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (801.81, 905.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (359, 459, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (707.29, 722.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1011, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (1073.10, 449.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 411.856 CPU sec, 32.748 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518278, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 450, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (718.86, 591.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 425.721 CPU sec, 42.751 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518155, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 357, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (549.08, 490.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 1588, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8383)
[0000][PE] mean and std.dev: (1332.90, 1413.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11175)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 426.114 CPU sec, 40.754 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517605, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 331, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (313.95, 154.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.12, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 342, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (511.75, 581.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 429.993 CPU sec, 41.541 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517796, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 307, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1534)
[0000][PE] mean and std.dev: (416.56, 352.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 198, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (188.40, 200.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1364)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 433.528 CPU sec, 41.800 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517992, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 305, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1126)
[0000][PE] mean and std.dev: (277.77, 159.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 389, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6672)
[0000][PE] mean and std.dev: (708.10, 822.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8833)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 433.009 CPU sec, 46.555 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517811, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 390, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (628.04, 526.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (325, 521, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1143.40, 1440.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7273)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 419.581 CPU sec, 34.576 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518188, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 310, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (461.53, 456.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 1548, 4332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12380)
[0000][PE] mean and std.dev: (1841.55, 1746.38)
[0000][PE] low and high boundaries for proper pairs: (1, 16404)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1292, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (1719.50, 1015.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 423.056 CPU sec, 34.321 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518080, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 293, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1679)
[0000][PE] mean and std.dev: (407.30, 383.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 660, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7510)
[0000][PE] mean and std.dev: (1309.69, 1580.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10001)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 429.475 CPU sec, 45.732 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517986, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 367, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (324.43, 79.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 199, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (438.00, 555.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1199, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (926.00, 438.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 425.583 CPU sec, 35.643 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518171, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 578, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (749.89, 562.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (370, 1118, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1347.62, 1222.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7678)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 412.274 CPU sec, 34.549 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518078, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 372, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (705.79, 812.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 452, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1032.08, 1496.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8661)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 407.580 CPU sec, 33.425 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518312, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 329, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1348)
[0000][PE] mean and std.dev: (295.50, 165.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 399.992 CPU sec, 39.327 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517789, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 343, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (520.72, 439.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 376, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7566)
[0000][PE] mean and std.dev: (698.09, 876.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10084)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1941, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1971.45, 959.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 397.589 CPU sec, 37.726 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518303, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 442, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (863.33, 974.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (743, 1280, 4515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12059)
[0000][PE] mean and std.dev: (2356.38, 2444.21)
[0000][PE] low and high boundaries for proper pairs: (1, 15831)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1093, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7176)
[0000][PE] mean and std.dev: (1659.00, 1748.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 406.579 CPU sec, 34.380 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517958, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 375, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (358.67, 290.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1249, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7099)
[0000][PE] mean and std.dev: (1837.83, 1552.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 405.678 CPU sec, 43.010 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517846, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 623, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (751.53, 481.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 982, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7777)
[0000][PE] mean and std.dev: (1555.15, 2018.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10326)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 404.126 CPU sec, 39.655 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517709, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 360, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (345.73, 205.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 323, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (320.10, 427.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1652, 3444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8662)
[0000][PE] mean and std.dev: (2018.25, 1834.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 398.726 CPU sec, 31.201 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517565, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 318, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 854)
[0000][PE] mean and std.dev: (249.62, 146.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.67, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 558, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (642.24, 636.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 404.006 CPU sec, 38.998 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518046, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 326, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (517.92, 477.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 598, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8145)
[0000][PE] mean and std.dev: (1358.14, 1553.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10846)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 402.087 CPU sec, 43.488 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518167, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 276, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (452.31, 467.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 968, 3856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11466)
[0000][PE] mean and std.dev: (1560.90, 1763.69)
[0000][PE] low and high boundaries for proper pairs: (1, 15271)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1447, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (1464.60, 744.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 400.700 CPU sec, 35.958 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519018, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 248, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (9, 509)
[0000][PE] mean and std.dev: (242.93, 67.89)
[0000][PE] low and high boundaries for proper pairs: (1, 609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 473, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7154)
[0000][PE] mean and std.dev: (961.00, 1426.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1639, 1732, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1996.18, 1005.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 402.505 CPU sec, 38.410 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518206, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 268, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (309.40, 155.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 396.578 CPU sec, 37.107 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517984, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 313, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (250.67, 105.20)
[0000][PE] low and high boundaries for proper pairs: (1, 847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 472, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (368.40, 481.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1247, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1220.64, 691.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 397.205 CPU sec, 40.799 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517450, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 954, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (836.30, 593.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 518, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (955.90, 1461.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1286, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (1100.89, 465.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 404.114 CPU sec, 40.791 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518093, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 353, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (431.53, 346.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 410.524 CPU sec, 47.595 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517773, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 267, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 780)
[0000][PE] mean and std.dev: (240.81, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 413.929 CPU sec, 52.332 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517894, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 435, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (514.18, 379.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 787, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (751.08, 695.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 396.474 CPU sec, 43.012 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517930, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 559, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (798.24, 823.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1577, 3833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8887)
[0000][PE] mean and std.dev: (2117.30, 1324.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 409.383 CPU sec, 35.279 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517971, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 382, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (515.38, 458.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 404, 3753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11143)
[0000][PE] mean and std.dev: (1460.46, 1988.83)
[0000][PE] low and high boundaries for proper pairs: (1, 14838)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 401.272 CPU sec, 44.941 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517914, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 280, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (304.95, 192.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 834, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1256.00, 1130.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 402.426 CPU sec, 42.137 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518189, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 308, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (577.33, 514.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1570, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1557.31, 661.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 400.536 CPU sec, 38.835 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517887, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 419, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (577.00, 517.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 787, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (873.08, 1187.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 402.957 CPU sec, 44.441 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518207, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 304, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 686)
[0000][PE] mean and std.dev: (254.83, 83.82)
[0000][PE] low and high boundaries for proper pairs: (1, 840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 510, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (639.22, 784.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 400.838 CPU sec, 38.960 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517858, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 511, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (748.30, 637.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.17, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 110, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (410.60, 550.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 407.250 CPU sec, 46.477 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518213, 10, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 378, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (682.64, 906.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 231, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1491)
[0000][PE] mean and std.dev: (144.75, 186.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 392.669 CPU sec, 33.027 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517937, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 292, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (530.73, 639.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 184, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1626)
[0000][PE] mean and std.dev: (289.09, 348.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2165)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 402.353 CPU sec, 35.234 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517880, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 458, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1800)
[0000][PE] mean and std.dev: (410.77, 216.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 412.490 CPU sec, 47.667 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518611, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 337, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (650.15, 592.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 145, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1874)
[0000][PE] mean and std.dev: (379.17, 583.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2713)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1445, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1061.86, 549.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 417.396 CPU sec, 54.283 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517754, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 312, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (526.41, 589.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 468, 4792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14256)
[0000][PE] mean and std.dev: (2151.12, 2882.42)
[0000][PE] low and high boundaries for proper pairs: (1, 18988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1539, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1683.27, 886.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 414.429 CPU sec, 49.743 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517884, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 436, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (805.63, 754.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 1825, 3789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11325)
[0000][PE] mean and std.dev: (2339.71, 2523.38)
[0000][PE] low and high boundaries for proper pairs: (1, 15093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1482, 3333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7997)
[0000][PE] mean and std.dev: (1929.40, 1331.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 412.229 CPU sec, 53.318 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518281, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 348, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (324.37, 133.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (654, 1367, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7209)
[0000][PE] mean and std.dev: (1771.73, 1323.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9394)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 407.576 CPU sec, 42.461 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518235, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 414, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (668.00, 628.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 406.054 CPU sec, 45.719 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517809, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 346, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1199)
[0000][PE] mean and std.dev: (331.57, 207.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 35, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (431.10, 653.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3365)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.526 CPU sec, 42.227 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517810, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 345, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (885.81, 1058.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 405.871 CPU sec, 42.181 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518048, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 293, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (536.30, 498.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 566, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6464)
[0000][PE] mean and std.dev: (1063.10, 1640.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 405.079 CPU sec, 41.072 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518087, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 355, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (647.75, 545.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 740, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8428)
[0000][PE] mean and std.dev: (1792.67, 2575.15)
[0000][PE] low and high boundaries for proper pairs: (1, 12093)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 407.469 CPU sec, 43.855 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518090, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 398, 2991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8413)
[0000][PE] mean and std.dev: (1424.90, 1653.78)
[0000][PE] low and high boundaries for proper pairs: (1, 11124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 485, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (772.70, 1018.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 406.375 CPU sec, 43.548 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518189, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 305, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6146)
[0000][PE] mean and std.dev: (907.05, 1278.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 507, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7120)
[0000][PE] mean and std.dev: (1682.40, 2139.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10241)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 419.775 CPU sec, 50.278 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517603, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 305, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (244.50, 126.13)
[0000][PE] low and high boundaries for proper pairs: (1, 977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (274, 629, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7309)
[0000][PE] mean and std.dev: (1203.33, 1635.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9654)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1197, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1360.21, 982.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 411.561 CPU sec, 48.357 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517885, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 356, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (501.83, 308.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 359, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (430.94, 507.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 417.186 CPU sec, 48.178 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517833, 14, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 347, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (594.70, 551.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 552, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (704.50, 696.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1018, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (1424.35, 808.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 409.001 CPU sec, 50.430 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518031, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 429, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (728.12, 747.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 1485, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8970)
[0000][PE] mean and std.dev: (2126.50, 2223.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11861)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 416.928 CPU sec, 49.700 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518648, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 747, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1067.27, 1009.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 413, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (365.17, 350.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2488)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1139, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1406.09, 762.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 406.289 CPU sec, 52.503 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517799, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 331, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (653.64, 674.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 479, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (266.90, 282.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 412.317 CPU sec, 49.142 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518043, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 320, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (485.24, 351.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 811, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8752)
[0000][PE] mean and std.dev: (1803.31, 1846.84)
[0000][PE] low and high boundaries for proper pairs: (1, 11548)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1295, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1548.10, 1490.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 407.743 CPU sec, 49.799 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517954, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 344, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (378.00, 236.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 395, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7446)
[0000][PE] mean and std.dev: (1594.92, 2431.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11321)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1257, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1030.62, 453.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 412.333 CPU sec, 56.127 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518328, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 299, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (816.41, 973.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (558, 983, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1318.09, 1203.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 410.231 CPU sec, 48.651 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518131, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 367, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (681.43, 679.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 644, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (824.25, 773.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 413.879 CPU sec, 49.345 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518183, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 358, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (975.43, 1085.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 407.543 CPU sec, 46.898 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518164, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 395, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2061)
[0000][PE] mean and std.dev: (515.74, 419.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (397, 611, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2527)
[0000][PE] mean and std.dev: (467.20, 341.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 405.327 CPU sec, 44.017 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517839, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 815, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (885.00, 705.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 1292, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6641)
[0000][PE] mean and std.dev: (1512.50, 1719.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8847)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 396.762 CPU sec, 32.877 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518239, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 402, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2424)
[0000][PE] mean and std.dev: (585.27, 592.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 217, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1754)
[0000][PE] mean and std.dev: (186.00, 222.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2334)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 399.102 CPU sec, 46.092 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517896, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 371, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (735.20, 755.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 222, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (380.90, 514.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1789, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6764)
[0000][PE] mean and std.dev: (2001.67, 1638.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 411.683 CPU sec, 39.617 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518233, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 449, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (591.91, 557.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 119.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 408, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1481)
[0000][PE] mean and std.dev: (307.67, 340.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1974)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 406.333 CPU sec, 51.716 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518145, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 288, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 976)
[0000][PE] mean and std.dev: (255.64, 109.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.48, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 423, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9372)
[0000][PE] mean and std.dev: (1702.67, 2277.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12493)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1292, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1060.00, 602.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 403.377 CPU sec, 48.037 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517898, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 1078, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6727)
[0000][PE] mean and std.dev: (1379.88, 1608.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1746, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1646.36, 684.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 403.312 CPU sec, 45.603 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517881, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 381, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1565)
[0000][PE] mean and std.dev: (446.92, 283.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 1183, 3633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10417)
[0000][PE] mean and std.dev: (2162.69, 2312.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13809)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 405.613 CPU sec, 46.045 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518107, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 333, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2484)
[0000][PE] mean and std.dev: (456.42, 362.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 612, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (884.45, 808.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6584)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1520, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1770.67, 1763.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 406.664 CPU sec, 45.396 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518371, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 595, 3646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10414)
[0000][PE] mean and std.dev: (2123.42, 2661.42)
[0000][PE] low and high boundaries for proper pairs: (1, 13798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 525, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (626.69, 673.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1300, 3159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8261)
[0000][PE] mean and std.dev: (1802.45, 1616.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 400.559 CPU sec, 45.909 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518077, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 294, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (262.00, 132.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 3, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (378.64, 529.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 398.352 CPU sec, 38.245 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518360, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 350, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 697)
[0000][PE] mean and std.dev: (305.92, 89.57)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 1183, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11041)
[0000][PE] mean and std.dev: (1865.25, 2357.67)
[0000][PE] low and high boundaries for proper pairs: (1, 14658)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 398.559 CPU sec, 44.429 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518154, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 384, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (779.92, 883.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 667, 3582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10704)
[0000][PE] mean and std.dev: (2141.00, 3143.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14715)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 1366, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5832)
[0000][PE] mean and std.dev: (1274.83, 1010.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 403.827 CPU sec, 41.887 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518088, 20, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 296, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1843)
[0000][PE] mean and std.dev: (416.48, 386.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 461, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6981)
[0000][PE] mean and std.dev: (1046.72, 1500.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9215)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1100, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 2197)
[0000][PE] mean and std.dev: (979.78, 252.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 409.523 CPU sec, 51.168 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518029, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 483, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2211)
[0000][PE] mean and std.dev: (547.58, 465.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 557, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (768.23, 1008.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 401.600 CPU sec, 43.852 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518021, 17, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 297, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (303.13, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 456, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (536.64, 506.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 408.861 CPU sec, 46.673 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518094, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 387, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (604.21, 512.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 129, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (879.61, 1306.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7098)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1103, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1064.60, 589.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 406.050 CPU sec, 36.673 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518384, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 295, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1355)
[0000][PE] mean and std.dev: (339.65, 224.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 378, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (480.31, 528.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 1723, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1355.60, 825.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 406.002 CPU sec, 43.842 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518063, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 963, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (807.12, 680.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 407.324 CPU sec, 47.652 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518092, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 364, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (616.38, 539.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 546, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (661.00, 760.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 406.203 CPU sec, 40.713 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518265, 12, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 318, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1182)
[0000][PE] mean and std.dev: (298.60, 128.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 395, 4098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12286)
[0000][PE] mean and std.dev: (1917.42, 2570.02)
[0000][PE] low and high boundaries for proper pairs: (1, 16380)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 404.652 CPU sec, 40.268 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518223, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 462, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (681.74, 719.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 627, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (480.67, 437.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1226, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5902)
[0000][PE] mean and std.dev: (1699.27, 1352.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 415.013 CPU sec, 44.074 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518503, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 287, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2593)
[0000][PE] mean and std.dev: (524.77, 530.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 409.273 CPU sec, 46.340 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517851, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 348, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1441)
[0000][PE] mean and std.dev: (337.81, 189.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 441, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6359)
[0000][PE] mean and std.dev: (842.45, 1397.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8477)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 406.917 CPU sec, 51.736 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517996, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 326, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (666.56, 903.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.80, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1387, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1575.06, 1281.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 407.468 CPU sec, 40.409 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518027, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 388, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (535.55, 467.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 619, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5934)
[0000][PE] mean and std.dev: (885.69, 1013.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7907)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1747, 4285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10511)
[0000][PE] mean and std.dev: (2666.50, 2474.74)
[0000][PE] low and high boundaries for proper pairs: (1, 13624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 413.261 CPU sec, 45.984 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517698, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 335, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (589.61, 609.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (448, 1085, 5603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15913)
[0000][PE] mean and std.dev: (2810.86, 3323.61)
[0000][PE] low and high boundaries for proper pairs: (1, 21068)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 412.439 CPU sec, 36.384 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517672, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 323, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (824.94, 1005.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 1186, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7947)
[0000][PE] mean and std.dev: (1428.44, 1369.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10474)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 2122, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6322)
[0000][PE] mean and std.dev: (1691.90, 1061.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 405.235 CPU sec, 30.614 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517997, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 403, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (615.64, 525.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 639, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8594)
[0000][PE] mean and std.dev: (1211.80, 1392.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11454)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 2432, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (2083.33, 1498.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 416.639 CPU sec, 38.035 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518387, 15, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 787, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (725.71, 602.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 283, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (487.15, 591.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 413.725 CPU sec, 37.929 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517942, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 347, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (762.21, 777.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 402, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (440.42, 425.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1252, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1442.46, 933.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 413.113 CPU sec, 33.922 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518160, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 236, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (280.00, 115.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 409.709 CPU sec, 37.774 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517882, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 305, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2107)
[0000][PE] mean and std.dev: (508.50, 449.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 1182, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (987.85, 768.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 404.444 CPU sec, 29.382 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518377, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 342, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (430.67, 352.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 408.253 CPU sec, 28.168 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518235, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 330, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (501.00, 480.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1776, 5085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13205)
[0000][PE] mean and std.dev: (2902.85, 2552.84)
[0000][PE] low and high boundaries for proper pairs: (1, 17265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 411.254 CPU sec, 29.153 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517948, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 349, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1414)
[0000][PE] mean and std.dev: (404.87, 287.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 403, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (484.20, 495.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 409.623 CPU sec, 30.686 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517728, 13, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 243, 4943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14819)
[0000][PE] mean and std.dev: (1344.54, 2173.96)
[0000][PE] low and high boundaries for proper pairs: (1, 19757)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1148, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1227.33, 1142.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 406.083 CPU sec, 25.859 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517896, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 359, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (480.95, 540.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 652, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6298)
[0000][PE] mean and std.dev: (1393.21, 1718.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8394)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 417.842 CPU sec, 31.396 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518268, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 465, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (805.29, 724.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 409.180 CPU sec, 27.455 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517769, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 344, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (468.71, 381.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 333, 3673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10597)
[0000][PE] mean and std.dev: (1594.77, 2075.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14059)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 411.017 CPU sec, 34.402 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518002, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 469, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (630.00, 462.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 23, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6528)
[0000][PE] mean and std.dev: (903.42, 1439.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 406.567 CPU sec, 31.481 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517923, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 314, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (315.47, 223.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1291, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1407.42, 935.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 408.346 CPU sec, 30.285 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518238, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 347, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (629.45, 629.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 831, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6702)
[0000][PE] mean and std.dev: (1151.29, 1164.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8928)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 413.238 CPU sec, 34.575 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517648, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 336, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6106)
[0000][PE] mean and std.dev: (1006.44, 1218.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 447, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (922.25, 1139.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 416.116 CPU sec, 34.804 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518407, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 587, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (742.88, 647.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (620, 702, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1073.60, 936.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1400, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7240)
[0000][PE] mean and std.dev: (1676.36, 1473.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 408.205 CPU sec, 32.566 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518015, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 378, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1078)
[0000][PE] mean and std.dev: (321.93, 147.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (428, 837, 3250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8894)
[0000][PE] mean and std.dev: (1727.64, 1898.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11716)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1964, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7323)
[0000][PE] mean and std.dev: (1594.30, 1257.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 416.803 CPU sec, 45.251 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517550, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 441, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (616.18, 603.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 475, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8074)
[0000][PE] mean and std.dev: (1484.42, 2103.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10760)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1271, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6427)
[0000][PE] mean and std.dev: (1444.54, 915.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 418.623 CPU sec, 44.439 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517953, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 325, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (580.00, 609.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (539, 1746, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6521)
[0000][PE] mean and std.dev: (1526.50, 1134.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8515)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 408.132 CPU sec, 43.770 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518007, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 815, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (781.65, 695.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 204, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (245.00, 297.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 418.096 CPU sec, 40.970 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518144, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 310, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (410.16, 372.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.35, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 260, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (459.00, 580.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 415.279 CPU sec, 50.887 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517966, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 467, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (739.57, 757.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 404, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (424.69, 490.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1202, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1337.70, 790.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 411.436 CPU sec, 58.886 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517982, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 262, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (347.39, 257.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.75, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 412.509 CPU sec, 63.380 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518205, 18, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 269, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 727)
[0000][PE] mean and std.dev: (289.62, 136.66)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 728, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6242)
[0000][PE] mean and std.dev: (1466.78, 1895.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1065, 5053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13303)
[0000][PE] mean and std.dev: (2384.46, 2154.29)
[0000][PE] low and high boundaries for proper pairs: (1, 17428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 418.025 CPU sec, 68.538 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518290, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 309, 754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (297.33, 150.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (293, 788, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7430)
[0000][PE] mean and std.dev: (1717.56, 2102.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10127)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 415.516 CPU sec, 69.047 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517845, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 278, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (990.62, 1186.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1147, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (1260.30, 802.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 412.955 CPU sec, 69.327 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518044, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 382, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (309.06, 98.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 607, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (978.86, 1118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6449)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 416.863 CPU sec, 71.973 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518029, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 319, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1345)
[0000][PE] mean and std.dev: (399.69, 255.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 556, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8487)
[0000][PE] mean and std.dev: (1231.35, 1369.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11310)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1871, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6631)
[0000][PE] mean and std.dev: (1967.92, 1405.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 422.189 CPU sec, 62.646 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517960, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 329, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1836)
[0000][PE] mean and std.dev: (418.25, 299.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 899, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7995)
[0000][PE] mean and std.dev: (1183.11, 1393.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10653)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 410.085 CPU sec, 67.613 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517962, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 327, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (688.95, 835.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 1720, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6568)
[0000][PE] mean and std.dev: (1345.00, 1306.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8710)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1244, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6340)
[0000][PE] mean and std.dev: (1764.17, 954.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 412.353 CPU sec, 72.136 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518052, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 355, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (383.64, 226.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.61, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (396, 471, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (875.25, 900.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 415.670 CPU sec, 66.873 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518201, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 315, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (753.39, 835.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (219, 863, 4551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13215)
[0000][PE] mean and std.dev: (1997.65, 2147.09)
[0000][PE] low and high boundaries for proper pairs: (1, 17547)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1320, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6547)
[0000][PE] mean and std.dev: (1785.50, 1271.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 419.618 CPU sec, 73.196 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518173, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 311, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1541)
[0000][PE] mean and std.dev: (291.73, 132.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 378, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (570.69, 816.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1385, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1394.10, 1138.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 413.849 CPU sec, 62.289 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518087, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 882, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1155.86, 1121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 479, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.66, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 894, 4989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14355)
[0000][PE] mean and std.dev: (2349.91, 2752.01)
[0000][PE] low and high boundaries for proper pairs: (1, 19038)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 418.830 CPU sec, 77.585 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518056, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 345, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (570.82, 604.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 778, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8993)
[0000][PE] mean and std.dev: (1488.00, 1905.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11986)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1421, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (1186.56, 748.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 413.326 CPU sec, 66.941 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518293, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 323, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (597.83, 658.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 411.237 CPU sec, 65.557 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518231, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 233, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (245.44, 115.53)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 407.018 CPU sec, 52.840 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518052, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 292, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 868)
[0000][PE] mean and std.dev: (265.83, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 352, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (663.56, 923.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 408.570 CPU sec, 39.662 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518555, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 401, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (738.70, 790.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 824, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8026)
[0000][PE] mean and std.dev: (1345.80, 1664.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10701)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1059, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (1078.60, 508.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 412.608 CPU sec, 39.937 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517873, 19, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 326, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (374.08, 263.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 293, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (778.74, 1082.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1756, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7148)
[0000][PE] mean and std.dev: (1804.08, 1094.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 416.393 CPU sec, 43.638 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518213, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 369, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1763)
[0000][PE] mean and std.dev: (460.63, 418.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.13, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 805, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (782.90, 710.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 558, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (990.50, 897.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 419.798 CPU sec, 40.005 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517953, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 321, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (307.87, 152.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 195, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (555.73, 746.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 414.152 CPU sec, 39.250 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517837, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 381, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (585.41, 445.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 70, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (975.18, 1503.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7150)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 409.981 CPU sec, 32.757 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517992, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 317, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 959)
[0000][PE] mean and std.dev: (290.00, 139.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 680, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (615.00, 540.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 410.020 CPU sec, 44.220 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517823, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 481, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6964)
[0000][PE] mean and std.dev: (988.71, 1048.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 341, 3577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10691)
[0000][PE] mean and std.dev: (1272.54, 1654.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14248)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 408.494 CPU sec, 37.259 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517926, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 410, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (532.13, 495.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 594, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5723)
[0000][PE] mean and std.dev: (843.80, 1250.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7602)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 863, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6280)
[0000][PE] mean and std.dev: (1170.30, 917.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 405.524 CPU sec, 35.663 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518323, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 395, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (316.57, 142.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (162, 939, 3289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9543)
[0000][PE] mean and std.dev: (1579.19, 2055.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12670)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1618, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1592.91, 1384.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 408.116 CPU sec, 39.474 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518075, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 404, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (643.30, 553.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.72, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 1014, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6899)
[0000][PE] mean and std.dev: (1588.25, 1824.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9063)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1462, 3687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9215)
[0000][PE] mean and std.dev: (1936.64, 1498.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 409.939 CPU sec, 37.809 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517926, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 335, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (501.08, 471.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 377, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1824)
[0000][PE] mean and std.dev: (321.78, 341.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2430)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1392, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1502.42, 879.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 410.395 CPU sec, 35.135 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518580, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 362, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (486.20, 506.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 752, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3458)
[0000][PE] mean and std.dev: (515.83, 553.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1529, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (1306.33, 543.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 406.720 CPU sec, 41.201 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518036, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 334, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (555.17, 548.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 602, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (1345.46, 1687.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1355, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 2717)
[0000][PE] mean and std.dev: (1254.90, 422.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 411.400 CPU sec, 37.677 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517794, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 723, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (646.18, 534.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 835, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1225.00, 1316.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7041)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 407.947 CPU sec, 36.986 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518424, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 297, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (639.05, 803.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 589, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (785.50, 761.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1476, 1666, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 3582)
[0000][PE] mean and std.dev: (1521.60, 683.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 409.265 CPU sec, 35.281 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517468, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 258, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 906)
[0000][PE] mean and std.dev: (261.41, 150.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (128, 399, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (978.25, 1171.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8944)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1047, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1382.64, 1030.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 412.778 CPU sec, 36.406 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518233, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 225, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (258.41, 189.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 620, 5244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15660)
[0000][PE] mean and std.dev: (2011.00, 2367.47)
[0000][PE] low and high boundaries for proper pairs: (1, 20868)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1780, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1806.50, 897.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 408.316 CPU sec, 36.817 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517641, 16, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 470, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (469.11, 293.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (551, 761, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (737.29, 484.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1818, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1674.00, 1030.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 406.773 CPU sec, 28.922 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518062, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 334, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1808)
[0000][PE] mean and std.dev: (432.06, 325.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (447, 1190, 3596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9894)
[0000][PE] mean and std.dev: (1839.82, 1996.42)
[0000][PE] low and high boundaries for proper pairs: (1, 13043)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 2051, 4514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10882)
[0000][PE] mean and std.dev: (2406.82, 1542.76)
[0000][PE] low and high boundaries for proper pairs: (1, 14066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 405.233 CPU sec, 30.669 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517897, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 496, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (933.00, 1221.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.81, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 403.809 CPU sec, 27.640 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517657, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 275, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1542)
[0000][PE] mean and std.dev: (340.95, 295.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 464, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1265.00, 1953.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9090)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 403.874 CPU sec, 29.406 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518092, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 338, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (290.08, 133.52)
[0000][PE] low and high boundaries for proper pairs: (1, 957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 206, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (390.67, 660.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1697, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1547.00, 826.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 404.780 CPU sec, 26.488 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518191, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 645, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1074.41, 1200.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 432, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9604)
[0000][PE] mean and std.dev: (1693.33, 2050.71)
[0000][PE] low and high boundaries for proper pairs: (1, 12734)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1987, 2936, 6120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14386)
[0000][PE] mean and std.dev: (3566.83, 2324.98)
[0000][PE] low and high boundaries for proper pairs: (1, 18519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 408.204 CPU sec, 31.489 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518179, 21, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 348, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (591.68, 536.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 397, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8262)
[0000][PE] mean and std.dev: (1424.20, 1946.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11009)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 406.681 CPU sec, 35.322 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518042, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 334, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (619.83, 614.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1570, 3390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8902)
[0000][PE] mean and std.dev: (2281.75, 2478.91)
[0000][PE] low and high boundaries for proper pairs: (1, 12197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 402.702 CPU sec, 29.635 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517459, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 387, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (679.45, 755.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1451, 3182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7474)
[0000][PE] mean and std.dev: (1863.33, 1332.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 404.794 CPU sec, 30.826 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518468, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 287, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (302.81, 199.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (94, 519, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (350.00, 302.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 409.335 CPU sec, 46.187 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518142, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 387, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (468.56, 333.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 405.763 CPU sec, 36.123 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518106, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 552, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (634.09, 470.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.60, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 421, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (570.76, 659.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 410.289 CPU sec, 38.844 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517700, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 378, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (555.60, 485.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 173, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6925)
[0000][PE] mean and std.dev: (1253.91, 1566.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9220)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1382, 4403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11451)
[0000][PE] mean and std.dev: (2266.67, 1955.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 408.549 CPU sec, 39.139 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517654, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 402, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (504.32, 395.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 893, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1062.85, 1271.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7219)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 406.416 CPU sec, 32.770 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518682, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 294, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (371.43, 235.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1341, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (1197.44, 433.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 398.003 CPU sec, 27.300 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517916, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 238, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (217.87, 108.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 505, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (647.38, 692.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5831)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1375, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1238.00, 876.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 396.409 CPU sec, 26.853 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518079, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 273, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (257.50, 146.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 397.821 CPU sec, 26.972 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517951, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 343, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1076.33, 1253.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.46, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 871, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (847.94, 776.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 403.338 CPU sec, 29.945 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518098, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 471, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (719.92, 590.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 435, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2305)
[0000][PE] mean and std.dev: (339.44, 341.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1040, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1127.67, 1061.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 399.896 CPU sec, 30.163 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517769, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 304, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (556.52, 595.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 102, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (178.11, 287.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1241, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1183.11, 419.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 400.499 CPU sec, 28.631 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518226, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 304, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (514.47, 538.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 745, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (875.15, 668.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 408.148 CPU sec, 29.688 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518380, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 321, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (317.91, 119.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 404.743 CPU sec, 27.878 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517432, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 587, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6511)
[0000][PE] mean and std.dev: (1270.22, 1647.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 1062, 3297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9873)
[0000][PE] mean and std.dev: (1977.08, 2736.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13161)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1729, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5895)
[0000][PE] mean and std.dev: (1635.60, 962.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 405.337 CPU sec, 27.112 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518057, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 287, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (297.58, 238.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 410.127 CPU sec, 30.978 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517786, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 442, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (860.79, 891.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 58, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (174.80, 277.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1303, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1202.47, 536.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 413.981 CPU sec, 28.364 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517687, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 358, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (570.94, 556.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 983, 4420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13256)
[0000][PE] mean and std.dev: (2043.58, 2711.86)
[0000][PE] low and high boundaries for proper pairs: (1, 17674)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 407.968 CPU sec, 29.063 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517846, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 370, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (636.81, 533.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 404.354 CPU sec, 27.923 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518178, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 313, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 985)
[0000][PE] mean and std.dev: (321.38, 174.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (217, 703, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8677)
[0000][PE] mean and std.dev: (1425.00, 1589.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1147, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1493.70, 1178.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.014 CPU sec, 26.840 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517931, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 349, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (606.81, 590.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 375, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8211)
[0000][PE] mean and std.dev: (1221.65, 1650.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10943)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 416.764 CPU sec, 31.132 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518185, 17, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 324, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 978)
[0000][PE] mean and std.dev: (261.65, 163.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 20, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1467)
[0000][PE] mean and std.dev: (149.13, 233.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1955)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 411.697 CPU sec, 31.427 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518079, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 270, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1412)
[0000][PE] mean and std.dev: (354.29, 307.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 1212, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (1069.64, 568.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 411.264 CPU sec, 29.668 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518171, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 278, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (706.57, 803.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 821, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6320)
[0000][PE] mean and std.dev: (1208.08, 1379.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8426)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 404.832 CPU sec, 29.917 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517845, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 390, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (611.20, 479.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 408.114 CPU sec, 27.543 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518485, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 339, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (391.74, 257.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 369, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (305.55, 328.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1304, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (434, 2254)
[0000][PE] mean and std.dev: (1308.83, 112.19)
[0000][PE] low and high boundaries for proper pairs: (70, 2618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 407.292 CPU sec, 30.097 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518338, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 287, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (418.74, 406.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.80, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 654, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1058.85, 1171.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 399.860 CPU sec, 26.637 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518180, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 342, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (532.73, 530.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 404.534 CPU sec, 27.621 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518212, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 344, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1052)
[0000][PE] mean and std.dev: (320.44, 192.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (128, 408, 3795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11129)
[0000][PE] mean and std.dev: (1572.23, 2465.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14796)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 402.235 CPU sec, 26.029 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517831, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 336, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (716.40, 782.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 475, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9582)
[0000][PE] mean and std.dev: (1791.45, 1993.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12744)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 406.677 CPU sec, 29.273 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518423, 21, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 386, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (912.06, 996.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 587, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (686.20, 709.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 446.188 CPU sec, 42.361 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518194, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 289, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (422.50, 450.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (224, 1473, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7925)
[0000][PE] mean and std.dev: (1421.45, 1262.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10492)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1425, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1204.73, 644.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 408.240 CPU sec, 30.599 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517959, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 430, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (706.71, 682.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 663, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2035)
[0000][PE] mean and std.dev: (451.38, 294.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1727, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1745.67, 1367.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 409.925 CPU sec, 34.648 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517778, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 359, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 816)
[0000][PE] mean and std.dev: (353.83, 121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 541, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7602)
[0000][PE] mean and std.dev: (1138.00, 1467.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10129)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 412.748 CPU sec, 39.247 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518065, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 324, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (291.65, 146.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 411.722 CPU sec, 43.064 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517931, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 256, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (452.77, 428.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.80, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1815, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1874.90, 1142.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 412.634 CPU sec, 35.685 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517941, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 336, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (473.95, 421.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (438, 464, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (443.44, 311.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3038)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 2026, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7152)
[0000][PE] mean and std.dev: (2160.90, 1476.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 407.325 CPU sec, 35.081 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518067, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 328, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (609.72, 623.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 515, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6356)
[0000][PE] mean and std.dev: (887.31, 1112.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 413.006 CPU sec, 45.933 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518142, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 367, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1440)
[0000][PE] mean and std.dev: (406.83, 262.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 412.797 CPU sec, 42.294 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518321, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 343, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2502)
[0000][PE] mean and std.dev: (466.35, 465.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 410.496 CPU sec, 41.551 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518385, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 394, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1397)
[0000][PE] mean and std.dev: (456.18, 317.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 343, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9556)
[0000][PE] mean and std.dev: (1186.54, 1780.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12741)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 413.215 CPU sec, 38.354 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517485, 19, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 420, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (587.56, 453.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 930, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7479)
[0000][PE] mean and std.dev: (1662.11, 1869.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9870)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 893, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2120)
[0000][PE] mean and std.dev: (909.18, 450.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 411.582 CPU sec, 36.981 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517629, 22, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 220, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 858)
[0000][PE] mean and std.dev: (216.21, 76.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 491, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (951.19, 1229.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 412.907 CPU sec, 39.240 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517853, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 271, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (591.95, 736.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (369, 546, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8484)
[0000][PE] mean and std.dev: (1792.00, 1871.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11189)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 989, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1219.38, 861.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 405.920 CPU sec, 33.864 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518482, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 324, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (259.00, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 2134, 5568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16196)
[0000][PE] mean and std.dev: (2522.08, 2448.08)
[0000][PE] low and high boundaries for proper pairs: (1, 21510)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 407.505 CPU sec, 32.918 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517876, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 426, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (518.55, 389.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (293, 1133, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6263)
[0000][PE] mean and std.dev: (1229.38, 1274.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8253)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 408.063 CPU sec, 33.599 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518060, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 389, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (294.85, 167.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 558, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (504.27, 438.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2979)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 408.406 CPU sec, 28.363 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518150, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 398, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (506.75, 371.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1713, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1531.30, 776.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 404.254 CPU sec, 29.145 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518192, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 416, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (601.05, 503.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 398, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (622.55, 885.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 409.452 CPU sec, 28.161 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518677, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1366, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1048.18, 972.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1298, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (1239.36, 654.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 402.389 CPU sec, 29.118 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517739, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 423, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (325.55, 139.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 174, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (501.31, 619.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1567, 5827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14867)
[0000][PE] mean and std.dev: (2896.46, 2499.53)
[0000][PE] low and high boundaries for proper pairs: (1, 19387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 408.470 CPU sec, 26.525 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517834, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 317, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1740)
[0000][PE] mean and std.dev: (394.46, 269.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (75, 432, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (594.17, 773.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 409.800 CPU sec, 29.173 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518237, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 313, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (245.92, 91.59)
[0000][PE] low and high boundaries for proper pairs: (1, 883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 347, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (959.25, 1173.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 401.762 CPU sec, 26.154 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518476, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 319, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (506.79, 520.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (82, 632, 4064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12028)
[0000][PE] mean and std.dev: (2186.64, 2685.57)
[0000][PE] low and high boundaries for proper pairs: (1, 16010)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1824, 7167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19327)
[0000][PE] mean and std.dev: (3374.55, 3014.64)
[0000][PE] low and high boundaries for proper pairs: (1, 25407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 406.918 CPU sec, 28.622 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518226, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 445, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (753.06, 771.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.81, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 405.098 CPU sec, 27.385 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517864, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 318, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (618.50, 674.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1350, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8952)
[0000][PE] mean and std.dev: (1575.00, 1244.68)
[0000][PE] low and high boundaries for proper pairs: (1, 11712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 404.112 CPU sec, 25.035 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518416, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 340, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (692.81, 840.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.11, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (618, 702, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (631.89, 396.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 403.288 CPU sec, 26.587 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517913, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 405, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (869.60, 922.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.76, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 279, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (272.78, 215.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1881)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1094, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1140.89, 741.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 404.446 CPU sec, 27.856 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518056, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 380, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (753.17, 938.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1453, 1813, 5870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14704)
[0000][PE] mean and std.dev: (3155.15, 2458.40)
[0000][PE] low and high boundaries for proper pairs: (1, 19121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 401.735 CPU sec, 25.084 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518110, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 343, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (839.50, 841.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 447, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8462)
[0000][PE] mean and std.dev: (1250.28, 1614.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11278)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1942, 4296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11388)
[0000][PE] mean and std.dev: (2566.30, 2335.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 406.934 CPU sec, 29.275 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518670, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 422, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (553.59, 454.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 490, 3427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9619)
[0000][PE] mean and std.dev: (1746.85, 1873.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12715)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 970, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1146.36, 731.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 401.914 CPU sec, 25.774 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518398, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 358, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (417.39, 387.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 295, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1375)
[0000][PE] mean and std.dev: (167.60, 197.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1832)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 403.138 CPU sec, 27.918 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518062, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 293, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (593.39, 583.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (581, 744, 4912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13574)
[0000][PE] mean and std.dev: (2250.18, 2139.14)
[0000][PE] low and high boundaries for proper pairs: (1, 17905)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1099, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (68, 2433)
[0000][PE] mean and std.dev: (1056.11, 224.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 401.117 CPU sec, 25.021 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517835, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 372, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (506.50, 523.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 330, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (537.10, 596.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5961)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 409.274 CPU sec, 30.137 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517750, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 298, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (437.69, 330.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 685, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7581)
[0000][PE] mean and std.dev: (1016.76, 1340.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10100)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1096, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1438.09, 1022.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 400.256 CPU sec, 25.475 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517826, 15, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 321, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2580)
[0000][PE] mean and std.dev: (548.33, 540.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 353, 4660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13938)
[0000][PE] mean and std.dev: (1697.20, 2393.94)
[0000][PE] low and high boundaries for proper pairs: (1, 18577)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1138, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (222, 2187)
[0000][PE] mean and std.dev: (1129.09, 378.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 403.097 CPU sec, 26.420 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517566, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 445, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (773.12, 825.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 400.423 CPU sec, 27.330 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518198, 20, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 270, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (591.62, 646.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 521, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (619.00, 593.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 402.691 CPU sec, 25.266 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517816, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 369, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (552.00, 477.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.56, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (113, 590, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (721.55, 1000.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1675, 3686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9456)
[0000][PE] mean and std.dev: (2032.92, 1567.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 403.216 CPU sec, 28.631 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518001, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 382, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (941.33, 785.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 230, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (458.00, 763.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1007, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (893.00, 493.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 399.698 CPU sec, 25.344 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517817, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 351, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1281)
[0000][PE] mean and std.dev: (398.21, 263.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1387, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7049)
[0000][PE] mean and std.dev: (1398.78, 1008.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 403.960 CPU sec, 28.273 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518634, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 353, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1568)
[0000][PE] mean and std.dev: (401.69, 325.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 392.649 CPU sec, 24.342 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518190, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 334, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (544.80, 562.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 520, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1245.50, 1592.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7814)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 399.880 CPU sec, 27.086 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517856, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 265, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1546)
[0000][PE] mean and std.dev: (324.14, 230.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 291, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (742.07, 995.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6062)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 412.255 CPU sec, 35.962 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518139, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 277, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (423.71, 340.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (529, 1870, 3861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10525)
[0000][PE] mean and std.dev: (2080.44, 1735.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13857)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 402.677 CPU sec, 32.947 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518125, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 310, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2085)
[0000][PE] mean and std.dev: (381.60, 296.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.61, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (362, 1444, 4660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13256)
[0000][PE] mean and std.dev: (1882.25, 1890.12)
[0000][PE] low and high boundaries for proper pairs: (1, 17554)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1072, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1152.20, 477.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 402.216 CPU sec, 32.336 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517939, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 350, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (544.53, 651.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 404.590 CPU sec, 35.650 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518461, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 253, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1085)
[0000][PE] mean and std.dev: (342.00, 255.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 785, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7241)
[0000][PE] mean and std.dev: (1312.76, 1256.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1578, 2017, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (304, 3489)
[0000][PE] mean and std.dev: (1744.70, 768.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 401.952 CPU sec, 30.776 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517990, 23, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 332, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (525.74, 556.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 512, 4362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13044)
[0000][PE] mean and std.dev: (1928.04, 2551.87)
[0000][PE] low and high boundaries for proper pairs: (1, 17385)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1396, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1220.79, 816.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 408.076 CPU sec, 34.241 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518556, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 498, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (658.50, 490.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (487, 717, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1993)
[0000][PE] mean and std.dev: (487.22, 369.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2495)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 403.139 CPU sec, 37.967 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518000, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 285, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (459.05, 392.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.84, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 482, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (896.00, 1267.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1572, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1503.90, 586.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 401.530 CPU sec, 42.396 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518052, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 301, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (550.11, 717.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 447, 3485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10433)
[0000][PE] mean and std.dev: (1613.50, 2073.30)
[0000][PE] low and high boundaries for proper pairs: (1, 13907)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 403.150 CPU sec, 34.407 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517873, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 354, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (318.94, 175.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 446, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (374.86, 381.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 2241, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6799)
[0000][PE] mean and std.dev: (2031.80, 1178.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 399.253 CPU sec, 27.982 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517856, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 297, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (270.69, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (100, 246, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (877.92, 1146.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8708)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 949, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8335)
[0000][PE] mean and std.dev: (1566.60, 1515.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 400.496 CPU sec, 32.382 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518186, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 435, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1649)
[0000][PE] mean and std.dev: (440.72, 347.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 1656, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1633.07, 1247.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1066, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1702.45, 1202.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 405.963 CPU sec, 30.153 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518005, 20, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 227, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 812)
[0000][PE] mean and std.dev: (274.80, 171.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (182, 501, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1145.00, 1207.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8006)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 415.959 CPU sec, 30.653 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517974, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 471, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2460)
[0000][PE] mean and std.dev: (526.07, 358.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (234, 477, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (676.33, 631.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 407.258 CPU sec, 31.714 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518473, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 386, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2011)
[0000][PE] mean and std.dev: (434.11, 261.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 404.624 CPU sec, 31.056 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518033, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 404, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (561.23, 504.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 357, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (733.00, 1077.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 407.171 CPU sec, 28.846 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518057, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 306, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (492.23, 458.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 572, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7757)
[0000][PE] mean and std.dev: (1162.08, 1475.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10269)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 1449, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (1638.27, 788.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 406.519 CPU sec, 32.244 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518210, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 407, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (622.73, 511.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (215, 487, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (426.00, 344.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2771)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1763, 3339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7725)
[0000][PE] mean and std.dev: (2194.25, 1290.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 398.343 CPU sec, 31.292 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518023, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 294, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1231)
[0000][PE] mean and std.dev: (299.75, 133.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 365, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (529.79, 578.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4098)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 406.144 CPU sec, 34.091 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518307, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 311, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (417.78, 295.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (361, 791, 5439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15595)
[0000][PE] mean and std.dev: (2220.80, 2418.22)
[0000][PE] low and high boundaries for proper pairs: (1, 20673)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1303, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7145)
[0000][PE] mean and std.dev: (1916.67, 1463.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 405.967 CPU sec, 31.013 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518202, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 346, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1523)
[0000][PE] mean and std.dev: (415.26, 300.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 1071, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7702)
[0000][PE] mean and std.dev: (1521.15, 1552.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 406.798 CPU sec, 32.956 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518223, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 351, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (773.11, 929.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 415, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6299)
[0000][PE] mean and std.dev: (492.89, 668.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8392)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 402.452 CPU sec, 30.619 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517974, 22, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 381, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 839)
[0000][PE] mean and std.dev: (308.00, 116.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (387, 682, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1216.86, 1315.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 400.728 CPU sec, 28.706 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518240, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 283, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (364.18, 306.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 3, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (593.69, 1140.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 398.657 CPU sec, 29.732 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517651, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 624, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (749.73, 544.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 33, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1282)
[0000][PE] mean and std.dev: (140.73, 196.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 407.765 CPU sec, 49.861 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518157, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 303, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (308.14, 210.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 461, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (707.14, 830.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1742, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 3304)
[0000][PE] mean and std.dev: (1650.00, 553.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 397.719 CPU sec, 32.761 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517547, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 590, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1035.62, 976.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 1130, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (656.20, 628.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 415.721 CPU sec, 37.389 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517843, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 340, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (464.76, 526.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 278, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (557.58, 741.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1504, 3732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9626)
[0000][PE] mean and std.dev: (1892.17, 1415.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 398.734 CPU sec, 38.025 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517952, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 342, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (335.11, 172.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 449, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (449.60, 496.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 404.452 CPU sec, 45.639 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518071, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 337, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (874.42, 900.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 402.414 CPU sec, 42.940 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206152
	[0000][ M::kt_pipeline] read 1206152 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518013, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 330, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (537.00, 472.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.30, 118.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 948, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (869.25, 635.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1568, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1724.50, 1030.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 406.548 CPU sec, 44.899 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518397, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 274, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (308.79, 261.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (554, 1471, 4870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13502)
[0000][PE] mean and std.dev: (2348.85, 2546.23)
[0000][PE] low and high boundaries for proper pairs: (1, 17818)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206152 reads in 413.481 CPU sec, 51.426 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517710, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 348, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1893)
[0000][PE] mean and std.dev: (449.80, 370.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 400.981 CPU sec, 42.473 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518177, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 486, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (573.50, 364.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 2114, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8814)
[0000][PE] mean and std.dev: (2277.79, 2700.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13079)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 402.940 CPU sec, 43.684 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518067, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 758, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (1244.47, 1290.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 812, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8227)
[0000][PE] mean and std.dev: (1293.75, 1631.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10910)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 405.035 CPU sec, 54.042 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518432, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 476, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (584.00, 485.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1467, 3119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7321)
[0000][PE] mean and std.dev: (1616.38, 1009.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 404.866 CPU sec, 52.590 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517899, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 440, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (715.67, 688.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 418, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (926.20, 1152.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 405.438 CPU sec, 56.382 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517931, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 365, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (726.43, 622.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 1666, 3688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10582)
[0000][PE] mean and std.dev: (1752.85, 1608.22)
[0000][PE] low and high boundaries for proper pairs: (1, 14029)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 411.743 CPU sec, 44.916 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518036, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 362, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (526.45, 580.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (215, 769, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (888.10, 710.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5383)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 407.532 CPU sec, 57.271 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518189, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 394, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (586.70, 475.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 264, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2158)
[0000][PE] mean and std.dev: (244.60, 312.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 411.400 CPU sec, 57.715 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517889, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 401, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1180.82, 1494.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 408.272 CPU sec, 49.275 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518103, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 277, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1268)
[0000][PE] mean and std.dev: (285.12, 142.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1724, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1781.00, 1011.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 408.120 CPU sec, 53.294 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518074, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 328, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (350.67, 141.86)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1042, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (832.50, 468.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 404.930 CPU sec, 54.707 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517813, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 333, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (580.00, 632.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (355, 740, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1185.17, 1479.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7563)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1291, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1112.82, 574.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 409.033 CPU sec, 54.017 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518229, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 533, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (702.80, 511.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 333, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1021.30, 1580.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7343)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 407.494 CPU sec, 49.090 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517886, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 359, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (786.16, 907.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 404.329 CPU sec, 41.912 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518157, 19, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 316, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 754)
[0000][PE] mean and std.dev: (266.47, 154.24)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (446, 915, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6992)
[0000][PE] mean and std.dev: (1527.26, 1708.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9174)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1077, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (995.77, 309.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 404.067 CPU sec, 48.188 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518273, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 379, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (988.00, 1188.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 676, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (616.00, 462.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1665, 4081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10683)
[0000][PE] mean and std.dev: (2043.62, 1560.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 406.112 CPU sec, 42.855 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518165, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 393, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (793.10, 908.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1034, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (804.08, 570.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 407.461 CPU sec, 49.602 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517865, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 393, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1573)
[0000][PE] mean and std.dev: (467.32, 315.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 476, 3978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11326)
[0000][PE] mean and std.dev: (2176.77, 3005.46)
[0000][PE] low and high boundaries for proper pairs: (1, 15000)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1766, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1377.70, 769.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 409.724 CPU sec, 56.294 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518097, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 319, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1329)
[0000][PE] mean and std.dev: (298.24, 172.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 399, 3554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10600)
[0000][PE] mean and std.dev: (1918.21, 2925.23)
[0000][PE] low and high boundaries for proper pairs: (1, 14123)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1225, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (1087.70, 591.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 405.352 CPU sec, 49.456 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517870, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 381, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (713.56, 727.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1239, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1737.45, 1333.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 405.224 CPU sec, 39.809 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517962, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 328, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (420.12, 461.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 1124, 3348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10034)
[0000][PE] mean and std.dev: (1788.31, 2089.07)
[0000][PE] low and high boundaries for proper pairs: (1, 13377)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1718, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (2250.70, 1368.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 407.730 CPU sec, 53.560 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518021, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 592, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (796.73, 741.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1271, 3063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8327)
[0000][PE] mean and std.dev: (1819.78, 2219.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10959)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 403.584 CPU sec, 50.385 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518179, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 348, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (608.82, 577.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 357, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7573)
[0000][PE] mean and std.dev: (1308.42, 1682.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10036)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1066, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (948.40, 375.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 409.632 CPU sec, 50.143 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518090, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 729, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (825.00, 829.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 352, 4546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13498)
[0000][PE] mean and std.dev: (2204.29, 2953.85)
[0000][PE] low and high boundaries for proper pairs: (1, 17974)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1014, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (937.00, 551.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 413.456 CPU sec, 51.335 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518298, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 325, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1545)
[0000][PE] mean and std.dev: (276.65, 187.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (396, 2210, 4682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13254)
[0000][PE] mean and std.dev: (2964.00, 3095.35)
[0000][PE] low and high boundaries for proper pairs: (1, 17540)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1106, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1276.78, 993.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 412.294 CPU sec, 51.297 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518082, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 384, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (637.20, 574.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (429, 757, 4806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13560)
[0000][PE] mean and std.dev: (2608.27, 3062.65)
[0000][PE] low and high boundaries for proper pairs: (1, 17937)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 403.749 CPU sec, 42.862 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518019, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 389, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (718.94, 857.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 663, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8341)
[0000][PE] mean and std.dev: (1805.31, 2421.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11490)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1966, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7012)
[0000][PE] mean and std.dev: (1958.45, 1265.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 403.382 CPU sec, 36.655 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518203, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 366, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (365.70, 309.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 999, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5993)
[0000][PE] mean and std.dev: (1198.22, 959.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 400.707 CPU sec, 35.979 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518197, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 482, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (571.52, 525.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.65, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 318, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (830.78, 1326.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 404.037 CPU sec, 40.885 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518599, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 337, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (463.75, 421.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 35, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (620.08, 885.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 396.287 CPU sec, 36.096 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518022, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 611, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (991.06, 1056.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 599, 2891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8057)
[0000][PE] mean and std.dev: (1645.12, 1974.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10640)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1343, 1727, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1872.00, 807.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 403.007 CPU sec, 38.457 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518361, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 274, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (269.78, 98.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 392, 3810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11390)
[0000][PE] mean and std.dev: (1622.15, 2225.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15180)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 402.776 CPU sec, 37.746 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517903, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 363, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (456.41, 374.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 2030, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7464)
[0000][PE] mean and std.dev: (2357.60, 1265.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 399.894 CPU sec, 37.748 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518126, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 818, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1235.96, 1301.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 545, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (712.17, 796.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 393.654 CPU sec, 32.881 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518083, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 337, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1025)
[0000][PE] mean and std.dev: (329.87, 214.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 595, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (788.56, 856.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1757, 4212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10224)
[0000][PE] mean and std.dev: (2362.82, 1716.01)
[0000][PE] low and high boundaries for proper pairs: (1, 13230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 397.325 CPU sec, 45.915 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518159, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 303, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (274.09, 97.70)
[0000][PE] low and high boundaries for proper pairs: (1, 998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (261, 451, 4046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11616)
[0000][PE] mean and std.dev: (1654.07, 2146.67)
[0000][PE] low and high boundaries for proper pairs: (1, 15401)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1443, 3498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8668)
[0000][PE] mean and std.dev: (2210.80, 1698.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 400.431 CPU sec, 42.650 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518011, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 309, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (330.86, 265.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 359, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6346)
[0000][PE] mean and std.dev: (910.09, 1014.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8453)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1590, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1429.67, 697.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 398.683 CPU sec, 43.908 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518032, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 326, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (313.07, 129.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 401.710 CPU sec, 33.929 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518346, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 541, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (704.29, 578.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 747, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (886.73, 876.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 396.305 CPU sec, 29.372 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517898, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 341, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (676.53, 718.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1187, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1321.79, 753.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.795 CPU sec, 26.685 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518187, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 414, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (691.81, 666.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 462, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (511.80, 582.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 397.978 CPU sec, 28.517 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206090
	[0000][ M::kt_pipeline] read 1206090 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518335, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 427, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (597.63, 571.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (440, 658, 3720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10280)
[0000][PE] mean and std.dev: (1939.46, 2314.02)
[0000][PE] low and high boundaries for proper pairs: (1, 13560)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 394.874 CPU sec, 29.376 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518133, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 236, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (427.47, 413.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 203, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (668.00, 892.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206090 reads in 409.218 CPU sec, 27.972 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518137, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 359, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (518.00, 542.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 659, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (734.33, 662.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7060)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 397.189 CPU sec, 28.200 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518087, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 461, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (872.94, 935.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (583, 3199, 5351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14887)
[0000][PE] mean and std.dev: (2883.62, 2420.93)
[0000][PE] low and high boundaries for proper pairs: (1, 19655)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 396.025 CPU sec, 25.716 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517836, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 333, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (565.75, 594.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 859, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7963)
[0000][PE] mean and std.dev: (1435.00, 1695.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10536)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 394.418 CPU sec, 24.991 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518073, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 368, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1991)
[0000][PE] mean and std.dev: (404.94, 306.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (95, 501, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (465.55, 458.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.346 CPU sec, 26.622 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518237, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 358, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (345.60, 224.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 389.880 CPU sec, 24.460 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517586, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 397, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (552.93, 516.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1216, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (1216.10, 478.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 399.845 CPU sec, 28.731 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517829, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 374, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (725.88, 650.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 708, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (894.00, 1166.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5747)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 1314, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1330.15, 940.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 399.356 CPU sec, 30.619 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517990, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 311, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 930)
[0000][PE] mean and std.dev: (232.96, 123.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 241, 3259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9725)
[0000][PE] mean and std.dev: (1509.54, 2351.45)
[0000][PE] low and high boundaries for proper pairs: (1, 12958)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 393.540 CPU sec, 27.706 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518263, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 279, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1416)
[0000][PE] mean and std.dev: (288.06, 233.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.13, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 690, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1313.00, 1744.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 395.421 CPU sec, 26.959 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518050, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 473, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2712)
[0000][PE] mean and std.dev: (438.69, 338.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 413, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (980.27, 1146.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6667)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 398.872 CPU sec, 44.409 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518099, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 316, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (530.29, 509.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 403.099 CPU sec, 38.984 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517991, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 386, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (643.07, 564.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (686, 1099, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1798.35, 1667.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8467)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1157, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (514, 1759)
[0000][PE] mean and std.dev: (1084.70, 305.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 400.356 CPU sec, 45.509 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518254, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 302, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (557.47, 571.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 516, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8202)
[0000][PE] mean and std.dev: (1713.82, 2470.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11597)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 399.155 CPU sec, 35.566 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518273, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 424, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (718.00, 683.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 694, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7274)
[0000][PE] mean and std.dev: (1635.00, 2012.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9694)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 404.522 CPU sec, 37.146 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517761, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 337, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (734.29, 782.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (67, 437, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (959.64, 1163.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1885, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6217)
[0000][PE] mean and std.dev: (1809.00, 1092.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 394.454 CPU sec, 35.893 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518159, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 314, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (307.41, 187.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (81, 456, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (724.64, 1167.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 400.156 CPU sec, 30.938 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517971, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 295, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (705.46, 881.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 219, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (308.27, 363.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 397.989 CPU sec, 29.400 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518119, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 336, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2001)
[0000][PE] mean and std.dev: (462.18, 411.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 376, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (410.18, 326.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1278, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1472.90, 1130.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 398.212 CPU sec, 25.935 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518151, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 244, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1464)
[0000][PE] mean and std.dev: (357.20, 320.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 419, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (321.73, 301.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 393.830 CPU sec, 28.790 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517647, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 304, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (259.18, 99.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (126, 351, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (259.90, 228.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 398.222 CPU sec, 27.707 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518179, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 483, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (714.05, 697.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 87, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (804.10, 1213.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1141, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (1057.00, 543.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 396.864 CPU sec, 30.692 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518251, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 345, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (522.15, 460.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (112, 746, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (501.17, 479.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1727, 3972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9522)
[0000][PE] mean and std.dev: (2269.09, 1539.65)
[0000][PE] low and high boundaries for proper pairs: (1, 12297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 391.735 CPU sec, 28.672 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518304, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 357, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1980)
[0000][PE] mean and std.dev: (436.26, 284.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 178, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1612)
[0000][PE] mean and std.dev: (316.36, 369.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2126)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1129, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7452)
[0000][PE] mean and std.dev: (1708.38, 1359.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.635 CPU sec, 30.633 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517610, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 433, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (751.32, 653.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 373, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (305.73, 321.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2878)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1506, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1454.18, 668.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 394.697 CPU sec, 26.558 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518070, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 314, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1361)
[0000][PE] mean and std.dev: (292.10, 186.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 1670, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1601.90, 1261.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 394.429 CPU sec, 35.200 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518106, 20, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 644, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (861.53, 829.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (399, 1266, 4056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11370)
[0000][PE] mean and std.dev: (2189.35, 2324.93)
[0000][PE] low and high boundaries for proper pairs: (1, 15027)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.035 CPU sec, 27.269 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518313, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 224, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (244.48, 98.96)
[0000][PE] low and high boundaries for proper pairs: (1, 752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1085, 1599, 3920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9590)
[0000][PE] mean and std.dev: (2033.27, 1519.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12425)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 394.023 CPU sec, 29.405 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518685, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 267, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (318.25, 195.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 531, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (644.90, 851.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 388.513 CPU sec, 25.356 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517957, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 365, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2673)
[0000][PE] mean and std.dev: (581.41, 566.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 394.723 CPU sec, 29.422 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518206, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 281, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (296.61, 162.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 748, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6564)
[0000][PE] mean and std.dev: (1025.58, 1026.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8713)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 392.746 CPU sec, 27.361 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518053, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 301, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (288.32, 134.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (123, 467, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (852.85, 982.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.798 CPU sec, 27.638 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517632, 10, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 269, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1309)
[0000][PE] mean and std.dev: (314.71, 219.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 929, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (789.40, 842.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 393.499 CPU sec, 31.582 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517808, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 403, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (599.89, 550.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 585, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (589.23, 567.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1384, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1608.50, 1099.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 396.340 CPU sec, 31.402 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518043, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 301, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3201)
[0000][PE] mean and std.dev: (400.61, 341.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (502, 2195, 5365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15091)
[0000][PE] mean and std.dev: (2852.00, 2937.36)
[0000][PE] low and high boundaries for proper pairs: (1, 19954)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 392.464 CPU sec, 27.617 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518007, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 394, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (919.47, 792.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 662, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (627.67, 570.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1299, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1227.91, 662.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 393.007 CPU sec, 33.588 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517949, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 475, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6675)
[0000][PE] mean and std.dev: (1272.82, 1353.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (226, 914, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1067.10, 1040.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.113 CPU sec, 31.579 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517987, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 368, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (460.43, 453.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 691, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6325)
[0000][PE] mean and std.dev: (1279.46, 1559.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8433)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1420, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 2710)
[0000][PE] mean and std.dev: (1206.73, 538.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 396.845 CPU sec, 45.076 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518015, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 354, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (591.95, 658.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 348, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (835.30, 873.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1321, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1403.67, 693.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 396.593 CPU sec, 39.761 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518146, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 371, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1348)
[0000][PE] mean and std.dev: (377.74, 263.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (291, 670, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (819.11, 876.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1584, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1308.42, 568.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 394.613 CPU sec, 31.886 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518064, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 313, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (362.86, 253.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 396.501 CPU sec, 30.944 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518350, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 498, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (816.33, 757.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (131, 443, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1324.88, 1662.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10159)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 397.022 CPU sec, 37.483 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518070, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 355, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (578.14, 560.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 180, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (1112.11, 1855.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9314)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 392.891 CPU sec, 27.342 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517871, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 340, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (292.71, 83.91)
[0000][PE] low and high boundaries for proper pairs: (1, 824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (120, 677, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (597.00, 587.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7336)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 392.786 CPU sec, 30.866 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518027, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 354, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (527.60, 502.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 707, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8675)
[0000][PE] mean and std.dev: (1415.20, 1692.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11566)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 392.508 CPU sec, 29.087 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518327, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 385, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1942)
[0000][PE] mean and std.dev: (410.59, 294.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 611, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (797.56, 843.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1527, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7773)
[0000][PE] mean and std.dev: (1732.73, 1193.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 391.198 CPU sec, 31.664 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518161, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 378, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (446.54, 374.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 394.878 CPU sec, 28.372 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518279, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 255, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (729.50, 874.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (481, 941, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (1203.33, 1139.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7805)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 394.450 CPU sec, 32.644 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518286, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 326, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (260.67, 126.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.42, 118.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 432, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1184.47, 1529.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1604, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6651)
[0000][PE] mean and std.dev: (1573.58, 972.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 397.218 CPU sec, 28.014 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518302, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 349, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (805.65, 834.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 586, 4045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11327)
[0000][PE] mean and std.dev: (1918.18, 2204.14)
[0000][PE] low and high boundaries for proper pairs: (1, 14968)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 397.655 CPU sec, 31.594 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517961, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 304, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (394.32, 431.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 179, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1285)
[0000][PE] mean and std.dev: (147.91, 149.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1713)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 393.757 CPU sec, 26.738 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518129, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 273, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (246.68, 77.88)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 380, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1648)
[0000][PE] mean and std.dev: (336.78, 304.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2197)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 392.471 CPU sec, 28.642 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517894, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 216, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (277.62, 217.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 393.238 CPU sec, 24.735 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518516, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 291, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 958)
[0000][PE] mean and std.dev: (246.06, 153.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 394.701 CPU sec, 28.517 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517816, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 410, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (577.23, 502.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (598, 1139, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8989)
[0000][PE] mean and std.dev: (1988.76, 2069.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11786)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1219, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1361.70, 883.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 397.776 CPU sec, 30.051 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517692, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 390, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (588.26, 563.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1077, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (1036.91, 577.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 398.691 CPU sec, 30.807 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518050, 14, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 357, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1004.82, 1189.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 397, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (957.31, 1336.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 401.560 CPU sec, 33.876 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518332, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 305, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (308.40, 132.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 245, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (211.46, 215.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1765)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 396.642 CPU sec, 29.999 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518029, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 437, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (974.75, 1157.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.01, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 402.091 CPU sec, 28.382 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517839, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 325, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2340)
[0000][PE] mean and std.dev: (528.00, 525.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 312, 3502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10422)
[0000][PE] mean and std.dev: (1451.33, 2179.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13882)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1685, 4349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11059)
[0000][PE] mean and std.dev: (2445.20, 1898.21)
[0000][PE] low and high boundaries for proper pairs: (1, 14414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 406.395 CPU sec, 32.769 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518043, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 342, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1558)
[0000][PE] mean and std.dev: (350.08, 211.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 1030, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7702)
[0000][PE] mean and std.dev: (1432.30, 1547.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10255)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 401.103 CPU sec, 37.397 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517885, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 309, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (488.12, 417.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 915, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (1382.93, 1516.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7852)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 402.189 CPU sec, 33.089 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517868, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 358, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1840)
[0000][PE] mean and std.dev: (514.90, 440.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 704, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (586.21, 418.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1228, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1184.36, 683.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 405.219 CPU sec, 37.707 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518126, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 375, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (409.58, 345.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 25, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (231.42, 398.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 402.245 CPU sec, 37.405 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517840, 16, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 359, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (644.83, 615.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 249, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (355.67, 530.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2476)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 395.689 CPU sec, 34.057 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517829, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 348, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (973.65, 1036.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 849, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7984)
[0000][PE] mean and std.dev: (1860.33, 2217.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10731)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 392.230 CPU sec, 36.650 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517744, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 263, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (240.92, 88.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 1236, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1042.18, 1064.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6523)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 402.350 CPU sec, 42.297 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518783, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 327, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2104)
[0000][PE] mean and std.dev: (387.17, 330.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 1403, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6271)
[0000][PE] mean and std.dev: (1062.43, 938.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8260)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1251, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1543.87, 700.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 403.428 CPU sec, 42.782 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518025, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 344, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (351.32, 212.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 193, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2077)
[0000][PE] mean and std.dev: (238.78, 290.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 401.527 CPU sec, 42.046 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518046, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 354, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (548.53, 462.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1267, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1242.33, 639.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 402.678 CPU sec, 35.431 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517905, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 294, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 878)
[0000][PE] mean and std.dev: (274.17, 112.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (219, 1037, 4562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13248)
[0000][PE] mean and std.dev: (1795.25, 1877.66)
[0000][PE] low and high boundaries for proper pairs: (1, 17591)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 407.865 CPU sec, 39.874 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518232, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 269, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1290)
[0000][PE] mean and std.dev: (351.32, 301.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 1541, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6384)
[0000][PE] mean and std.dev: (1567.11, 1808.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8801)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 403.918 CPU sec, 34.139 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517942, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 227, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (198.29, 88.32)
[0000][PE] low and high boundaries for proper pairs: (1, 757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 407.208 CPU sec, 43.266 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517835, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 398, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (899.11, 906.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (609, 1524, 4156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11250)
[0000][PE] mean and std.dev: (2616.55, 2785.96)
[0000][PE] low and high boundaries for proper pairs: (1, 14797)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 410.948 CPU sec, 42.161 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517838, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 416, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1532)
[0000][PE] mean and std.dev: (447.68, 285.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 194, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7441)
[0000][PE] mean and std.dev: (982.75, 2043.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9917)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 425.455 CPU sec, 27.963 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518098, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 314, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1858)
[0000][PE] mean and std.dev: (542.05, 467.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1272, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1591.27, 1201.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 422.448 CPU sec, 26.042 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518183, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 785, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (832.83, 652.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1569, 5752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15524)
[0000][PE] mean and std.dev: (2745.30, 2689.70)
[0000][PE] low and high boundaries for proper pairs: (1, 20410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 421.041 CPU sec, 26.156 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518564, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 306, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1103)
[0000][PE] mean and std.dev: (380.21, 261.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 885, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (703.89, 607.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 419.988 CPU sec, 28.803 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518295, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 784, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (489.30, 378.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 485, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (936.20, 1179.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1949, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8188)
[0000][PE] mean and std.dev: (1923.83, 1489.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 416.530 CPU sec, 24.757 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518019, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 354, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1390)
[0000][PE] mean and std.dev: (416.11, 234.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (834, 1574, 5505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14847)
[0000][PE] mean and std.dev: (2536.64, 2530.61)
[0000][PE] low and high boundaries for proper pairs: (1, 19518)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 423.284 CPU sec, 27.386 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518192, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 290, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1970)
[0000][PE] mean and std.dev: (402.50, 453.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 987, 3667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10979)
[0000][PE] mean and std.dev: (2068.70, 2534.44)
[0000][PE] low and high boundaries for proper pairs: (1, 14635)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1281, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6159)
[0000][PE] mean and std.dev: (1641.67, 1306.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 422.081 CPU sec, 26.067 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517793, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 704, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (816.12, 1119.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 919, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9484)
[0000][PE] mean and std.dev: (1385.00, 1704.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12645)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 862, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1528.90, 1397.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 421.348 CPU sec, 24.936 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518252, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 354, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (295.27, 177.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (259, 1398, 6514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19024)
[0000][PE] mean and std.dev: (2830.15, 3102.22)
[0000][PE] low and high boundaries for proper pairs: (1, 25279)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1431, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1460.70, 746.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 423.503 CPU sec, 27.944 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518130, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 376, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (438.73, 333.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (375, 657, 3112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8586)
[0000][PE] mean and std.dev: (1891.30, 2325.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11323)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1732, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6542)
[0000][PE] mean and std.dev: (1435.80, 834.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 420.161 CPU sec, 26.040 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517777, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 403, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (537.83, 423.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 743, 4161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11535)
[0000][PE] mean and std.dev: (1983.82, 2171.34)
[0000][PE] low and high boundaries for proper pairs: (1, 15222)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1237, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6377)
[0000][PE] mean and std.dev: (1632.50, 1320.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 415.567 CPU sec, 24.743 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518046, 19, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 328, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (893.58, 986.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 192, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7699)
[0000][PE] mean and std.dev: (1158.42, 1813.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10265)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 415.695 CPU sec, 24.655 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517870, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 333, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1003)
[0000][PE] mean and std.dev: (290.33, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 421.371 CPU sec, 27.842 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518104, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 329, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (623.90, 730.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 328, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (575.15, 1091.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 422.959 CPU sec, 28.158 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518245, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 369, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (527.09, 377.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (88, 534, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7969)
[0000][PE] mean and std.dev: (1277.50, 1528.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10596)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1400, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (319, 2784)
[0000][PE] mean and std.dev: (1354.30, 538.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 425.855 CPU sec, 30.946 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518221, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 416, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (715.25, 623.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (637, 724, 3284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8578)
[0000][PE] mean and std.dev: (1897.33, 1990.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11225)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 416.118 CPU sec, 25.418 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518354, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 428, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (802.32, 737.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 209, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (575.92, 835.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 419.436 CPU sec, 31.418 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518007, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 334, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (448.74, 433.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 698, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1163.33, 1266.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7493)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 418.624 CPU sec, 28.344 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517885, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 428, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (784.88, 861.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 644, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (476.27, 394.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 425.925 CPU sec, 25.795 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518215, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 329, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (610.80, 690.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 24, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1737)
[0000][PE] mean and std.dev: (329.81, 495.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2315)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 2218, 3350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8096)
[0000][PE] mean and std.dev: (2664.90, 2086.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 415.138 CPU sec, 26.856 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517928, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 351, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (883.48, 1118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 247, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1975)
[0000][PE] mean and std.dev: (353.55, 452.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2591)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 419.375 CPU sec, 25.099 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518367, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 278, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 779)
[0000][PE] mean and std.dev: (242.56, 93.73)
[0000][PE] low and high boundaries for proper pairs: (1, 970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 415.959 CPU sec, 26.140 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517883, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 311, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (287.17, 122.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 601, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (273.90, 325.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3038)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1744, 3234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7708)
[0000][PE] mean and std.dev: (1952.62, 1435.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 413.911 CPU sec, 24.913 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518569, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 244, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1000)
[0000][PE] mean and std.dev: (255.00, 212.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (581, 1272, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8555)
[0000][PE] mean and std.dev: (1964.45, 1769.89)
[0000][PE] low and high boundaries for proper pairs: (1, 11213)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1476, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7059)
[0000][PE] mean and std.dev: (2033.00, 1918.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 422.814 CPU sec, 25.779 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518182, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 378, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (627.41, 747.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 394, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (412.92, 459.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1312, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1341.64, 735.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 409.826 CPU sec, 23.621 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517594, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 365, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (363.45, 270.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 301, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8668)
[0000][PE] mean and std.dev: (1391.79, 2457.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11557)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 413.395 CPU sec, 23.422 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518526, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 412, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (741.24, 591.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 301, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9496)
[0000][PE] mean and std.dev: (1153.00, 1582.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12650)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1011, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1068.45, 645.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 406.889 CPU sec, 23.477 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517887, 23, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 374, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (522.67, 434.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 375, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1777)
[0000][PE] mean and std.dev: (257.79, 257.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2364)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 956, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1679.27, 1347.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 414.873 CPU sec, 23.711 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518146, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 294, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1061)
[0000][PE] mean and std.dev: (256.87, 139.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 13, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (473.86, 755.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1234, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1482.15, 899.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 410.281 CPU sec, 26.698 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518044, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 308, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (331.93, 340.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.48, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (202, 978, 4803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14005)
[0000][PE] mean and std.dev: (2074.50, 2434.85)
[0000][PE] low and high boundaries for proper pairs: (1, 18606)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 413.923 CPU sec, 24.537 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518257, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 299, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (657.14, 632.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1426, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1198.67, 624.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 410.378 CPU sec, 26.688 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517781, 20, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 404, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (579.74, 504.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (473, 1120, 4753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13313)
[0000][PE] mean and std.dev: (2059.20, 2130.04)
[0000][PE] low and high boundaries for proper pairs: (1, 17593)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1602, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1315.67, 685.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 417.709 CPU sec, 27.183 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518299, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 343, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2261)
[0000][PE] mean and std.dev: (578.91, 556.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 1844, 3512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10498)
[0000][PE] mean and std.dev: (2406.67, 2931.45)
[0000][PE] low and high boundaries for proper pairs: (1, 14132)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 415.021 CPU sec, 25.391 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517958, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 355, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (741.40, 763.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 698, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (650.00, 694.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1055, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1331.42, 1075.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 410.344 CPU sec, 24.878 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518003, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 295, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (291.77, 173.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 844, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6537)
[0000][PE] mean and std.dev: (1421.59, 1642.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8639)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1567, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7661)
[0000][PE] mean and std.dev: (1700.18, 1202.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 411.513 CPU sec, 23.507 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518204, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 502, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (864.21, 1000.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 1059, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (886.00, 1126.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 413.574 CPU sec, 24.895 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518042, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 417, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (457.50, 400.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1533, 2523, 3626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7812)
[0000][PE] mean and std.dev: (2579.75, 1384.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 413.459 CPU sec, 24.051 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517876, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 365, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (447.11, 359.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 835, 3793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10471)
[0000][PE] mean and std.dev: (1894.56, 1911.78)
[0000][PE] low and high boundaries for proper pairs: (1, 13810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1659, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1778.73, 1154.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 407.478 CPU sec, 23.116 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517987, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 310, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (253.05, 83.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 414.248 CPU sec, 24.217 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517763, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 335, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (765.17, 854.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 410.031 CPU sec, 23.741 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517872, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 350, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (345.30, 202.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (338, 495, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1274.83, 1454.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8010)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 420.727 CPU sec, 29.267 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518106, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 341, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (472.74, 401.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 407.923 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518137, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 840, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1089.00, 1194.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.79, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 777, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (980.00, 613.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 403.245 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518307, 23, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 408, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (838.48, 905.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 362, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (532.71, 783.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 409.905 CPU sec, 23.728 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518037, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 256, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1920)
[0000][PE] mean and std.dev: (435.48, 479.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 147, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (260.18, 416.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1165, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (1134.10, 530.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 399.625 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518062, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 249, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (294.00, 237.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 397.183 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518074, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 332, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (570.79, 529.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (417, 762, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (767.25, 503.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1338, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1739.73, 1000.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 398.317 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518381, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 325, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (448.37, 399.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.16, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 398.493 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518218, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 351, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (712.96, 590.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.59, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 227, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (708.29, 1017.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1563, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1542.91, 602.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 397.438 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517925, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 355, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (851.33, 937.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 395.552 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518155, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1094, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1246.29, 1263.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 816, 8247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 24329)
[0000][PE] mean and std.dev: (2488.42, 3467.70)
[0000][PE] low and high boundaries for proper pairs: (1, 32370)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1418, 3498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8678)
[0000][PE] mean and std.dev: (2258.46, 2044.71)
[0000][PE] low and high boundaries for proper pairs: (1, 11268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 403.031 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517792, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 335, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (461.71, 283.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 265, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (352.92, 366.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 402.672 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517527, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 364, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (578.88, 520.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 533, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1180.82, 1228.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1421, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1351.00, 690.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 403.615 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517794, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 503, 3127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8819)
[0000][PE] mean and std.dev: (1717.86, 2265.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 404.073 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518321, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 407, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6125)
[0000][PE] mean and std.dev: (930.06, 1200.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (332, 1736, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1297.50, 1133.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1157, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1591.67, 982.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 396.633 CPU sec, 22.311 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517777, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 680, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (981.14, 931.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 185, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9827)
[0000][PE] mean and std.dev: (1489.09, 2002.63)
[0000][PE] low and high boundaries for proper pairs: (1, 13093)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 406.564 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518113, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 380, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (418.27, 402.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 623, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8244)
[0000][PE] mean and std.dev: (1475.35, 1946.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10942)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 406.157 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518000, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 375, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (651.35, 682.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1085, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (973.42, 476.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 412.907 CPU sec, 23.424 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517835, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 342, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1767)
[0000][PE] mean and std.dev: (410.92, 260.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.62, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (547, 1084, 4387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12067)
[0000][PE] mean and std.dev: (2449.27, 2910.10)
[0000][PE] low and high boundaries for proper pairs: (1, 15907)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 408.532 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518179, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 416, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1116.58, 1317.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 546, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (929.36, 1209.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1369, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (1263.45, 683.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 404.892 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518126, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 254, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (498.85, 541.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (613, 1373, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1018.33, 621.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 408.642 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517875, 14, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 332, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (631.42, 808.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 558, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6603)
[0000][PE] mean and std.dev: (710.75, 767.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8800)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 413.191 CPU sec, 24.548 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517971, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 283, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (311.24, 190.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 477, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (641.46, 823.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1569, 7507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19803)
[0000][PE] mean and std.dev: (3654.55, 3281.96)
[0000][PE] low and high boundaries for proper pairs: (1, 25951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 404.333 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518242, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 339, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (584.50, 544.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 7, 3627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10879)
[0000][PE] mean and std.dev: (1270.10, 1780.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14505)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 402.437 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517992, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 310, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (235.11, 126.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 204, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (265.10, 380.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1403, 1883, 3472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7610)
[0000][PE] mean and std.dev: (2496.27, 1450.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 399.929 CPU sec, 22.501 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518132, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 260, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (677.19, 774.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1535, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1388.50, 690.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 403.081 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517608, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 453, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (615.71, 490.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 392, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1845)
[0000][PE] mean and std.dev: (352.25, 269.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 395.559 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518431, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 365, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (456.56, 324.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1500, 4535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11717)
[0000][PE] mean and std.dev: (2495.77, 2527.57)
[0000][PE] low and high boundaries for proper pairs: (1, 15308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 401.205 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518341, 16, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 311, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1204)
[0000][PE] mean and std.dev: (298.00, 183.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 1259, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (1331.38, 1429.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9553)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1540, 4792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12906)
[0000][PE] mean and std.dev: (2945.71, 3342.49)
[0000][PE] low and high boundaries for proper pairs: (1, 16963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 399.536 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517565, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 303, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (274.68, 162.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1656, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1533.30, 960.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 402.401 CPU sec, 23.030 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517914, 16, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 358, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (856.35, 950.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 341, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (969.20, 1529.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8455)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 422.316 CPU sec, 27.266 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517637, 20, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 351, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (821.91, 828.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.04, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 508, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (654.28, 916.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 1528, 5347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14927)
[0000][PE] mean and std.dev: (2469.92, 2364.49)
[0000][PE] low and high boundaries for proper pairs: (1, 19717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 407.359 CPU sec, 22.867 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517876, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 385, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (678.95, 771.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1258, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (1339.20, 726.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 404.634 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518225, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 280, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1773)
[0000][PE] mean and std.dev: (418.79, 311.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 406.808 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518194, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 371, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (505.70, 402.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 254, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1029.38, 1439.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 408.909 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517795, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 362, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (662.71, 603.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 1681, 4609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13647)
[0000][PE] mean and std.dev: (1951.00, 1969.70)
[0000][PE] low and high boundaries for proper pairs: (1, 18166)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 406.918 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517878, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 359, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1584)
[0000][PE] mean and std.dev: (408.34, 296.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 620, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1431)
[0000][PE] mean and std.dev: (458.92, 249.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 411.673 CPU sec, 23.307 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517766, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 333, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (336.07, 276.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 2261, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9139)
[0000][PE] mean and std.dev: (2517.30, 1865.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 415.201 CPU sec, 23.483 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517974, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 353, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (459.17, 423.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 390, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (519.17, 755.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 409.123 CPU sec, 24.166 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518319, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 936, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (967.95, 748.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 974, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1180.50, 761.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 408.762 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518195, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 439, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (831.39, 930.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 458, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (951.40, 1197.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1844, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1619.73, 824.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 401.289 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517929, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 350, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (310.46, 211.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 627, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (742.67, 994.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1128, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (1096.20, 557.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 405.599 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518014, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 316, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 854)
[0000][PE] mean and std.dev: (307.00, 85.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 949, 3686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10824)
[0000][PE] mean and std.dev: (2142.60, 3016.66)
[0000][PE] low and high boundaries for proper pairs: (1, 14393)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 403.471 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518069, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 510, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (871.00, 813.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 198, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (315.21, 448.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 402.921 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518057, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 411, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (383.70, 161.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 371, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (447.00, 444.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1671, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (1412.82, 477.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 403.530 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518157, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 374, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (516.60, 523.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 1242, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1759.60, 2292.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 404.034 CPU sec, 23.631 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518157, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 445, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (699.37, 651.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 81, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (599.38, 847.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 427.650 CPU sec, 30.474 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518529, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 214, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1122)
[0000][PE] mean and std.dev: (274.47, 192.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 1055, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1019.25, 980.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 402.447 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518065, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 312, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (323.75, 130.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 303, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (610.85, 1020.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1525, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (1502.53, 478.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 407.778 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518366, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 298, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (571.29, 636.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.64, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 615, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8239)
[0000][PE] mean and std.dev: (1248.17, 1490.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10985)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 414.615 CPU sec, 23.647 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518013, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 366, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (398.56, 247.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 413.964 CPU sec, 23.889 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517841, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 437, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (693.69, 621.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1519, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6983)
[0000][PE] mean and std.dev: (2122.18, 1449.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 412.657 CPU sec, 23.558 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518002, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 352, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (572.21, 614.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 540, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (862.91, 1094.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6864)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 851, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (941.18, 817.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 415.375 CPU sec, 24.196 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517987, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 356, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (365.58, 198.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 718, 3128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8942)
[0000][PE] mean and std.dev: (1536.18, 1688.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11849)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 410.074 CPU sec, 23.777 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517986, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 352, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (728.00, 835.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 690, 4818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13638)
[0000][PE] mean and std.dev: (1953.55, 2003.86)
[0000][PE] low and high boundaries for proper pairs: (1, 18048)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 414.790 CPU sec, 26.667 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517744, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 328, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (454.24, 374.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 341, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (877.77, 1180.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 420.335 CPU sec, 26.145 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517891, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 335, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 928)
[0000][PE] mean and std.dev: (353.36, 188.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 596, 2819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8363)
[0000][PE] mean and std.dev: (1063.33, 1379.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11135)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1455, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (1117.00, 591.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 418.777 CPU sec, 26.158 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518019, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 250, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (34, 479)
[0000][PE] mean and std.dev: (234.64, 67.82)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 453, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (666.71, 757.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 417.695 CPU sec, 27.032 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517817, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 239, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2006)
[0000][PE] mean and std.dev: (429.95, 387.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 57, 4065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12179)
[0000][PE] mean and std.dev: (1784.53, 2653.70)
[0000][PE] low and high boundaries for proper pairs: (1, 16236)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 415.270 CPU sec, 28.011 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518055, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 307, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (506.93, 461.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.43, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1308, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1657.36, 897.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 416.488 CPU sec, 30.731 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518371, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 225, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (210.14, 106.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 415.344 CPU sec, 29.613 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517876, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 488, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (821.73, 823.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 56, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 844)
[0000][PE] mean and std.dev: (97.67, 142.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1125)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 417.274 CPU sec, 29.736 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518503, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 412, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (772.33, 769.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 510, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (526.46, 621.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1826, 3409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8025)
[0000][PE] mean and std.dev: (1956.58, 1319.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 409.998 CPU sec, 28.554 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518160, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 409, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (532.75, 427.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 858, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1551.82, 1337.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 417.730 CPU sec, 32.971 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518062, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 403, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2110)
[0000][PE] mean and std.dev: (465.33, 237.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.67, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 341, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (484.11, 664.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 1696, 3385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8991)
[0000][PE] mean and std.dev: (1942.73, 1473.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 425.009 CPU sec, 36.511 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518118, 20, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 374, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (507.74, 472.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 349, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (750.22, 1135.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1209, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (1158.50, 347.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 419.574 CPU sec, 31.074 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517975, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 373, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (745.50, 674.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1228, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1474.89, 1041.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 417.912 CPU sec, 29.277 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518114, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 364, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (367.93, 219.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 575, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (643.10, 690.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1520, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1542.15, 854.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 413.401 CPU sec, 28.173 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518272, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 340, 751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1707)
[0000][PE] mean and std.dev: (413.22, 321.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 554, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5551)
[0000][PE] mean and std.dev: (926.23, 866.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7396)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 412.334 CPU sec, 28.473 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518013, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 376, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2116)
[0000][PE] mean and std.dev: (529.04, 425.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 743, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7020)
[0000][PE] mean and std.dev: (1254.06, 1522.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9313)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 854, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (920.78, 444.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 412.730 CPU sec, 30.326 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518161, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 420, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (787.60, 827.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1063, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1238.54, 671.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 412.594 CPU sec, 29.096 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518176, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 384, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (564.47, 464.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 319, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6504)
[0000][PE] mean and std.dev: (786.85, 979.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8659)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1735, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5367)
[0000][PE] mean and std.dev: (1395.80, 646.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 411.919 CPU sec, 28.199 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518025, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 295, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1394)
[0000][PE] mean and std.dev: (275.87, 131.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (238, 1141, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7714)
[0000][PE] mean and std.dev: (1280.58, 1312.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10206)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1803, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1760.80, 1163.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 415.928 CPU sec, 32.771 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517784, 18, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 324, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (857.84, 947.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 741, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6718)
[0000][PE] mean and std.dev: (1065.59, 1197.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8914)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1434, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1356.07, 829.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 417.676 CPU sec, 29.229 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518090, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 365, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (325.27, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 655, 4199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11791)
[0000][PE] mean and std.dev: (1731.20, 1866.23)
[0000][PE] low and high boundaries for proper pairs: (1, 15587)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 415.531 CPU sec, 30.230 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518512, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 323, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 701)
[0000][PE] mean and std.dev: (280.12, 123.23)
[0000][PE] low and high boundaries for proper pairs: (1, 849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 360, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (245.00, 263.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1761)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 410.549 CPU sec, 26.359 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518323, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 361, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (715.50, 679.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 417.275 CPU sec, 29.959 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518073, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 350, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (890.33, 1104.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 833, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (885.30, 768.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 413.269 CPU sec, 28.522 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518049, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 304, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (681.81, 857.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 746, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (795.58, 745.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 413.821 CPU sec, 32.008 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518512, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 359, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (614.50, 490.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 560, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8386)
[0000][PE] mean and std.dev: (908.33, 1151.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11126)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1499, 4893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12137)
[0000][PE] mean and std.dev: (2667.64, 2265.67)
[0000][PE] low and high boundaries for proper pairs: (1, 15759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 422.548 CPU sec, 30.585 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518373, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 338, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1483)
[0000][PE] mean and std.dev: (395.42, 281.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 883, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (596.00, 468.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1303, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1275.10, 550.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 411.447 CPU sec, 31.420 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517880, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 252, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 853)
[0000][PE] mean and std.dev: (269.00, 123.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 715, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8345)
[0000][PE] mean and std.dev: (1494.42, 2264.68)
[0000][PE] low and high boundaries for proper pairs: (1, 11124)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 415.484 CPU sec, 30.802 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517659, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 635, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (718.36, 679.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 181, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6391)
[0000][PE] mean and std.dev: (1100.82, 1529.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8515)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 418.283 CPU sec, 38.860 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518350, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 380, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (612.32, 508.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 638, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1715)
[0000][PE] mean and std.dev: (385.38, 244.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2224)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 424.150 CPU sec, 51.637 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518651, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 320, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (354.32, 233.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 412.906 CPU sec, 34.884 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518224, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 282, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7458)
[0000][PE] mean and std.dev: (776.91, 1062.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (99, 665, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1418.60, 1448.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9011)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 422.713 CPU sec, 48.386 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518420, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 396, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (590.12, 537.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 147, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2009)
[0000][PE] mean and std.dev: (253.31, 323.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2678)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1711, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8252)
[0000][PE] mean and std.dev: (1930.83, 1629.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 411.323 CPU sec, 37.298 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518167, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 431, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (773.69, 684.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1339, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1351.80, 742.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 419.916 CPU sec, 46.011 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517951, 14, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 470, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (529.80, 378.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.57, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 366, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (740.23, 1088.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1126, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1251.58, 666.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 420.999 CPU sec, 43.091 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518225, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 522, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (911.44, 739.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 418.690 CPU sec, 40.445 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517619, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 277, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (345.47, 277.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 434, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7288)
[0000][PE] mean and std.dev: (1194.92, 1810.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9710)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1258, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (1171.33, 486.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 415.247 CPU sec, 33.430 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517915, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 361, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 801)
[0000][PE] mean and std.dev: (315.71, 155.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 237, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (555.92, 635.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1342, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6510)
[0000][PE] mean and std.dev: (1346.30, 701.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 419.021 CPU sec, 38.489 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517938, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 389, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (455.90, 383.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 973, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (1473.20, 1661.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8121)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 419.405 CPU sec, 43.947 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517994, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 485, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (863.83, 762.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 259, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (385.64, 400.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 410.794 CPU sec, 34.203 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517880, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 338, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1865)
[0000][PE] mean and std.dev: (577.93, 431.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 959, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8257)
[0000][PE] mean and std.dev: (1579.40, 1591.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10995)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 408.522 CPU sec, 34.239 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517932, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 456, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (355.09, 134.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 1234, 5095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14823)
[0000][PE] mean and std.dev: (2562.20, 2920.76)
[0000][PE] low and high boundaries for proper pairs: (1, 19687)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1625, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (1406.75, 555.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 409.515 CPU sec, 35.191 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518205, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 329, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (310.64, 154.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 442, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7735)
[0000][PE] mean and std.dev: (1172.64, 1305.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10223)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 405.487 CPU sec, 32.492 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518147, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 340, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (449.08, 387.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 505, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (720.08, 566.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1541, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1655.27, 934.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 405.191 CPU sec, 41.004 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517699, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 379, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1317)
[0000][PE] mean and std.dev: (384.33, 309.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 449, 3022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8612)
[0000][PE] mean and std.dev: (1106.73, 1589.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11407)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 417.885 CPU sec, 49.764 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517574, 15, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 745, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1400.06, 1263.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 429, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8578)
[0000][PE] mean and std.dev: (1530.13, 2094.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11436)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1158, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1283.47, 1015.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 418.514 CPU sec, 55.265 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518125, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 248, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (245.60, 116.09)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 443, 3999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11965)
[0000][PE] mean and std.dev: (1551.53, 2303.79)
[0000][PE] low and high boundaries for proper pairs: (1, 15948)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 420.031 CPU sec, 64.936 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518514, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 340, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (589.94, 588.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.20, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 152, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (267.92, 399.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3041)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 411.487 CPU sec, 41.809 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517910, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 355, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7089)
[0000][PE] mean and std.dev: (943.05, 1173.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 600, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8123)
[0000][PE] mean and std.dev: (1575.50, 1698.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10778)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 409.066 CPU sec, 37.895 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517905, 18, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 382, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (438.93, 342.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 459, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (816.88, 1083.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8772)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 2751, 5379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13689)
[0000][PE] mean and std.dev: (3095.85, 2602.08)
[0000][PE] low and high boundaries for proper pairs: (1, 17844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 404.320 CPU sec, 34.975 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518536, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 319, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (345.06, 251.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 869, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (552.88, 475.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 402.914 CPU sec, 26.503 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518552, 19, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 351, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8530)
[0000][PE] mean and std.dev: (921.69, 1218.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 698, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7279)
[0000][PE] mean and std.dev: (1543.37, 2014.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9616)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 398.625 CPU sec, 26.756 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518214, 15, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 367, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (683.29, 671.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 414, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (570.15, 635.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (497, 1176, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (966.38, 432.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 399.898 CPU sec, 25.293 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518191, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 282, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (420.00, 339.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 398.688 CPU sec, 25.618 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518216, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 263, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (268.00, 133.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 664, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1138.36, 1320.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 396.348 CPU sec, 24.014 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518038, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 366, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (491.20, 381.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 194, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (533.50, 754.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 396.625 CPU sec, 23.742 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518253, 19, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 308, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (535.05, 620.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 604, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7344)
[0000][PE] mean and std.dev: (1288.16, 1736.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9785)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 399.605 CPU sec, 23.348 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518307, 19, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 352, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2593)
[0000][PE] mean and std.dev: (579.67, 554.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 455, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (314.93, 282.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 395.292 CPU sec, 25.159 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518516, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 390, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (655.58, 587.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 617, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (745.33, 828.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1566, 1634, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1566.30, 687.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 397.023 CPU sec, 24.791 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517893, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 389, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (479.38, 368.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 1250, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6664)
[0000][PE] mean and std.dev: (1066.60, 1105.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8885)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1489, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1595.82, 784.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 397.293 CPU sec, 26.302 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518408, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 393, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (533.86, 494.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 1757, 4226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12070)
[0000][PE] mean and std.dev: (1873.55, 1950.84)
[0000][PE] low and high boundaries for proper pairs: (1, 15992)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1277, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1481.30, 936.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 397.404 CPU sec, 24.730 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518322, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 291, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (555.32, 523.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 403, 3686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10434)
[0000][PE] mean and std.dev: (1450.18, 1821.65)
[0000][PE] low and high boundaries for proper pairs: (1, 13808)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 4283, 5568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15690)
[0000][PE] mean and std.dev: (3800.60, 2954.77)
[0000][PE] low and high boundaries for proper pairs: (1, 20751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 397.900 CPU sec, 24.680 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518113, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 364, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 908)
[0000][PE] mean and std.dev: (324.12, 116.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 410, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (293.45, 292.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 408.164 CPU sec, 28.342 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518213, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 386, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (671.40, 700.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 453, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (627.62, 666.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1512, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6704)
[0000][PE] mean and std.dev: (2031.62, 1513.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.230 CPU sec, 24.995 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518237, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 312, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (613.80, 612.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 534, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6220)
[0000][PE] mean and std.dev: (1044.67, 1461.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1451, 3971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10079)
[0000][PE] mean and std.dev: (2414.24, 2338.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 401.249 CPU sec, 24.971 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517775, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 448, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (534.50, 409.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 567, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (407.85, 411.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 394.176 CPU sec, 23.634 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517998, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 374, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (785.37, 628.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 216, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2077)
[0000][PE] mean and std.dev: (275.73, 303.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 392.627 CPU sec, 23.452 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517689, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 320, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1687)
[0000][PE] mean and std.dev: (387.56, 365.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 419, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7228)
[0000][PE] mean and std.dev: (1146.26, 1404.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9566)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1765, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6295)
[0000][PE] mean and std.dev: (1982.83, 903.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 394.135 CPU sec, 23.709 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518372, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 357, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1128)
[0000][PE] mean and std.dev: (330.92, 175.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 1086, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7478)
[0000][PE] mean and std.dev: (1524.64, 1625.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9967)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1195, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6606)
[0000][PE] mean and std.dev: (1830.20, 1389.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 387.898 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518070, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 616, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (812.76, 522.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 287, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2011)
[0000][PE] mean and std.dev: (316.30, 298.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 1056, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (1152.11, 1055.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 392.592 CPU sec, 24.203 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518031, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 272, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (810.52, 1071.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 366, 2998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8746)
[0000][PE] mean and std.dev: (1889.36, 2726.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12794)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 389.883 CPU sec, 23.799 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518043, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 365, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (552.86, 536.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 734, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8360)
[0000][PE] mean and std.dev: (1775.64, 2256.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11035)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 394.520 CPU sec, 24.459 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517816, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 336, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (856.40, 931.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (284, 368, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (454.70, 308.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1703, 5064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13616)
[0000][PE] mean and std.dev: (2615.47, 2606.29)
[0000][PE] low and high boundaries for proper pairs: (1, 17892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 388.663 CPU sec, 23.894 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517859, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 467, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (550.00, 627.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 653, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (619.11, 616.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6129)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1758, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1562.00, 508.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 391.107 CPU sec, 23.976 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517729, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 387, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (436.90, 295.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 578, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (627.40, 579.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 393.600 CPU sec, 24.601 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518155, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 296, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (834.88, 966.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1572, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (1561.25, 838.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 391.098 CPU sec, 24.582 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518104, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 292, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 994)
[0000][PE] mean and std.dev: (288.25, 191.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 349, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7530)
[0000][PE] mean and std.dev: (840.27, 1530.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10035)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 2329, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1965.11, 837.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 390.613 CPU sec, 24.120 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518204, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 710, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1015.63, 1190.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 132, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (569.58, 948.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 1356, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6598)
[0000][PE] mean and std.dev: (1788.38, 1599.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 389.181 CPU sec, 24.463 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518367, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 361, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2078)
[0000][PE] mean and std.dev: (537.14, 432.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 810, 3798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10696)
[0000][PE] mean and std.dev: (1874.87, 2116.65)
[0000][PE] low and high boundaries for proper pairs: (1, 14145)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 391.910 CPU sec, 24.785 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517759, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 340, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1061)
[0000][PE] mean and std.dev: (362.62, 218.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1278, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (1210.40, 619.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 393.344 CPU sec, 25.676 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518397, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 327, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (826.83, 796.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (603, 860, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (971.00, 667.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 395.812 CPU sec, 27.096 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518081, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 348, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (551.93, 501.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 464, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (819.07, 934.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 393.146 CPU sec, 28.860 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518606, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 364, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (717.56, 743.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 394.823 CPU sec, 27.753 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517874, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 330, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (624.09, 713.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 448, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1230.90, 1804.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8897)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1752, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6360)
[0000][PE] mean and std.dev: (1776.18, 842.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 394.937 CPU sec, 27.481 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517620, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 378, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (523.85, 416.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (405, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 885)
[0000][PE] mean and std.dev: (489.82, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 657, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (586.00, 495.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1489, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (1524.69, 936.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 397.995 CPU sec, 25.606 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517713, 19, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 332, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (816.76, 867.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 377, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (468.35, 583.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3509)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1568, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1696.54, 1051.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 395.202 CPU sec, 26.192 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518193, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 332, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (711.46, 629.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 526, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1179.18, 1403.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1213, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (1043.73, 582.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 395.664 CPU sec, 24.369 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517914, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 260, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 555)
[0000][PE] mean and std.dev: (278.67, 70.21)
[0000][PE] low and high boundaries for proper pairs: (1, 656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 118, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (325.90, 495.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 394.892 CPU sec, 24.022 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517788, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 467, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (762.67, 706.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 396.764 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517784, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 320, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (497.56, 448.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 81, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (749.31, 1024.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7601)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 393.325 CPU sec, 23.285 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518014, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 284, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 623)
[0000][PE] mean and std.dev: (236.24, 85.71)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (779, 1591, 4062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10628)
[0000][PE] mean and std.dev: (2548.27, 2273.57)
[0000][PE] low and high boundaries for proper pairs: (1, 13911)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 399.546 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518214, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 641, 3380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9762)
[0000][PE] mean and std.dev: (2126.33, 2684.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 485, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (567.45, 588.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 1297, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1103.82, 747.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.097 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517978, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 343, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (671.60, 761.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 338, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1855)
[0000][PE] mean and std.dev: (271.92, 344.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2472)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 396.713 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517635, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 355, 751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1711)
[0000][PE] mean and std.dev: (423.00, 282.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (436, 567, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (726.82, 786.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1647, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1183.12, 665.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 419.670 CPU sec, 33.846 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518024, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 295, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (449.71, 419.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1313, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6739)
[0000][PE] mean and std.dev: (1470.73, 1038.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 413.876 CPU sec, 24.870 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518280, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 376, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1832)
[0000][PE] mean and std.dev: (489.85, 385.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 287, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1165)
[0000][PE] mean and std.dev: (205.54, 184.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1548)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 418.958 CPU sec, 28.115 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518037, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 478, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (597.76, 411.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 263, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (278.11, 369.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 416.500 CPU sec, 27.293 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518164, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 465, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (619.52, 546.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 406.460 CPU sec, 27.251 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518493, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 370, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1750)
[0000][PE] mean and std.dev: (449.20, 317.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (564, 697, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1006.09, 640.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1142, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1235.00, 648.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 405.841 CPU sec, 31.587 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518474, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 331, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (437.76, 374.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1000, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8066)
[0000][PE] mean and std.dev: (2060.36, 1959.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 403.795 CPU sec, 31.309 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518183, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 371, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (614.41, 610.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (276, 1408, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6786)
[0000][PE] mean and std.dev: (1366.75, 1310.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 404.283 CPU sec, 26.155 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517906, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 303, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2144)
[0000][PE] mean and std.dev: (407.61, 391.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 1159, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7377)
[0000][PE] mean and std.dev: (1123.33, 1223.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9752)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1389, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (1157.30, 420.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 404.506 CPU sec, 26.423 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518629, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 375, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1455)
[0000][PE] mean and std.dev: (480.00, 336.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 720, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (775.33, 880.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6689)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1782, 4004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10546)
[0000][PE] mean and std.dev: (2115.08, 1781.02)
[0000][PE] low and high boundaries for proper pairs: (1, 13817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 401.201 CPU sec, 30.194 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517667, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 388, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (556.62, 552.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 539, 5133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15185)
[0000][PE] mean and std.dev: (2265.30, 2891.55)
[0000][PE] low and high boundaries for proper pairs: (1, 20211)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1707, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1699.00, 1021.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 411.204 CPU sec, 27.252 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518267, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 257, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 925)
[0000][PE] mean and std.dev: (242.96, 161.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 563, 4873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14507)
[0000][PE] mean and std.dev: (1776.08, 2557.04)
[0000][PE] low and high boundaries for proper pairs: (1, 19324)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1323, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (1235.93, 552.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 407.628 CPU sec, 25.671 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517566, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 435, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (781.80, 753.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1212, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (1389.45, 947.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 411.778 CPU sec, 25.981 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517613, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 359, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (327.94, 270.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 289, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7082)
[0000][PE] mean and std.dev: (1109.79, 1456.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9435)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 416.433 CPU sec, 30.842 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518222, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 292, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (258.90, 105.41)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 442, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (1131.50, 1544.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9166)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1381, 1618, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (245, 3085)
[0000][PE] mean and std.dev: (1582.92, 630.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 411.823 CPU sec, 34.373 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518441, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 320, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (338.21, 157.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 409.765 CPU sec, 39.417 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518026, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 282, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (591.76, 678.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 592, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (737.15, 668.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 412.314 CPU sec, 40.666 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517954, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 246, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (327.75, 260.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1350, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1252.21, 733.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 407.239 CPU sec, 32.643 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518059, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 376, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (408.59, 289.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 391, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6813)
[0000][PE] mean and std.dev: (1161.64, 1691.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1642, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1643.77, 1024.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 408.098 CPU sec, 46.573 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518221, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 470, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (612.06, 420.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 523, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (337.78, 340.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1464, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1644.92, 988.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 409.994 CPU sec, 41.323 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517930, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 305, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (465.24, 352.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 596, 3552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10590)
[0000][PE] mean and std.dev: (1396.85, 1518.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 419.932 CPU sec, 33.544 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518673, 19, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 341, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (546.62, 474.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 1519, 4889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13665)
[0000][PE] mean and std.dev: (2621.63, 2657.63)
[0000][PE] low and high boundaries for proper pairs: (1, 18053)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 416.949 CPU sec, 30.807 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517482, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 708, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (909.52, 773.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 600, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (597.47, 577.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1236, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1450.75, 1154.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 414.149 CPU sec, 31.599 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517895, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 592, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (899.83, 714.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 195, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (207.31, 248.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 417.994 CPU sec, 31.452 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517958, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 612, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (585.12, 449.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 68, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1486)
[0000][PE] mean and std.dev: (196.60, 240.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1980)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 422.417 CPU sec, 31.384 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518310, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 278, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (582.93, 671.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 412, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (472.54, 544.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 423.061 CPU sec, 36.817 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517938, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 381, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1729)
[0000][PE] mean and std.dev: (426.00, 226.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (49, 260, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8281)
[0000][PE] mean and std.dev: (1256.17, 1837.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11025)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 424.836 CPU sec, 35.206 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518376, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 519, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (644.67, 547.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (380, 1048, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1504.08, 1543.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 934, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (1293.09, 778.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 417.539 CPU sec, 32.296 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518104, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 274, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (523.30, 516.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (170, 494, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (504.67, 491.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 415.780 CPU sec, 32.606 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518021, 18, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 358, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1478)
[0000][PE] mean and std.dev: (339.00, 160.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 550, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (935.39, 1124.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6596)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 410.839 CPU sec, 27.959 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517951, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 354, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1210)
[0000][PE] mean and std.dev: (341.89, 262.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1451, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (1399.31, 695.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 411.943 CPU sec, 29.630 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517907, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 469, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (851.30, 895.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 453, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6897)
[0000][PE] mean and std.dev: (1199.94, 1605.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9173)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 951, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (1162.17, 676.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 410.321 CPU sec, 25.270 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517793, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 430, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (635.13, 578.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 214, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (516.69, 658.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 412.381 CPU sec, 27.858 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517762, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 386, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (871.09, 977.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 990, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6766)
[0000][PE] mean and std.dev: (1197.67, 1252.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9010)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1359, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (1306.00, 584.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 412.090 CPU sec, 31.957 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518101, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 298, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1436)
[0000][PE] mean and std.dev: (343.22, 294.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (397, 861, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1173.06, 1326.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7565)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 411.814 CPU sec, 34.875 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518422, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 317, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (435.13, 433.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (208, 695, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1942)
[0000][PE] mean and std.dev: (402.75, 307.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2520)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1522, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6468)
[0000][PE] mean and std.dev: (1851.36, 1622.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 410.954 CPU sec, 33.375 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518070, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 294, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 842)
[0000][PE] mean and std.dev: (271.89, 92.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1246, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1556.20, 1082.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 411.141 CPU sec, 31.134 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517919, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 288, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (656.76, 797.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 839, 6013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17373)
[0000][PE] mean and std.dev: (2822.59, 3158.62)
[0000][PE] low and high boundaries for proper pairs: (1, 23053)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 414.494 CPU sec, 31.202 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518333, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 253, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 769)
[0000][PE] mean and std.dev: (239.89, 89.20)
[0000][PE] low and high boundaries for proper pairs: (1, 965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.63, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 128, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5604)
[0000][PE] mean and std.dev: (965.00, 1529.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 410.577 CPU sec, 36.260 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517699, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 381, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1407)
[0000][PE] mean and std.dev: (393.69, 200.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 918, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1389.67, 1777.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9090)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 1292, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (941.60, 461.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 415.915 CPU sec, 36.752 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518185, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 310, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (546.59, 550.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 308, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (604.00, 914.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 418.630 CPU sec, 33.194 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518187, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 321, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1586)
[0000][PE] mean and std.dev: (433.44, 348.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 595, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1793)
[0000][PE] mean and std.dev: (491.50, 304.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2283)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 407.968 CPU sec, 34.224 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518381, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 309, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1296)
[0000][PE] mean and std.dev: (351.82, 261.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 403, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (432.00, 475.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1533, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (1446.44, 467.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 408.299 CPU sec, 31.983 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518089, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 310, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (313.90, 190.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 197, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1403)
[0000][PE] mean and std.dev: (200.33, 293.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1869)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 412.477 CPU sec, 34.762 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517597, 14, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 420, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (719.56, 672.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (239, 655, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (519.36, 397.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 2530, 5652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14842)
[0000][PE] mean and std.dev: (3470.31, 3100.90)
[0000][PE] low and high boundaries for proper pairs: (1, 19437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 412.062 CPU sec, 34.452 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518057, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 356, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1078)
[0000][PE] mean and std.dev: (349.50, 156.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 21, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8448)
[0000][PE] mean and std.dev: (1088.38, 2149.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11261)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1145, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (1172.73, 539.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 411.146 CPU sec, 33.977 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518434, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 330, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2212)
[0000][PE] mean and std.dev: (497.92, 500.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 255, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (753.23, 1104.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 405.074 CPU sec, 31.886 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518191, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 383, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (561.74, 586.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (816, 1674, 4158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10842)
[0000][PE] mean and std.dev: (2285.56, 2081.91)
[0000][PE] low and high boundaries for proper pairs: (1, 14184)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 402.681 CPU sec, 32.723 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518171, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 379, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (570.17, 487.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (458, 1436, 4260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11864)
[0000][PE] mean and std.dev: (2321.53, 2400.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15666)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1488, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1560.60, 1240.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 404.946 CPU sec, 31.557 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518109, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 320, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1425)
[0000][PE] mean and std.dev: (381.74, 274.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (95, 1147, 4051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11963)
[0000][PE] mean and std.dev: (1924.38, 1970.39)
[0000][PE] low and high boundaries for proper pairs: (1, 15919)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 404.698 CPU sec, 32.202 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518154, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 270, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 824)
[0000][PE] mean and std.dev: (242.20, 110.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 517, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (641.92, 711.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 407.661 CPU sec, 32.192 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518136, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 339, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (520.25, 468.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 404.476 CPU sec, 32.599 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517641, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 297, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (435.54, 419.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (44, 2237, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8102)
[0000][PE] mean and std.dev: (1513.70, 1205.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1297, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1466.00, 1095.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 404.739 CPU sec, 31.752 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517810, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 335, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1629)
[0000][PE] mean and std.dev: (316.69, 145.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 405.036 CPU sec, 33.810 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518149, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 421, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (576.27, 473.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (170, 432, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1889)
[0000][PE] mean and std.dev: (313.67, 255.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 403.540 CPU sec, 35.024 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518127, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 346, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1502)
[0000][PE] mean and std.dev: (346.70, 190.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 438, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (495.13, 678.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 405.105 CPU sec, 32.193 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518543, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 403.356 CPU sec, 32.251 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518282, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 556, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1101.48, 1037.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1144, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1418.25, 993.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 403.689 CPU sec, 30.842 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518084, 19, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 371, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (712.50, 766.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (415, 680, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (849.83, 797.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 405.261 CPU sec, 33.689 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517998, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 665, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (804.67, 680.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 26, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (492.15, 803.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 405.595 CPU sec, 32.270 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517767, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 337, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (388.33, 247.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (432, 596, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (863.50, 704.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1564, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1286.91, 1016.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 405.421 CPU sec, 30.269 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518007, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 509, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (851.18, 888.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.86, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (649, 909, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1243.50, 1134.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1154, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (211, 2156)
[0000][PE] mean and std.dev: (1083.22, 272.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 405.026 CPU sec, 31.733 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517988, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 390, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1988)
[0000][PE] mean and std.dev: (477.19, 444.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 880, 4084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12240)
[0000][PE] mean and std.dev: (1987.10, 2666.70)
[0000][PE] low and high boundaries for proper pairs: (1, 16318)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 406.351 CPU sec, 31.896 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517873, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 932, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1219.44, 1293.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 405.743 CPU sec, 29.755 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518107, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 291, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1332)
[0000][PE] mean and std.dev: (295.38, 182.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 402.076 CPU sec, 26.742 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517907, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 306, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 678)
[0000][PE] mean and std.dev: (271.30, 96.28)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 838, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8287)
[0000][PE] mean and std.dev: (1631.70, 2312.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11049)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1232, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1169.14, 606.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 409.119 CPU sec, 28.125 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518203, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 287, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (418.48, 383.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 82, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (506.33, 779.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 403.836 CPU sec, 25.015 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518107, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 377, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1691)
[0000][PE] mean and std.dev: (427.57, 313.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 263, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (540.82, 637.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 409.646 CPU sec, 26.707 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517510, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 325, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1459)
[0000][PE] mean and std.dev: (394.57, 252.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 445, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9318)
[0000][PE] mean and std.dev: (1694.43, 2253.03)
[0000][PE] low and high boundaries for proper pairs: (1, 12333)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1684, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1161.50, 539.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 408.550 CPU sec, 23.832 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518129, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 402, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2212)
[0000][PE] mean and std.dev: (574.27, 497.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 361, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1949)
[0000][PE] mean and std.dev: (257.25, 257.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 411.197 CPU sec, 24.233 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517675, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 354, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (494.89, 416.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 408.723 CPU sec, 23.580 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517880, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 293, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (241.61, 80.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 409.824 CPU sec, 23.472 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518321, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 296, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 598)
[0000][PE] mean and std.dev: (259.84, 107.41)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1550, 2171, 3909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8627)
[0000][PE] mean and std.dev: (2384.90, 1255.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 403.800 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517797, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 371, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (733.85, 845.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1855, 4024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9622)
[0000][PE] mean and std.dev: (2827.10, 2319.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 409.036 CPU sec, 23.564 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517451, 13, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 306, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (345.62, 219.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 1303, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5652)
[0000][PE] mean and std.dev: (982.92, 779.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1461, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1560.73, 862.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 409.032 CPU sec, 23.289 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517880, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 424, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (749.91, 720.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1952, 3961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9827)
[0000][PE] mean and std.dev: (2550.43, 1823.71)
[0000][PE] low and high boundaries for proper pairs: (1, 12760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 409.477 CPU sec, 23.544 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517831, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 401, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (553.12, 397.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 411.741 CPU sec, 23.385 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518206, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 355, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (527.65, 480.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1522, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1883.43, 1382.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 400.693 CPU sec, 22.478 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518290, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 266, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (276.16, 151.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 401.916 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517881, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 384, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (852.00, 889.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 403.112 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518110, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 284, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 666)
[0000][PE] mean and std.dev: (276.29, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 674, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8015)
[0000][PE] mean and std.dev: (1630.38, 2056.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10605)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 403.496 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518128, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 350, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (669.05, 654.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 396.791 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517963, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 607, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (761.00, 806.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.69, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 2202, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7845)
[0000][PE] mean and std.dev: (1807.50, 1998.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10450)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 1620, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6651)
[0000][PE] mean and std.dev: (1528.38, 1117.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 398.685 CPU sec, 22.386 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518245, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 343, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1124)
[0000][PE] mean and std.dev: (308.04, 156.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 26, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1897)
[0000][PE] mean and std.dev: (311.15, 386.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1569, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7007)
[0000][PE] mean and std.dev: (1725.00, 948.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 397.557 CPU sec, 22.358 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518120, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1197, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1673.82, 1757.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 613, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (533.20, 521.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 397.260 CPU sec, 22.287 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517944, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 373, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (632.93, 598.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 402.308 CPU sec, 22.595 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518497, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 334, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (288.72, 103.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 398.868 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517927, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 352, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1478)
[0000][PE] mean and std.dev: (405.92, 337.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 664, 4938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14772)
[0000][PE] mean and std.dev: (1839.08, 2617.13)
[0000][PE] low and high boundaries for proper pairs: (1, 19689)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1408, 2384, 4712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11320)
[0000][PE] mean and std.dev: (2734.15, 1853.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 396.753 CPU sec, 22.282 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518087, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 343, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (413.30, 301.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.20, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 406, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (430.92, 531.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 399.566 CPU sec, 22.431 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518518, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 383, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (718.84, 721.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 401.769 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518290, 18, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 333, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (516.37, 516.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 742, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7414)
[0000][PE] mean and std.dev: (1366.78, 1462.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9879)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1573, 3861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9479)
[0000][PE] mean and std.dev: (2138.62, 1445.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 399.902 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518308, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 400, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (648.93, 728.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 458, 3335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10003)
[0000][PE] mean and std.dev: (1932.87, 2681.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13337)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1505, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1610.23, 891.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 393.467 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518094, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 385, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (351.74, 177.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 836, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1257.13, 1351.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 401.846 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518440, 20, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 286, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (341.95, 254.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 407, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (340.74, 344.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2916)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 1067, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1141.00, 944.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 411.409 CPU sec, 23.934 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518280, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 347, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (287.33, 115.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (555, 690, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (1298.64, 1302.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7967)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1231, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1674.47, 1223.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 409.668 CPU sec, 23.995 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518464, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 297, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 671)
[0000][PE] mean and std.dev: (273.11, 112.69)
[0000][PE] low and high boundaries for proper pairs: (1, 820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 408.431 CPU sec, 24.168 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518126, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 273, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1895)
[0000][PE] mean and std.dev: (382.15, 319.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 1520, 3138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9222)
[0000][PE] mean and std.dev: (2207.70, 2696.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12993)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 406.495 CPU sec, 23.391 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518112, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 442, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (649.05, 588.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (396, 1634, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6558)
[0000][PE] mean and std.dev: (1523.14, 1562.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 417.653 CPU sec, 24.796 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517698, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 339, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (309.95, 131.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 916, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7272)
[0000][PE] mean and std.dev: (1498.80, 1572.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9688)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1172, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (1187.31, 712.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 409.647 CPU sec, 23.841 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518119, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 347, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (708.70, 735.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1582, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (1344.88, 514.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 406.514 CPU sec, 23.363 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517735, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 274, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (599.31, 662.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 330, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (604.35, 838.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 411.590 CPU sec, 23.366 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517567, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 369, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (670.24, 705.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 637, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6217)
[0000][PE] mean and std.dev: (1249.15, 1736.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8288)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1279, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (1611.00, 1100.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 408.381 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518351, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 351, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (434.95, 334.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 407.189 CPU sec, 23.151 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517487, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 412, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1982)
[0000][PE] mean and std.dev: (573.92, 446.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (180, 717, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (443.27, 350.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 411.886 CPU sec, 23.393 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518062, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 597, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1201.41, 1133.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 899, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (716.00, 360.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 408.547 CPU sec, 23.238 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518423, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 283, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (265.61, 91.53)
[0000][PE] low and high boundaries for proper pairs: (1, 762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 408.125 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517786, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 345, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (407.91, 283.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 406.203 CPU sec, 22.850 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518064, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 327, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (549.76, 609.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.70, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (123, 558, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (725.47, 780.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 401.683 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518570, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 309, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1859)
[0000][PE] mean and std.dev: (328.31, 224.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 575, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6207)
[0000][PE] mean and std.dev: (795.75, 1029.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1171, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (1144.58, 648.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 397.334 CPU sec, 22.277 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517996, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 415, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1200.80, 1479.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 449, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (486.89, 587.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 401.995 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517968, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 410, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (604.55, 435.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 593, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (403.75, 389.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1146, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (998.33, 474.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 402.486 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518349, 17, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 532, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (671.68, 659.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 601, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (622.53, 581.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 399.298 CPU sec, 22.442 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517877, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 272, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1193)
[0000][PE] mean and std.dev: (363.55, 305.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 752, 3650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10882)
[0000][PE] mean and std.dev: (1456.70, 1855.75)
[0000][PE] low and high boundaries for proper pairs: (1, 14498)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1421, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1843.40, 1291.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 396.906 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517712, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 354, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 809)
[0000][PE] mean and std.dev: (257.60, 121.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 954, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 1843)
[0000][PE] mean and std.dev: (884.78, 384.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 401.624 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517617, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 326, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (491.39, 464.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 504, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (553.00, 553.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1605, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (1307.18, 651.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 407.113 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518093, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 248, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (620.41, 758.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 410.932 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518119, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 346, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (558.89, 432.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 398, 3767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11291)
[0000][PE] mean and std.dev: (1587.23, 2440.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15053)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1150, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (1413.73, 835.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 415.678 CPU sec, 23.544 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518076, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 526, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (880.00, 889.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.84, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (452, 729, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6650)
[0000][PE] mean and std.dev: (1040.40, 1040.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 416.528 CPU sec, 23.463 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518077, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 398, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (601.60, 649.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (515, 746, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1171.33, 1038.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1323, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1406.53, 717.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 408.086 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517988, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 290, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (478.05, 491.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1274, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1743.91, 1250.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 407.031 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518126, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 322, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (400.16, 328.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 464, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1264.73, 2012.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9889)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 400.963 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518478, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 351, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (802.71, 856.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 557, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (543.70, 586.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 405.138 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517958, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 449, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1701)
[0000][PE] mean and std.dev: (519.23, 361.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1524, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1396.18, 724.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 400.971 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518047, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 409, 4597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13201)
[0000][PE] mean and std.dev: (1578.75, 1849.37)
[0000][PE] low and high boundaries for proper pairs: (1, 17503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.57, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 403.982 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517999, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 395, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (822.75, 1096.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.57, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (441, 1342, 3775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10443)
[0000][PE] mean and std.dev: (1851.42, 2084.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13777)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1296, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8701)
[0000][PE] mean and std.dev: (2122.64, 2004.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 400.852 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518347, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 237, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (255.83, 103.60)
[0000][PE] low and high boundaries for proper pairs: (1, 848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 463, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (559.40, 585.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1429, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1397.90, 971.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 398.603 CPU sec, 22.543 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517562, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 427, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (614.81, 568.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (105, 559, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8487)
[0000][PE] mean and std.dev: (1403.23, 1763.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11281)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 403.717 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517658, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 312, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (463.11, 376.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 1078, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1571.27, 1789.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1227, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (1018.78, 489.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 402.567 CPU sec, 22.579 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517807, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 315, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 900)
[0000][PE] mean and std.dev: (287.42, 172.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 227, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (373.82, 558.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 404.907 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518142, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 326, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1473)
[0000][PE] mean and std.dev: (335.00, 215.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 804, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6341)
[0000][PE] mean and std.dev: (1435.92, 1713.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8330)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 400.969 CPU sec, 22.544 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518150, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 367, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (662.21, 697.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1445, 3459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8729)
[0000][PE] mean and std.dev: (1826.75, 1319.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 397.149 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518124, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 347, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (547.33, 535.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 715, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (594.33, 306.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2762)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 406.242 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518213, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 604, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (678.33, 588.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 395.623 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517854, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 554, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1228.58, 1361.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 1134, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7634)
[0000][PE] mean and std.dev: (1234.90, 1300.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10178)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1188, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (1188.54, 593.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 405.311 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517925, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 315, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 997)
[0000][PE] mean and std.dev: (336.80, 155.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 544, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7472)
[0000][PE] mean and std.dev: (1084.64, 1403.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9959)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 398.987 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518007, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 405, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (471.50, 333.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (368, 859, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (814.30, 630.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1162, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8556)
[0000][PE] mean and std.dev: (1695.23, 1458.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 407.456 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518211, 23, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 326, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2580)
[0000][PE] mean and std.dev: (534.45, 537.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 630, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1085.27, 1278.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6973)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 394.574 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518213, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 329, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1524)
[0000][PE] mean and std.dev: (420.79, 313.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (289, 1586, 3804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10834)
[0000][PE] mean and std.dev: (2078.87, 2249.00)
[0000][PE] low and high boundaries for proper pairs: (1, 14349)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 401.749 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517937, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 287, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1799)
[0000][PE] mean and std.dev: (443.76, 454.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 399.597 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518193, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 602, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (838.19, 874.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (259, 539, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (404.18, 346.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 398.926 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518146, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 516, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (923.65, 993.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 397.493 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517742, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 323, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (39, 624)
[0000][PE] mean and std.dev: (307.20, 83.49)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 254, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (645.33, 721.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 395.876 CPU sec, 22.194 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517909, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 971, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1326.56, 1227.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 527, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8241)
[0000][PE] mean and std.dev: (1506.17, 2113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10987)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1524, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7403)
[0000][PE] mean and std.dev: (1682.30, 1261.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 396.722 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518276, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 373, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1120)
[0000][PE] mean and std.dev: (369.50, 227.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 535, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (862.67, 1003.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 396.407 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518130, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 305, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 689)
[0000][PE] mean and std.dev: (280.00, 78.27)
[0000][PE] low and high boundaries for proper pairs: (1, 836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 1349, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (1228.15, 1078.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 393.048 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518114, 20, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 308, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (407.00, 353.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 316, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (611.33, 871.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7281)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 393.682 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518370, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 553, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (895.90, 844.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (325, 663, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (597.22, 503.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 395.461 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518296, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 377, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (542.25, 443.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (309, 734, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (496.67, 353.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2953)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 394.312 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518215, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 345, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1219)
[0000][PE] mean and std.dev: (335.84, 251.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 394.585 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518005, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 441, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (680.52, 584.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 741, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (380.36, 374.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1192, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1145.71, 719.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 393.261 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518274, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 270, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (329.00, 259.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 519, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (650.33, 896.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 393.309 CPU sec, 22.147 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518101, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 315, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (678.22, 794.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 398.529 CPU sec, 22.388 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517847, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 428, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (843.70, 749.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (406, 734, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (647.56, 465.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1359, 2783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1658.08, 1047.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 392.671 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518137, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 377, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1199)
[0000][PE] mean and std.dev: (320.92, 151.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 479, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (443.31, 424.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1394, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1467.46, 664.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 394.513 CPU sec, 22.194 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518233, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 317, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1606)
[0000][PE] mean and std.dev: (402.70, 301.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (354, 657, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (451.67, 308.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2526)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (366, 1713, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1328.92, 925.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 396.768 CPU sec, 22.300 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518009, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 703, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (876.78, 837.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1026, 3048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7420)
[0000][PE] mean and std.dev: (1302.80, 994.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 392.755 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517610, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 366, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (423.44, 326.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1177, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1592.75, 1160.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 396.206 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518083, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 382, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (708.28, 962.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 442, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (903.27, 932.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 390.728 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518158, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 384, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2403)
[0000][PE] mean and std.dev: (466.57, 463.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (327, 1151, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1140.09, 1134.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 393.959 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518018, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 365, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2574)
[0000][PE] mean and std.dev: (444.93, 324.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (570, 1045, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1190.33, 1107.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 396.217 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518315, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 398, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (760.61, 702.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 391.321 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518279, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 290, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (278.52, 145.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 442, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (326.00, 372.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 394.100 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517981, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 372, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (570.57, 681.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (488, 639, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (736.10, 574.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1868, 7809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21039)
[0000][PE] mean and std.dev: (3614.67, 3359.00)
[0000][PE] low and high boundaries for proper pairs: (1, 27654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 394.421 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517594, 24, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 418, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1250.05, 1583.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (198, 439, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (775.05, 1046.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7870)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1106, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1384.22, 1226.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 393.884 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517838, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 280, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (241.72, 111.81)
[0000][PE] low and high boundaries for proper pairs: (1, 964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 910, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6762)
[0000][PE] mean and std.dev: (1300.31, 1686.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8965)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.401 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518218, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 972, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6397)
[0000][PE] mean and std.dev: (1109.08, 1065.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (446, 518, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (600.09, 464.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 946, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1421.55, 1156.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 389.959 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517969, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 430, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (613.15, 558.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (480, 538, 3198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8634)
[0000][PE] mean and std.dev: (1506.91, 1580.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11352)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 391.754 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518332, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 325, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (358.44, 227.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 569, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (523.33, 636.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1979, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6096)
[0000][PE] mean and std.dev: (1772.11, 975.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 387.972 CPU sec, 21.758 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518272, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 200, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1443)
[0000][PE] mean and std.dev: (242.82, 145.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 20, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (87.82, 155.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2135)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 394.966 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517981, 12, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (557, 907, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (827.70, 696.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 2080, 3599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9145)
[0000][PE] mean and std.dev: (1763.11, 1227.85)
[0000][PE] low and high boundaries for proper pairs: (1, 11918)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 389.585 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517984, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 392, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (784.85, 919.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 1020, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5083)
[0000][PE] mean and std.dev: (1027.00, 1342.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1385, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1470.67, 845.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 396.040 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518378, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 361, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (538.79, 573.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (119, 478, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1583.83, 2166.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10252)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 1027, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1454.79, 1256.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 389.201 CPU sec, 21.827 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518437, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 292, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (524.56, 655.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 283, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (947.00, 1120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8341)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 392.145 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518508, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 620, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1149.00, 1078.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 1154, 4987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14927)
[0000][PE] mean and std.dev: (2418.00, 2929.38)
[0000][PE] low and high boundaries for proper pairs: (1, 19897)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 2704, 6272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16326)
[0000][PE] mean and std.dev: (3219.42, 2366.98)
[0000][PE] low and high boundaries for proper pairs: (1, 21353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 388.909 CPU sec, 21.818 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518161, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 331, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1875)
[0000][PE] mean and std.dev: (410.11, 378.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (564, 1744, 3920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10632)
[0000][PE] mean and std.dev: (2130.93, 1742.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13988)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 390.557 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517716, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 304, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (587.69, 594.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1565, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6872)
[0000][PE] mean and std.dev: (1726.44, 1035.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 392.821 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518300, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 467, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (615.09, 542.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 443, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (577.12, 589.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 390.717 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517949, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 435, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (958.76, 947.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 515, 5043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14485)
[0000][PE] mean and std.dev: (1968.92, 2698.99)
[0000][PE] low and high boundaries for proper pairs: (1, 19206)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1663, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (1458.60, 505.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 388.620 CPU sec, 21.768 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518286, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 308, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5921)
[0000][PE] mean and std.dev: (850.24, 921.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (654, 986, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (893.00, 640.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 389.520 CPU sec, 21.826 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518335, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 307, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1601)
[0000][PE] mean and std.dev: (471.36, 385.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 388.686 CPU sec, 21.850 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518317, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 375, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (737.77, 852.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 344, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (329.64, 380.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1078, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (909.33, 393.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 388.696 CPU sec, 21.784 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518230, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 293, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (316.16, 148.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 880, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5518)
[0000][PE] mean and std.dev: (1193.46, 1479.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7352)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 393.253 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517867, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 300, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1757)
[0000][PE] mean and std.dev: (418.75, 331.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 419, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (453.17, 664.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 395.509 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518068, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 376, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (960.23, 1134.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 274, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1677)
[0000][PE] mean and std.dev: (263.30, 255.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2235)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 390.502 CPU sec, 21.869 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518323, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 401, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (817.21, 839.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 393.949 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517909, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 384, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (769.83, 876.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 419, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (946.45, 1142.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1626, 3937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10325)
[0000][PE] mean and std.dev: (2668.33, 2274.97)
[0000][PE] low and high boundaries for proper pairs: (1, 13519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 390.762 CPU sec, 21.922 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518200, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 363, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (612.73, 605.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 389.456 CPU sec, 21.854 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518185, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 250, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1438)
[0000][PE] mean and std.dev: (308.69, 184.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 123, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (425.23, 666.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 1913, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1494.44, 936.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 393.775 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518212, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 305, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (569.71, 545.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 567, 4855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14425)
[0000][PE] mean and std.dev: (1889.00, 2822.86)
[0000][PE] low and high boundaries for proper pairs: (1, 19210)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1158, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8841)
[0000][PE] mean and std.dev: (1863.25, 1495.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 403.534 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518092, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 324, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1410)
[0000][PE] mean and std.dev: (433.11, 307.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 275, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2020)
[0000][PE] mean and std.dev: (276.42, 336.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2693)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1381, 3669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8923)
[0000][PE] mean and std.dev: (2050.27, 1386.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 392.688 CPU sec, 22.555 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518171, 15, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 279, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (262.00, 73.66)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 306, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (600.73, 678.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 397.184 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518106, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 367, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2624)
[0000][PE] mean and std.dev: (606.48, 609.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1088, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (934.12, 399.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 399.122 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518063, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 345, 641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1351)
[0000][PE] mean and std.dev: (384.48, 240.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (340, 1066, 4118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11674)
[0000][PE] mean and std.dev: (1856.00, 1915.30)
[0000][PE] low and high boundaries for proper pairs: (1, 15452)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 403.316 CPU sec, 25.044 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518141, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 339, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2214)
[0000][PE] mean and std.dev: (420.69, 350.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 392.721 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517749, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 295, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (380.71, 265.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 1676, 5102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14930)
[0000][PE] mean and std.dev: (2771.70, 3175.32)
[0000][PE] low and high boundaries for proper pairs: (1, 19844)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 400.548 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517709, 8, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 293, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1486)
[0000][PE] mean and std.dev: (390.06, 219.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 402.830 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518487, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 391, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (734.39, 697.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 172, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (517.22, 810.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6797)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1752, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7843)
[0000][PE] mean and std.dev: (1954.30, 1371.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 403.568 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518357, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 382, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (790.94, 730.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 407.717 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518475, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 341, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (560.09, 547.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 525, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (643.40, 910.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1359, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (1176.00, 609.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 405.095 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517985, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 397, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (503.72, 409.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 621, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8331)
[0000][PE] mean and std.dev: (1681.60, 2401.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11289)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1230, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (1146.23, 455.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 407.253 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518461, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 327, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (336.42, 185.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 430, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1808)
[0000][PE] mean and std.dev: (409.46, 324.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2375)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1245, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (941.78, 516.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 405.492 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518116, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 345, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (569.16, 604.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (630, 1163, 4993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13719)
[0000][PE] mean and std.dev: (2723.20, 2902.87)
[0000][PE] low and high boundaries for proper pairs: (1, 18082)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1142, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (933.60, 517.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 415.833 CPU sec, 23.393 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518341, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 275, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (473.76, 595.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 411.285 CPU sec, 23.121 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518006, 16, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 405, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (618.82, 569.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 274, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (427.29, 669.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7634)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 411.116 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518498, 22, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 501, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (631.23, 514.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 344, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1027.59, 1393.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7854)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1294, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (1189.57, 488.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 415.064 CPU sec, 23.295 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517955, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 347, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (591.70, 533.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (162, 438, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (643.00, 764.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1271, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (1311.30, 894.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 414.709 CPU sec, 23.347 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518248, 13, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 334, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (592.35, 562.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 506, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (668.46, 813.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1338, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1307.18, 768.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 418.438 CPU sec, 23.609 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518089, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 453, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (375.14, 198.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 1236, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (956.07, 1047.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 412.005 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518199, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 285, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (399.78, 346.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 563, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7059)
[0000][PE] mean and std.dev: (1652.91, 2403.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11266)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 412.626 CPU sec, 23.226 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518465, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 365, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (447.87, 335.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 33, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1974)
[0000][PE] mean and std.dev: (222.50, 431.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2631)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 418.944 CPU sec, 23.541 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517415, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 308, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (262.21, 111.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (281, 1214, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8573)
[0000][PE] mean and std.dev: (2049.94, 2401.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11654)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1267, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1328.80, 371.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 419.374 CPU sec, 23.593 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517965, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 397, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1393)
[0000][PE] mean and std.dev: (330.41, 152.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.39, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 414.783 CPU sec, 23.315 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518142, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 391, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1696)
[0000][PE] mean and std.dev: (532.42, 479.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 665, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7920)
[0000][PE] mean and std.dev: (1529.38, 1914.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10465)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 414.848 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518444, 16, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 349, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1273)
[0000][PE] mean and std.dev: (373.06, 258.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 373, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8050)
[0000][PE] mean and std.dev: (1313.06, 1999.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10733)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1091, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7212)
[0000][PE] mean and std.dev: (1811.18, 1480.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 411.974 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518111, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 250, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1098)
[0000][PE] mean and std.dev: (267.22, 186.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 387, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9596)
[0000][PE] mean and std.dev: (1433.64, 2090.45)
[0000][PE] low and high boundaries for proper pairs: (1, 12793)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 419.566 CPU sec, 23.589 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518040, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 420, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (675.70, 691.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 417.203 CPU sec, 23.557 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517615, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 436, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1865)
[0000][PE] mean and std.dev: (511.29, 351.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 350, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6931)
[0000][PE] mean and std.dev: (1334.00, 2017.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9406)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 413.449 CPU sec, 23.233 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517936, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 321, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (306.06, 140.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.49, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1223, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1006.67, 686.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 412.915 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517700, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 384, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (907.30, 937.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 412, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (342.90, 372.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 391.956 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518411, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 303, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (586.70, 674.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (448, 837, 3129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8491)
[0000][PE] mean and std.dev: (1687.00, 1797.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11172)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 386.669 CPU sec, 21.679 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518346, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 291, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 842)
[0000][PE] mean and std.dev: (277.00, 108.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 757, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (713.90, 612.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1395, 2047, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1810.00, 757.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 383.563 CPU sec, 21.514 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517974, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 408, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (686.95, 602.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1541, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7468)
[0000][PE] mean and std.dev: (2092.00, 1630.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 390.388 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518142, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 267, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (246.62, 109.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 391.852 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517818, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 359, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (571.53, 572.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1536, 3339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8785)
[0000][PE] mean and std.dev: (1879.29, 1418.51)
[0000][PE] low and high boundaries for proper pairs: (1, 11508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 390.569 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518127, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 344, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (335.00, 263.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1630, 4023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10435)
[0000][PE] mean and std.dev: (2336.08, 1996.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 386.734 CPU sec, 21.710 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518609, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 336, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 961)
[0000][PE] mean and std.dev: (327.05, 175.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 375, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (466.77, 589.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 1141, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1370.23, 930.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 389.307 CPU sec, 21.842 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517764, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 390, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (433.21, 357.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.38, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1581, 7250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19796)
[0000][PE] mean and std.dev: (3498.50, 3589.54)
[0000][PE] low and high boundaries for proper pairs: (1, 26069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 387.961 CPU sec, 21.736 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517973, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 305, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (276.57, 102.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (129, 616, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (584.67, 570.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 392.199 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517651, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 328, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 934)
[0000][PE] mean and std.dev: (341.88, 210.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (486, 771, 4717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13179)
[0000][PE] mean and std.dev: (2094.92, 2337.56)
[0000][PE] low and high boundaries for proper pairs: (1, 17410)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1644, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1502.40, 792.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 391.151 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518033, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 317, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1434)
[0000][PE] mean and std.dev: (307.12, 164.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 302, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (629.79, 737.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1154, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1160.60, 594.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 387.182 CPU sec, 21.762 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517516, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 391, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (525.70, 432.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 26, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (70.83, 144.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1376, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1342.88, 538.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 400.511 CPU sec, 22.454 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517795, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 226, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (335.62, 303.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (650, 2036, 4011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10733)
[0000][PE] mean and std.dev: (2354.00, 2104.62)
[0000][PE] low and high boundaries for proper pairs: (1, 14094)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 392.723 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518041, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 318, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (609.00, 680.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 3, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (354.67, 527.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 397.910 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517701, 19, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 348, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (287.38, 168.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 706, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (697.83, 645.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1309, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1288.67, 702.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 392.259 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518134, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 466, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (658.74, 510.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (620, 1808, 3308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8684)
[0000][PE] mean and std.dev: (2128.82, 2218.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11372)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1364, 3631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9435)
[0000][PE] mean and std.dev: (2216.92, 2398.52)
[0000][PE] low and high boundaries for proper pairs: (1, 12337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 396.722 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517805, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 471, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (611.16, 527.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (427, 538, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1720)
[0000][PE] mean and std.dev: (508.67, 172.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2151)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 404.636 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518017, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 428, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (764.53, 553.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.40, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 395.736 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518048, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 245, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (511.86, 667.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (275, 488, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1088.25, 1319.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 401.688 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518106, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 321, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (782.87, 860.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 218, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (924.67, 1436.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6671)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 397.019 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517952, 19, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 372, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2203)
[0000][PE] mean and std.dev: (519.45, 388.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (342, 576, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5991)
[0000][PE] mean and std.dev: (1191.44, 1337.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7874)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 400.554 CPU sec, 22.487 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518369, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 387, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (517.87, 530.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (503, 915, 4705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13109)
[0000][PE] mean and std.dev: (2208.62, 2742.48)
[0000][PE] low and high boundaries for proper pairs: (1, 17311)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 397.962 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518371, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 466, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2041)
[0000][PE] mean and std.dev: (577.00, 499.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 842, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (945.09, 1063.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1438, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1451.11, 1181.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 394.016 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517838, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 469, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (662.33, 496.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 217, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2366)
[0000][PE] mean and std.dev: (486.55, 594.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1036, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7103)
[0000][PE] mean and std.dev: (1677.62, 1507.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 401.356 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518441, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 399, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (532.33, 346.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 396.420 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518180, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 288, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (944.00, 1185.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1799, 3387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8727)
[0000][PE] mean and std.dev: (2624.80, 2369.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 399.462 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518098, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 287, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1587)
[0000][PE] mean and std.dev: (357.52, 296.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 395.297 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518178, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 616, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (658.24, 461.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1478, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1775.45, 895.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 391.403 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518255, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 355, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (433.44, 296.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (177, 1381, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8814)
[0000][PE] mean and std.dev: (1667.41, 1731.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11693)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1081, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1321.67, 1054.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 391.960 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517887, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 346, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1566)
[0000][PE] mean and std.dev: (403.10, 322.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 418, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (280.08, 300.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 395.677 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518429, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 369, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (814.10, 920.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (417, 883, 4821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13629)
[0000][PE] mean and std.dev: (2139.42, 2341.29)
[0000][PE] low and high boundaries for proper pairs: (1, 18033)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1228, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1156.15, 750.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 395.289 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518030, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 353, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2315)
[0000][PE] mean and std.dev: (428.43, 333.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1697, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1450.36, 902.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 392.727 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518068, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 423, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (692.95, 580.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 2106, 4984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12824)
[0000][PE] mean and std.dev: (2761.00, 2052.33)
[0000][PE] low and high boundaries for proper pairs: (1, 16744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 397.839 CPU sec, 22.395 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517862, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 243, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (196.33, 107.80)
[0000][PE] low and high boundaries for proper pairs: (1, 966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 410, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6031)
[0000][PE] mean and std.dev: (1101.18, 1368.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7970)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 398.568 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518542, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 364, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (733.58, 759.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 406, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (619.35, 881.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1479, 2325, 3419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7299)
[0000][PE] mean and std.dev: (2136.89, 1038.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 392.627 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518095, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 714, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (834.09, 607.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 740, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1113.50, 1241.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1115, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1566.73, 987.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 396.863 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518212, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 532, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (722.56, 638.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 307, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (522.21, 659.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 400.408 CPU sec, 22.487 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518066, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 354, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (851.71, 993.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1000, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6951)
[0000][PE] mean and std.dev: (1305.92, 969.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 395.564 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517963, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 446, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (430.56, 274.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 935, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (615.75, 865.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9361)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1361, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6762)
[0000][PE] mean and std.dev: (1507.30, 1339.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 393.912 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518282, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 364, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (579.88, 483.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.11, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1080, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1090.92, 596.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 396.296 CPU sec, 22.276 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518211, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 368, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (601.78, 585.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 1015, 3153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9381)
[0000][PE] mean and std.dev: (1756.30, 1789.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12495)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 392.821 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517650, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 279, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (648.40, 716.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.52, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 1031, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7632)
[0000][PE] mean and std.dev: (1635.79, 1711.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10100)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1593, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6487)
[0000][PE] mean and std.dev: (1773.60, 1142.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 394.930 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518214, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 284, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (309.32, 172.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (806, 1161, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (1261.91, 946.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1541, 2800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6714)
[0000][PE] mean and std.dev: (2029.64, 1812.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 394.351 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517962, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 328, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (554.24, 520.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 215, 3336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9998)
[0000][PE] mean and std.dev: (1392.35, 2166.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13329)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 915, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6699)
[0000][PE] mean and std.dev: (1163.30, 891.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 394.955 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517785, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 361, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (460.18, 409.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 267, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (317.09, 326.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1456, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1029.00, 582.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 393.573 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518528, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 371, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1915)
[0000][PE] mean and std.dev: (444.95, 348.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1199, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1533.50, 1269.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 396.489 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518399, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 350, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (349.50, 184.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.13, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 590, 4115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11799)
[0000][PE] mean and std.dev: (1998.50, 2665.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15641)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 390.394 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518169, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 329, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (346.19, 180.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1859, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1722.58, 1064.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 400.019 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518554, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 357, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (593.95, 584.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 970, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1207.46, 1066.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1227, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1224.00, 627.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 395.028 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518203, 20, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 389, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (437.15, 405.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.67, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 450, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (596.05, 689.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 398.624 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517929, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 596, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (779.44, 539.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (327, 1659, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8286)
[0000][PE] mean and std.dev: (1610.71, 1333.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10939)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1458, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1581.64, 979.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 397.719 CPU sec, 22.349 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517808, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 378, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (832.87, 866.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 390, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (913.85, 1167.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8489)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1006, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (1231.09, 633.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 397.189 CPU sec, 22.298 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517787, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 327, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 901)
[0000][PE] mean and std.dev: (276.06, 123.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (361, 911, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6115)
[0000][PE] mean and std.dev: (1340.73, 1362.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8033)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1048, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1049.47, 536.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 394.922 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518176, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 273, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (274.24, 178.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 987, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1339.92, 1135.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 397.253 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517906, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 426, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (573.00, 612.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 298, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1062.91, 1418.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 392.986 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517927, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 297, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (261.82, 90.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 561, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8407)
[0000][PE] mean and std.dev: (1455.07, 1630.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11204)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 402.913 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517848, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 284, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 645)
[0000][PE] mean and std.dev: (243.31, 106.90)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1163, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1531.70, 942.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.004 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518003, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 444, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1606)
[0000][PE] mean and std.dev: (423.26, 284.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1338, 4594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12358)
[0000][PE] mean and std.dev: (2589.27, 2467.30)
[0000][PE] low and high boundaries for proper pairs: (1, 16240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 397.980 CPU sec, 22.346 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518090, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 414, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (645.74, 488.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 1854, 3581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10695)
[0000][PE] mean and std.dev: (1936.92, 1656.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14252)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 393.059 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517997, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 653, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (981.94, 1052.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 507, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (908.28, 1035.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1535, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1399.58, 710.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 393.875 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518360, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 386, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2593)
[0000][PE] mean and std.dev: (548.75, 521.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 396.180 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518479, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 367, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (659.00, 612.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 378, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (525.50, 683.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3259)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 395.385 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517556, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 585, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (953.95, 889.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 475, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9537)
[0000][PE] mean and std.dev: (1614.77, 2582.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12708)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1207, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6203)
[0000][PE] mean and std.dev: (1728.73, 1572.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 398.094 CPU sec, 22.343 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517979, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 374, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (796.35, 902.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 12, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (224.64, 376.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 397.644 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518229, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 427, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (676.41, 540.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 391.693 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518280, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 413, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (679.76, 537.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1613, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (1948.15, 1181.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 400.039 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518014, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 364, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1481)
[0000][PE] mean and std.dev: (431.65, 325.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 383, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (703.13, 884.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 391.792 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517896, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 484, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (576.53, 448.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (405, 1350, 5316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15138)
[0000][PE] mean and std.dev: (2194.54, 2292.68)
[0000][PE] low and high boundaries for proper pairs: (1, 20049)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2913, 3320, 3621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1497, 5037)
[0000][PE] mean and std.dev: (3602.50, 588.53)
[0000][PE] low and high boundaries for proper pairs: (789, 5957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 402.056 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517996, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 330, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (320.44, 174.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 400.140 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517662, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 343, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (290.35, 106.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 425, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1879)
[0000][PE] mean and std.dev: (381.50, 329.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2499)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1738, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1543.27, 928.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 401.020 CPU sec, 22.569 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518149, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 276, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (446.14, 448.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 3803, 6024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17258)
[0000][PE] mean and std.dev: (3231.30, 2951.15)
[0000][PE] low and high boundaries for proper pairs: (1, 22875)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 396.414 CPU sec, 22.301 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518059, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 295, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (312.38, 229.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 1872, 3665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10613)
[0000][PE] mean and std.dev: (1852.50, 2066.72)
[0000][PE] low and high boundaries for proper pairs: (1, 14087)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 1536, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1667.00, 1185.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 402.745 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518437, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 372, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6282)
[0000][PE] mean and std.dev: (1279.38, 1583.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 1153, 3540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10440)
[0000][PE] mean and std.dev: (1801.25, 2386.61)
[0000][PE] low and high boundaries for proper pairs: (1, 13890)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1258, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1198.75, 779.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 395.214 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517995, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 345, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (995.75, 1205.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.86, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1522, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1573.25, 956.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 405.259 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518056, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 352, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (525.31, 488.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 537, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1017.69, 1611.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 402.425 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518081, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 330, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (287.00, 119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 865, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2236)
[0000][PE] mean and std.dev: (536.40, 392.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 1091, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1262.69, 982.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 398.536 CPU sec, 22.357 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517814, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 311, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (334.22, 191.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 404.536 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518218, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 568, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8966)
[0000][PE] mean and std.dev: (1273.23, 1309.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 589, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (648.71, 686.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 399.251 CPU sec, 22.427 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517765, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 301, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (515.00, 469.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 475, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (644.92, 673.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 406.079 CPU sec, 22.828 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517553, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 386, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (795.26, 779.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 1034, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1001.18, 794.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 397.947 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517884, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 377, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (590.91, 664.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (270, 1849, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9432)
[0000][PE] mean and std.dev: (2214.20, 2400.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12486)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 403.610 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517646, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 433, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (649.37, 627.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 400.142 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517821, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 303, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (509.24, 594.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (232, 460, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4657)
[0000][PE] mean and std.dev: (868.19, 1112.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 401.813 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518045, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 311, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (722.60, 943.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 561, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (742.10, 794.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 2085, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7881)
[0000][PE] mean and std.dev: (2171.10, 1409.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 397.720 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518416, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 321, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 888)
[0000][PE] mean and std.dev: (341.38, 168.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.63, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 405.352 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518396, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 288, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 869)
[0000][PE] mean and std.dev: (247.80, 97.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1169, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (393, 1838)
[0000][PE] mean and std.dev: (1089.78, 282.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 401.012 CPU sec, 22.544 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518089, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 231, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (265.85, 169.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (571, 994, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (974.85, 862.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1024, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1330.67, 843.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 404.682 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518014, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 264, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1178)
[0000][PE] mean and std.dev: (286.73, 179.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1267, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1408.69, 802.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 398.015 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517636, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 374, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (348.47, 176.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 439, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (316.18, 404.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 399.363 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518320, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 275, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (507.86, 512.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 796, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8073)
[0000][PE] mean and std.dev: (1214.92, 1244.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10757)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 399.961 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518007, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 347, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1120)
[0000][PE] mean and std.dev: (289.50, 230.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.65, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 172, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (508.08, 720.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1742, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8620)
[0000][PE] mean and std.dev: (2156.92, 1941.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 394.833 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517853, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 386, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1306)
[0000][PE] mean and std.dev: (427.41, 235.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 50, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1865)
[0000][PE] mean and std.dev: (159.80, 250.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2485)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 402.445 CPU sec, 22.579 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517810, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 547, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (627.33, 409.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (103, 1348, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10966)
[0000][PE] mean and std.dev: (1988.20, 2315.68)
[0000][PE] low and high boundaries for proper pairs: (1, 14587)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 404.327 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518291, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 445, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (614.64, 462.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 186, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (547.60, 884.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6960)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1458, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1852.07, 1000.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 407.373 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518178, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 353, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 985)
[0000][PE] mean and std.dev: (355.87, 197.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (92, 433, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (402.64, 399.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1606, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7187)
[0000][PE] mean and std.dev: (1760.50, 1245.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 404.179 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518240, 21, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 389, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (745.45, 619.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (88, 338, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (380.83, 449.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 398.828 CPU sec, 22.370 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518259, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 335, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (495.89, 404.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 298, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7034)
[0000][PE] mean and std.dev: (1082.33, 1501.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9363)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1418, 1878, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (340, 3035)
[0000][PE] mean and std.dev: (1730.50, 685.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 401.819 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517926, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 453, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (725.76, 750.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (318, 1666, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6792)
[0000][PE] mean and std.dev: (1698.29, 1629.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8950)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 402.830 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518223, 11, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 322, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (358.84, 245.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 271, 6082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18220)
[0000][PE] mean and std.dev: (2216.18, 2905.39)
[0000][PE] low and high boundaries for proper pairs: (1, 24289)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 403.593 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518347, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 398, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (524.83, 525.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 242, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (198.83, 258.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1007, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (981.36, 584.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 403.104 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517961, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 288, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1198)
[0000][PE] mean and std.dev: (336.48, 231.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1564, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1592.18, 634.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 408.587 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517941, 19, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 307, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1491)
[0000][PE] mean and std.dev: (312.61, 258.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 424, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (707.16, 828.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1174, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5648)
[0000][PE] mean and std.dev: (1489.25, 1047.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 405.195 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518655, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 352, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (526.13, 462.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.17, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 737, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2033)
[0000][PE] mean and std.dev: (603.00, 426.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2576)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 733, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (868.77, 594.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 404.236 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517999, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 337, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (559.00, 503.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 698, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8776)
[0000][PE] mean and std.dev: (1588.74, 1879.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11650)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 879, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (656.40, 360.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 403.686 CPU sec, 22.738 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517784, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 387, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5902)
[0000][PE] mean and std.dev: (1081.88, 1256.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (588, 683, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1097.40, 1230.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 404.884 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518011, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 293, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1219)
[0000][PE] mean and std.dev: (295.24, 187.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.62, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 255, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1197.73, 1613.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7650)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1397, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1688.20, 1160.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 399.621 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518009, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 506, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (546.25, 426.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 383, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1317)
[0000][PE] mean and std.dev: (296.40, 205.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 404.092 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517850, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 370, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (354.44, 171.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 178, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7455)
[0000][PE] mean and std.dev: (819.60, 1321.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1383, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (1392.77, 571.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 402.464 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518013, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 916, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (1003.36, 822.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 407.351 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517671, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 373, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (486.67, 587.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 403.532 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517878, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 325, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (468.52, 400.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 406.000 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517885, 20, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 277, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (506.86, 581.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 702, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1295.10, 1425.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8275)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 400.280 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517884, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 287, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (575.71, 668.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 403.921 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518003, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 370, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1122)
[0000][PE] mean and std.dev: (373.11, 231.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 408.711 CPU sec, 24.107 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518302, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 330, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (317.93, 122.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 634, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (573.33, 656.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 409.015 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518125, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 383, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (723.32, 758.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 751, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (846.00, 932.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 395.656 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518097, 21, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 309, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (382.67, 376.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (307, 578, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (991.21, 1074.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6607)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 400.504 CPU sec, 22.612 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518082, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 407, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (782.33, 784.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 647, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (884.62, 994.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 396.308 CPU sec, 22.276 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518001, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 422, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (998.94, 1061.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 747, 4022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11950)
[0000][PE] mean and std.dev: (1776.67, 2151.85)
[0000][PE] low and high boundaries for proper pairs: (1, 15914)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 1598, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8335)
[0000][PE] mean and std.dev: (2357.40, 2562.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 394.349 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518071, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 383, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (734.40, 750.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 343, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (429.00, 525.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 950, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1544.75, 1510.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 397.912 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517920, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 309, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 914)
[0000][PE] mean and std.dev: (334.36, 156.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (106, 1370, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8857)
[0000][PE] mean and std.dev: (1860.30, 2082.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11774)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1461, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (1255.40, 767.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 396.394 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518363, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 296, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 722)
[0000][PE] mean and std.dev: (290.95, 101.05)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 393.471 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518343, 24, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 558, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (600.12, 405.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 861, 4023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11323)
[0000][PE] mean and std.dev: (1989.29, 2386.79)
[0000][PE] low and high boundaries for proper pairs: (1, 14973)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 396.443 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518250, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 319, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (383.00, 323.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 1456, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8492)
[0000][PE] mean and std.dev: (1688.92, 1550.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11189)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1249, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6325)
[0000][PE] mean and std.dev: (1602.67, 1155.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 400.125 CPU sec, 22.587 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518071, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 564, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (604.12, 518.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 903, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1665.50, 1984.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10091)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1196, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1359.87, 797.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 391.849 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517861, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 355, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2007)
[0000][PE] mean and std.dev: (508.29, 470.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 13, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (173.73, 379.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 388.904 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517795, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 336, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1934)
[0000][PE] mean and std.dev: (383.52, 334.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 394.789 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517758, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1014, 3228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9122)
[0000][PE] mean and std.dev: (1760.95, 2122.35)
[0000][PE] low and high boundaries for proper pairs: (1, 12069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 599, 3479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10427)
[0000][PE] mean and std.dev: (1592.00, 2022.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13901)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1367, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1390.20, 603.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 396.042 CPU sec, 22.224 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518932, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 789, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (976.75, 902.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 388.785 CPU sec, 21.851 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517791, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 383, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (737.17, 763.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1250, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (1462.36, 685.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 395.690 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518139, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 380, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (510.22, 430.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 393.440 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517951, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 310, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1473)
[0000][PE] mean and std.dev: (343.31, 300.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 26, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (377.30, 590.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 394.057 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518199, 19, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 416, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2041)
[0000][PE] mean and std.dev: (502.85, 393.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 543, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (458.19, 523.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 393.472 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518633, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 310, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (536.21, 483.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 220, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7352)
[0000][PE] mean and std.dev: (1182.23, 1548.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9796)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 2214, 5277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13475)
[0000][PE] mean and std.dev: (2953.00, 1955.91)
[0000][PE] low and high boundaries for proper pairs: (1, 17574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 393.441 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518072, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 312, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1406)
[0000][PE] mean and std.dev: (318.21, 179.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 380, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (391.09, 377.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 395.153 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517807, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 350, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (858.25, 888.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (97, 571, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5473)
[0000][PE] mean and std.dev: (1061.69, 1382.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7265)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 390.107 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518330, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 339, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (367.30, 260.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1638, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1475.60, 683.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 390.120 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518256, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 367, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (420.65, 289.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 426, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6992)
[0000][PE] mean and std.dev: (786.78, 1012.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9319)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 388.565 CPU sec, 21.817 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518133, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 322, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (476.36, 403.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (396, 796, 3251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8961)
[0000][PE] mean and std.dev: (1419.46, 1429.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11816)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 390.702 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517871, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 361, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2375)
[0000][PE] mean and std.dev: (549.04, 552.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 725, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (529.89, 512.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1215, 4114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10718)
[0000][PE] mean and std.dev: (1896.67, 1517.53)
[0000][PE] low and high boundaries for proper pairs: (1, 14020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 392.845 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518358, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 331, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 727)
[0000][PE] mean and std.dev: (284.82, 95.85)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 525, 5895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17665)
[0000][PE] mean and std.dev: (1882.41, 2660.55)
[0000][PE] low and high boundaries for proper pairs: (1, 23550)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1400, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (237, 2887)
[0000][PE] mean and std.dev: (1194.33, 513.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 391.295 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518008, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 419, 4220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12110)
[0000][PE] mean and std.dev: (1958.00, 2692.17)
[0000][PE] low and high boundaries for proper pairs: (1, 16055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (82, 670, 4077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12067)
[0000][PE] mean and std.dev: (2035.50, 2656.60)
[0000][PE] low and high boundaries for proper pairs: (1, 16062)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 392.134 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518128, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 258, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 829)
[0000][PE] mean and std.dev: (255.83, 110.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1379, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (1066.83, 490.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 389.208 CPU sec, 21.854 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517709, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 318, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (841.78, 1160.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1016, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (1328.93, 1242.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10876)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 395.022 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517971, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 364, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (545.25, 424.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 320, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (426.80, 531.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1623, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1597.77, 524.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 392.532 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518161, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 409, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (439.59, 353.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 203, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9605)
[0000][PE] mean and std.dev: (1385.00, 2089.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12803)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 1698, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (1748.20, 1272.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 389.894 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517626, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 344, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (387.77, 255.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (91, 362, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (495.46, 661.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 392.959 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518109, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 323, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (331.35, 116.18)
[0000][PE] low and high boundaries for proper pairs: (1, 904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 389.885 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517884, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 432, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1776)
[0000][PE] mean and std.dev: (385.89, 233.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (610, 1394, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1560.00, 1388.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8538)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 395.405 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517579, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 365, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1598)
[0000][PE] mean and std.dev: (399.11, 235.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 139, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (447.62, 649.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1221, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (1160.09, 622.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 388.970 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518199, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 371, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (800.28, 835.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 389.491 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517892, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 324, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (317.68, 204.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 481, 3491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10463)
[0000][PE] mean and std.dev: (1327.50, 1804.02)
[0000][PE] low and high boundaries for proper pairs: (1, 13949)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 388.083 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518345, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 344, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (620.85, 502.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1129, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 2478)
[0000][PE] mean and std.dev: (1211.73, 435.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 386.593 CPU sec, 21.696 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518223, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 374, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1740)
[0000][PE] mean and std.dev: (535.47, 448.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 683, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8412)
[0000][PE] mean and std.dev: (1391.92, 1834.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11203)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1317, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1372.92, 473.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 386.123 CPU sec, 21.652 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518226, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 380, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1360)
[0000][PE] mean and std.dev: (392.06, 148.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1050, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (1174.09, 709.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 389.931 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518159, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 332, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6217)
[0000][PE] mean and std.dev: (1058.47, 1109.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (513, 900, 4905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13689)
[0000][PE] mean and std.dev: (2545.91, 2825.38)
[0000][PE] low and high boundaries for proper pairs: (1, 18081)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 389.882 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517999, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 512, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (724.06, 823.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (275, 639, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (688.67, 613.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 398.551 CPU sec, 22.420 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517901, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 412, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (603.78, 604.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 282, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (819.15, 1177.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7503)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 393.421 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518250, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 429, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (586.07, 464.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 308, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (637.54, 775.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 808, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1189.69, 856.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 392.135 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518433, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 356, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (694.35, 705.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 1491, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7118)
[0000][PE] mean and std.dev: (1169.35, 1116.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9483)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1480, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1810.42, 1123.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 390.128 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518102, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 351, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (561.77, 574.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 317, 3888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11620)
[0000][PE] mean and std.dev: (1797.74, 2528.16)
[0000][PE] low and high boundaries for proper pairs: (1, 15486)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1029, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6889)
[0000][PE] mean and std.dev: (1714.25, 1503.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 392.073 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517901, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 286, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (713.15, 789.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 184, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (250.82, 321.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2372)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.534 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518060, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 281, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (473.78, 473.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (174, 581, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (789.38, 750.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 394.156 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518246, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 923, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5608)
[0000][PE] mean and std.dev: (913.07, 770.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1237, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1302.60, 471.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 387.636 CPU sec, 21.751 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517755, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 344, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (428.12, 326.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 186, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (376.12, 578.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 392.694 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518359, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 315, 346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (270.87, 128.36)
[0000][PE] low and high boundaries for proper pairs: (1, 787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 159, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1923)
[0000][PE] mean and std.dev: (300.10, 426.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 394.929 CPU sec, 22.193 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518444, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 305, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (433.84, 473.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 728, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8089)
[0000][PE] mean and std.dev: (1586.00, 1566.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10627)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1440, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1524.70, 642.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 397.117 CPU sec, 22.333 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518566, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 334, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (604.78, 719.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.16, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 351, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (508.11, 583.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1161, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (1113.40, 425.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 388.853 CPU sec, 21.837 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518482, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 442, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (582.12, 441.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 430, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1022.94, 1419.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7864)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 2233, 4031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10301)
[0000][PE] mean and std.dev: (2491.69, 2202.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 391.894 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518519, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 411, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1062.19, 1047.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (622, 1378, 3839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10273)
[0000][PE] mean and std.dev: (1851.46, 1826.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13490)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 393.253 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517662, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 476, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1014.68, 1045.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (425, 1811, 4505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12665)
[0000][PE] mean and std.dev: (2527.90, 2641.40)
[0000][PE] low and high boundaries for proper pairs: (1, 16745)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 391.683 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518103, 19, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 383, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (771.80, 805.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 1683, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10132)
[0000][PE] mean and std.dev: (2226.74, 2518.71)
[0000][PE] low and high boundaries for proper pairs: (1, 13435)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 876, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (918.10, 293.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 390.155 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518006, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 260, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (440.54, 470.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 396.019 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518403, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 369, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (330.60, 297.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 532, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6896)
[0000][PE] mean and std.dev: (930.15, 1229.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9194)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 388.892 CPU sec, 21.819 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517974, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 354, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (550.09, 498.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (656, 697, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (669.60, 500.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 395.970 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518268, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 300, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (734.38, 818.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 1240, 4681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13239)
[0000][PE] mean and std.dev: (1937.40, 2132.97)
[0000][PE] low and high boundaries for proper pairs: (1, 17518)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1689, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1211.00, 656.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 390.678 CPU sec, 21.878 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518432, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 337, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1482)
[0000][PE] mean and std.dev: (342.77, 216.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 244, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6197)
[0000][PE] mean and std.dev: (673.83, 982.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 394.461 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518134, 17, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 332, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (447.56, 349.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 39, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (480.29, 797.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 392.910 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518048, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 313, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (603.15, 648.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.37, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (480, 852, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1003.87, 847.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 386.747 CPU sec, 21.708 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518072, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 419, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (674.07, 640.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 747, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (922.23, 1098.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 387.632 CPU sec, 21.733 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517822, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 290, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (330.19, 223.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1129, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6479)
[0000][PE] mean and std.dev: (1477.90, 1174.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 396.701 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518302, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 326, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (351.67, 239.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 370, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (723.15, 1011.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1844, 2321, 5717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13463)
[0000][PE] mean and std.dev: (3330.54, 2663.29)
[0000][PE] low and high boundaries for proper pairs: (1, 17336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 392.437 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518219, 16, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 433, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (726.29, 702.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 797, 3966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11892)
[0000][PE] mean and std.dev: (1759.00, 2445.69)
[0000][PE] low and high boundaries for proper pairs: (1, 15855)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 388.360 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518042, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 408, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (951.22, 1147.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.62, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (472, 748, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6172)
[0000][PE] mean and std.dev: (1337.92, 1395.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8072)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 389.310 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517947, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 361, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (412.45, 340.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 388.597 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517976, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 274, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1406)
[0000][PE] mean and std.dev: (293.10, 275.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 654, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (852.50, 1018.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 389.420 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518027, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 379, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (930.71, 1054.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 392.785 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517874, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 300, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1412)
[0000][PE] mean and std.dev: (339.35, 241.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 573, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6936)
[0000][PE] mean and std.dev: (1275.46, 1783.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9225)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1408, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (1359.45, 533.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 390.633 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517981, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 523, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (593.55, 472.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 385.138 CPU sec, 21.635 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517809, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 407, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (526.58, 485.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (199, 545, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (808.76, 918.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 393.065 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518397, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 408, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (524.25, 621.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (46, 958, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6886)
[0000][PE] mean and std.dev: (1641.00, 1912.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 389.365 CPU sec, 21.834 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517507, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 369, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (534.83, 531.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 914, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7621)
[0000][PE] mean and std.dev: (1109.73, 1123.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10091)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1445, 4211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10327)
[0000][PE] mean and std.dev: (1993.08, 1543.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 392.452 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518090, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 279, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (518.11, 527.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 615, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8563)
[0000][PE] mean and std.dev: (1330.92, 1431.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1581, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5475)
[0000][PE] mean and std.dev: (1748.58, 1134.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 386.785 CPU sec, 21.722 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517907, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 382, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1970)
[0000][PE] mean and std.dev: (491.88, 347.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 385.989 CPU sec, 21.662 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518238, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 311, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (308.55, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 711, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (845.19, 952.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8400)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 388.170 CPU sec, 21.777 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518265, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 463, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (753.61, 717.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 317, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (309.80, 377.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 384.705 CPU sec, 21.588 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518556, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 254, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1753)
[0000][PE] mean and std.dev: (456.50, 479.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 384.615 CPU sec, 21.601 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517861, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 304, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6069)
[0000][PE] mean and std.dev: (877.93, 957.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 600, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (690.15, 930.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1300, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (1515.50, 1212.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 391.350 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518078, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 274, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (287.71, 168.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 601, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (481.00, 496.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 388.609 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518196, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 361, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (454.17, 333.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (437, 558, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (544.33, 471.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 392.254 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517801, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 338, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (531.11, 517.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 570, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6326)
[0000][PE] mean and std.dev: (1344.45, 1775.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8447)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 386.103 CPU sec, 21.621 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518196, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 345, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (661.78, 709.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 468, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (449.83, 525.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 392.577 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518279, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 417, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (780.25, 837.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (457, 1102, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8041)
[0000][PE] mean and std.dev: (1423.75, 1412.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10569)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 384.416 CPU sec, 21.604 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518050, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 421, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (683.29, 592.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 471, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (709.18, 842.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 830, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8007)
[0000][PE] mean and std.dev: (1723.46, 1490.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 390.642 CPU sec, 21.972 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518584, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 610, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (753.50, 672.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (50, 501, 7458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22274)
[0000][PE] mean and std.dev: (2574.38, 3502.25)
[0000][PE] low and high boundaries for proper pairs: (1, 29682)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1939, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1837.58, 1026.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 383.199 CPU sec, 21.530 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518033, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 333, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (609.90, 643.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 387.475 CPU sec, 21.744 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518661, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 297, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1504)
[0000][PE] mean and std.dev: (408.07, 356.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 360, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1212)
[0000][PE] mean and std.dev: (314.18, 328.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1560, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1791.45, 1144.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 388.394 CPU sec, 21.792 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517978, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1427, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6004)
[0000][PE] mean and std.dev: (1504.67, 1242.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 537, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9813)
[0000][PE] mean and std.dev: (1438.80, 1632.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12991)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 387.955 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517790, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 244, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 742)
[0000][PE] mean and std.dev: (208.83, 93.18)
[0000][PE] low and high boundaries for proper pairs: (1, 941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 162, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (633.00, 966.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4904)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 384.980 CPU sec, 21.592 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518086, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 284, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (286.62, 141.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 391.394 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517981, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 401, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (673.85, 599.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (400, 885, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (760.08, 604.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 384.356 CPU sec, 21.533 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518172, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 373, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (357.94, 267.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 795, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6593)
[0000][PE] mean and std.dev: (1333.76, 1644.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8790)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1070, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (1213.10, 842.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 383.233 CPU sec, 21.481 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518189, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 373, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (504.55, 491.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 212, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8989)
[0000][PE] mean and std.dev: (1480.44, 2365.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11983)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1088, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6623)
[0000][PE] mean and std.dev: (1251.45, 957.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 390.460 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518199, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 418, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (992.55, 1059.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 33, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (163.60, 246.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1338, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 2963)
[0000][PE] mean and std.dev: (1376.15, 582.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 388.451 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518225, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 190, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1322)
[0000][PE] mean and std.dev: (270.57, 200.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (106, 354, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (872.06, 1291.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7754)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 1656, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1756.91, 600.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 385.972 CPU sec, 21.628 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518272, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 304, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (418.96, 289.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 2127, 4364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12560)
[0000][PE] mean and std.dev: (2755.90, 2807.39)
[0000][PE] low and high boundaries for proper pairs: (1, 16658)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1126, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (1331.82, 513.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 387.529 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518209, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 350, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (512.28, 431.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 389.731 CPU sec, 21.867 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518013, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 295, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1793)
[0000][PE] mean and std.dev: (371.83, 362.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 655, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1059.15, 1406.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6780)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 401.478 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517885, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 476, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (647.38, 602.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 457, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (527.91, 521.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 1302, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6149)
[0000][PE] mean and std.dev: (1531.56, 1676.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 386.542 CPU sec, 21.678 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518199, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 384, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (749.63, 748.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 473, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (383.60, 361.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 388.564 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518143, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 300, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1418)
[0000][PE] mean and std.dev: (359.96, 280.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 1491, 7399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21381)
[0000][PE] mean and std.dev: (3034.08, 3527.42)
[0000][PE] low and high boundaries for proper pairs: (1, 28372)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1427, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1476.30, 1117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 385.675 CPU sec, 21.599 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517687, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 371, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (414.25, 268.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1343, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (1140.00, 541.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 387.889 CPU sec, 21.763 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518365, 23, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 298, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1747)
[0000][PE] mean and std.dev: (556.00, 482.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 758, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7522)
[0000][PE] mean and std.dev: (1500.04, 1966.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10025)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 391.429 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518272, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 428, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (800.67, 693.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 323, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (932.00, 1435.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6676)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1721, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1292.09, 758.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 387.090 CPU sec, 21.716 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518066, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 341, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (666.80, 569.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 388.428 CPU sec, 21.822 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518279, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 365, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (642.25, 589.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 566, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10626)
[0000][PE] mean and std.dev: (1542.27, 1736.15)
[0000][PE] low and high boundaries for proper pairs: (1, 14156)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1782, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7447)
[0000][PE] mean and std.dev: (1968.20, 1105.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 388.929 CPU sec, 21.775 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518584, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 345, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (496.40, 439.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (95, 366, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (473.00, 541.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 386.627 CPU sec, 21.648 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518157, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 240, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (437.42, 465.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 452, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7903)
[0000][PE] mean and std.dev: (1191.92, 1726.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 387.637 CPU sec, 21.749 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517893, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 300, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (657.92, 760.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 2160, 4169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11839)
[0000][PE] mean and std.dev: (2611.13, 2616.80)
[0000][PE] low and high boundaries for proper pairs: (1, 15674)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 388.803 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518256, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 331, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (572.06, 602.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 219, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1739)
[0000][PE] mean and std.dev: (310.92, 392.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 392.317 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517896, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 329, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (369.71, 258.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 577, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (886.33, 1152.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 390.416 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517981, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 340, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (690.67, 656.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1479, 3800, 5654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14004)
[0000][PE] mean and std.dev: (3800.07, 2936.46)
[0000][PE] low and high boundaries for proper pairs: (1, 18179)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 391.657 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518286, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 395, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1584)
[0000][PE] mean and std.dev: (384.31, 160.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 388.604 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206118
	[0000][ M::kt_pipeline] read 1206118 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518171, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 301, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 765)
[0000][PE] mean and std.dev: (291.06, 92.88)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 705, 3941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11803)
[0000][PE] mean and std.dev: (1769.57, 2267.07)
[0000][PE] low and high boundaries for proper pairs: (1, 15734)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 395.004 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517671, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 314, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (602.84, 831.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (541, 1120, 4753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13177)
[0000][PE] mean and std.dev: (2286.90, 2648.54)
[0000][PE] low and high boundaries for proper pairs: (1, 17389)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206118 reads in 391.495 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518096, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 347, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1470)
[0000][PE] mean and std.dev: (352.94, 194.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 11, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8689)
[0000][PE] mean and std.dev: (1208.19, 1821.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11585)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1604, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5995)
[0000][PE] mean and std.dev: (1933.90, 1104.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 387.458 CPU sec, 21.710 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517857, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 356, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (822.12, 779.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (229, 823, 3818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10996)
[0000][PE] mean and std.dev: (1723.46, 1854.97)
[0000][PE] low and high boundaries for proper pairs: (1, 14585)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1426, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (1764.27, 1255.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 390.608 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518036, 19, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 356, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (318.96, 148.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 217, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (812.44, 1366.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1195, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (883.75, 441.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 388.695 CPU sec, 21.815 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517836, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 353, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (789.82, 852.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 393.830 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517765, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 278, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 968)
[0000][PE] mean and std.dev: (243.00, 106.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 390.310 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517848, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 341, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1548)
[0000][PE] mean and std.dev: (452.45, 393.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 389.673 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517786, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 235, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (233.45, 125.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (566, 1138, 5378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15002)
[0000][PE] mean and std.dev: (2572.87, 2599.33)
[0000][PE] low and high boundaries for proper pairs: (1, 19814)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 386.743 CPU sec, 21.668 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517704, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 322, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (648.04, 743.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 394.943 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517931, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 329, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (273.52, 108.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 968, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (1271.18, 835.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 387.831 CPU sec, 21.768 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517915, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 241, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (396.90, 387.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 363, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (688.17, 918.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 391.314 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518008, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 430, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (828.75, 927.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 474, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7186)
[0000][PE] mean and std.dev: (907.20, 1332.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9511)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1391, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 2906)
[0000][PE] mean and std.dev: (1316.90, 579.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 385.698 CPU sec, 21.650 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517719, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 308, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (291.00, 110.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 504, 2911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8001)
[0000][PE] mean and std.dev: (1279.92, 1649.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10546)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 391.735 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517822, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 393, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (685.41, 637.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 411, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (447.18, 510.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 383.986 CPU sec, 21.519 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517938, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 686, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (971.95, 986.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 630, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (636.60, 760.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 396.069 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518439, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 308, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (467.06, 464.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (517, 1925, 5189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14533)
[0000][PE] mean and std.dev: (2614.69, 2288.48)
[0000][PE] low and high boundaries for proper pairs: (1, 19205)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 388.747 CPU sec, 21.803 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518661, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 319, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1749)
[0000][PE] mean and std.dev: (539.11, 474.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 387.147 CPU sec, 21.746 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518087, 14, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 312, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1390)
[0000][PE] mean and std.dev: (306.00, 185.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (157, 599, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4657)
[0000][PE] mean and std.dev: (765.69, 745.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1751, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10090)
[0000][PE] mean and std.dev: (2447.00, 2063.52)
[0000][PE] low and high boundaries for proper pairs: (1, 13240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 390.752 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518343, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 317, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (575.00, 731.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 390.482 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518123, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 624, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (592.07, 391.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 389.054 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517816, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 328, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (570.90, 535.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 387.520 CPU sec, 21.734 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518097, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 627, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (806.00, 772.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (175, 574, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8344)
[0000][PE] mean and std.dev: (1056.64, 1633.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 386.930 CPU sec, 21.700 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518169, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 301, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1680)
[0000][PE] mean and std.dev: (400.48, 313.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1595, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1541.00, 1088.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.797 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517702, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 326, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (601.80, 729.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 795, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (793.73, 771.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 387.288 CPU sec, 21.728 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518184, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 316, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (817.77, 796.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 1547, 4313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12233)
[0000][PE] mean and std.dev: (2144.91, 2244.64)
[0000][PE] low and high boundaries for proper pairs: (1, 16193)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 391.598 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518010, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 324, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (312.71, 181.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 384.980 CPU sec, 21.609 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518034, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 308, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (807.35, 1250.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 735, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (406.12, 374.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.486 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518141, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 193, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 864)
[0000][PE] mean and std.dev: (189.13, 103.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.07, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 620, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (1009.17, 1235.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8552)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1256, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (1304.40, 429.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 381.267 CPU sec, 21.364 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518038, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 316, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (744.18, 776.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (376, 803, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6085)
[0000][PE] mean and std.dev: (1047.36, 962.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1313, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (265, 2680)
[0000][PE] mean and std.dev: (1302.30, 508.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 386.072 CPU sec, 21.657 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517657, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 297, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (646.42, 715.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 371, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1156.92, 1510.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1212, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (941.22, 636.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 388.363 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518417, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 402, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (709.74, 744.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1717, 3748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8682)
[0000][PE] mean and std.dev: (2407.62, 1842.51)
[0000][PE] low and high boundaries for proper pairs: (1, 11149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.974 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518168, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 356, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (356.12, 282.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1633, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7083)
[0000][PE] mean and std.dev: (1455.83, 1158.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 388.243 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517974, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 321, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1071)
[0000][PE] mean and std.dev: (303.52, 196.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (100, 435, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5896)
[0000][PE] mean and std.dev: (921.55, 1284.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7828)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1248, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (235, 2640)
[0000][PE] mean and std.dev: (1290.38, 258.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 388.338 CPU sec, 21.803 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518296, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 499, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (813.29, 820.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 561, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (872.58, 866.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7794)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 391.989 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518421, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 469, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (687.50, 663.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 913, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (985.07, 1123.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6370)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 388.940 CPU sec, 21.845 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517914, 14, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 433, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5339)
[0000][PE] mean and std.dev: (809.58, 787.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 1230, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (736.83, 609.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1506, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1463.64, 749.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 386.418 CPU sec, 21.661 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518219, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 308, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (280.88, 130.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 392.271 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518211, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 469, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1006.82, 932.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 383.463 CPU sec, 21.509 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518208, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 408, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (744.57, 818.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (766, 1538, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7003)
[0000][PE] mean and std.dev: (1873.46, 1604.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9082)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 394.415 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518421, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 301, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (590.43, 758.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 387.138 CPU sec, 21.788 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518183, 10, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 532, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (791.62, 895.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 381, 3138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9346)
[0000][PE] mean and std.dev: (1333.50, 1761.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12450)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 393.716 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518242, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 330, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (336.71, 223.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (416, 741, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (870.27, 806.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 388.117 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518319, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 360, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (713.14, 726.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 474, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (852.88, 1172.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1440, 4574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11254)
[0000][PE] mean and std.dev: (2169.17, 1699.92)
[0000][PE] low and high boundaries for proper pairs: (1, 14594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 394.054 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518265, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 414, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (348.94, 183.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (406, 857, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (1101.25, 1063.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 388.329 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517623, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 225, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (202.79, 129.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 515, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8831)
[0000][PE] mean and std.dev: (1356.58, 1459.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11762)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 2277, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1980.46, 1078.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 390.107 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518424, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 322, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1052)
[0000][PE] mean and std.dev: (322.89, 219.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (199, 249, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (871.20, 1382.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8219)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 388.377 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517739, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 524, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1724)
[0000][PE] mean and std.dev: (496.19, 321.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (50, 548, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6260)
[0000][PE] mean and std.dev: (1012.53, 1393.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8330)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 390.672 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518371, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 410, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (693.60, 631.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 619, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7341)
[0000][PE] mean and std.dev: (1436.90, 1869.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9787)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 386.711 CPU sec, 21.695 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517508, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 368, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1056)
[0000][PE] mean and std.dev: (344.00, 172.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 388.251 CPU sec, 21.805 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517891, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 369, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (661.32, 666.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 391.839 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518380, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 333, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (386.09, 214.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 1074, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1072.10, 1244.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 384.018 CPU sec, 21.542 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517588, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 293, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (347.28, 251.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 422, 7577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22679)
[0000][PE] mean and std.dev: (2354.77, 3308.59)
[0000][PE] low and high boundaries for proper pairs: (1, 30230)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1200, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1516.33, 1003.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 392.969 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517585, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 420, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (562.39, 510.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1210, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6056)
[0000][PE] mean and std.dev: (1519.09, 998.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.178 CPU sec, 21.840 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517659, 14, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 421, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (546.89, 474.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 54, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1672)
[0000][PE] mean and std.dev: (330.07, 482.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2260)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1338, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1766.18, 1481.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 392.490 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518230, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 348, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (666.78, 661.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 390, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (713.12, 943.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 389.490 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518161, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 350, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 863)
[0000][PE] mean and std.dev: (305.64, 145.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 1187, 6241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17887)
[0000][PE] mean and std.dev: (2657.30, 2825.64)
[0000][PE] low and high boundaries for proper pairs: (1, 23710)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.338 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517908, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 379, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (752.90, 692.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (481, 551, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7165)
[0000][PE] mean and std.dev: (1379.73, 1759.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9393)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 384.885 CPU sec, 21.571 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518092, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 275, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 716)
[0000][PE] mean and std.dev: (260.77, 107.45)
[0000][PE] low and high boundaries for proper pairs: (1, 885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 218, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2500)
[0000][PE] mean and std.dev: (514.15, 703.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3333)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 389.923 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518092, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 322, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (672.17, 891.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 171, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1660)
[0000][PE] mean and std.dev: (379.82, 470.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2263)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 388.700 CPU sec, 21.801 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517825, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 328, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1424)
[0000][PE] mean and std.dev: (379.38, 340.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (405, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 885)
[0000][PE] mean and std.dev: (489.89, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 725, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (859.08, 974.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 386.799 CPU sec, 21.674 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518221, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 331, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (298.95, 181.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (45, 454, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6546)
[0000][PE] mean and std.dev: (754.67, 825.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8713)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 386.504 CPU sec, 21.670 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518222, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 446, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (567.89, 421.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 342, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8882)
[0000][PE] mean and std.dev: (1341.13, 1601.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11833)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 385.716 CPU sec, 21.627 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518022, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 267, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (265.94, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 698, 3683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11015)
[0000][PE] mean and std.dev: (2151.57, 2890.49)
[0000][PE] low and high boundaries for proper pairs: (1, 14681)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 387.875 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518020, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 234, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (485.38, 463.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 682, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (618.41, 641.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1358, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (1359.25, 472.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 396.194 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517673, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 442, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (451.80, 346.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 719, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (747.69, 790.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1407, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1108.20, 589.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 389.079 CPU sec, 21.837 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518418, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 680, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (696.52, 480.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.42, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 760, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (1317.20, 1654.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 384.524 CPU sec, 21.548 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518056, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 385, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (466.42, 459.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 70, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (187.44, 274.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1581)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 386.604 CPU sec, 21.658 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517527, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 304, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1160)
[0000][PE] mean and std.dev: (312.17, 168.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 1236, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9580)
[0000][PE] mean and std.dev: (2096.17, 2632.91)
[0000][PE] low and high boundaries for proper pairs: (1, 12769)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 393.190 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518033, 18, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 246, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (228.45, 113.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 168, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (287.93, 418.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1717, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1593.46, 800.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 388.500 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517949, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 290, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 963)
[0000][PE] mean and std.dev: (309.16, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 388.128 CPU sec, 21.767 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517535, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 247, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (385.75, 322.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 475, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (1077.12, 1205.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8457)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 391.352 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517896, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 359, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1295.57, 1545.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (114, 542, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1743)
[0000][PE] mean and std.dev: (341.75, 254.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2286)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 391.736 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517968, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 330, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (686.85, 763.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 269, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (771.55, 1098.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8269)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 386.880 CPU sec, 21.723 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518262, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 406, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (597.18, 630.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 397, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7999)
[0000][PE] mean and std.dev: (1112.33, 1209.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10662)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 387.862 CPU sec, 21.779 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518214, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 349, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (449.20, 388.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 385.600 CPU sec, 21.619 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517985, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 351, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (440.91, 369.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 545, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (635.45, 566.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 1173, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1121.00, 614.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 388.184 CPU sec, 21.763 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518880, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 336, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (299.80, 235.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 132, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (623.36, 886.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 388.881 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518021, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 321, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1668)
[0000][PE] mean and std.dev: (367.19, 331.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (239, 517, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (802.22, 931.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 393.139 CPU sec, 22.060 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518015, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 337, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (421.71, 338.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 243, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (290.70, 396.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 386.058 CPU sec, 21.734 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518350, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 409, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (410.73, 252.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (256, 639, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (700.29, 549.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 386.557 CPU sec, 21.677 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518025, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 309, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (312.00, 181.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1528, 1987, 3468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7348)
[0000][PE] mean and std.dev: (2228.38, 842.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 386.973 CPU sec, 21.729 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517678, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 322, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (415.32, 327.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 486, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1621)
[0000][PE] mean and std.dev: (352.78, 273.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2042)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 388.185 CPU sec, 21.767 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517883, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 380, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (342.73, 202.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 525, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1698)
[0000][PE] mean and std.dev: (488.00, 327.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2144)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1188, 3698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9204)
[0000][PE] mean and std.dev: (2422.00, 2504.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 387.361 CPU sec, 21.762 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518559, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 324, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (462.05, 457.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (386, 1257, 4387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12389)
[0000][PE] mean and std.dev: (2077.39, 2085.39)
[0000][PE] low and high boundaries for proper pairs: (1, 16390)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1613, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (1308.30, 458.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 390.302 CPU sec, 21.881 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518323, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 288, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2198)
[0000][PE] mean and std.dev: (395.82, 359.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (330, 537, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (686.71, 722.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 1402, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (826.25, 529.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 392.593 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517409, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 551, 3842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10944)
[0000][PE] mean and std.dev: (1676.31, 1829.56)
[0000][PE] low and high boundaries for proper pairs: (1, 14495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 1365, 3800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11094)
[0000][PE] mean and std.dev: (2020.31, 2266.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14741)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 2066, 7233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19825)
[0000][PE] mean and std.dev: (3031.67, 3175.49)
[0000][PE] low and high boundaries for proper pairs: (1, 26121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 392.096 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518393, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 372, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (566.11, 563.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 453, 4146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12434)
[0000][PE] mean and std.dev: (1942.77, 2737.86)
[0000][PE] low and high boundaries for proper pairs: (1, 16578)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 386.583 CPU sec, 21.669 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518780, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 320, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (713.00, 832.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 217, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7758)
[0000][PE] mean and std.dev: (1154.92, 1560.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10335)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 842, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6137)
[0000][PE] mean and std.dev: (1137.90, 877.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 388.270 CPU sec, 21.797 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518486, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 420, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (534.35, 467.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1167, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1337.92, 681.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 393.726 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518006, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 325, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (519.28, 547.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (250, 1003, 4402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12706)
[0000][PE] mean and std.dev: (1710.23, 1991.45)
[0000][PE] low and high boundaries for proper pairs: (1, 16858)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1449, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1832.36, 1070.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 390.501 CPU sec, 21.874 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518048, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 317, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 784)
[0000][PE] mean and std.dev: (291.68, 92.03)
[0000][PE] low and high boundaries for proper pairs: (1, 969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 417, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5367)
[0000][PE] mean and std.dev: (1083.94, 1472.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7152)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 391.608 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518131, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 292, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 754)
[0000][PE] mean and std.dev: (225.31, 112.76)
[0000][PE] low and high boundaries for proper pairs: (1, 946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.17, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 386.310 CPU sec, 21.683 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518088, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 384, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1974)
[0000][PE] mean and std.dev: (470.43, 436.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 898, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (933.64, 553.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 389.274 CPU sec, 21.822 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518257, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 356, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 816)
[0000][PE] mean and std.dev: (307.83, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 321, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2291)
[0000][PE] mean and std.dev: (520.92, 636.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 385.852 CPU sec, 21.627 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517619, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 313, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (591.08, 635.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 392.663 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518540, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 288, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 728)
[0000][PE] mean and std.dev: (228.00, 96.15)
[0000][PE] low and high boundaries for proper pairs: (1, 920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (264, 562, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (527.82, 445.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 385.704 CPU sec, 21.634 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518355, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 293, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (469.25, 436.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1555, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7246)
[0000][PE] mean and std.dev: (1541.00, 1001.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 391.650 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518330, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 325, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1297)
[0000][PE] mean and std.dev: (325.26, 188.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 24, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1519)
[0000][PE] mean and std.dev: (106.27, 157.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2025)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 384.817 CPU sec, 21.568 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518094, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 370, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (797.46, 806.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 178, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (446.36, 549.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 394.937 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517778, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 328, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (575.75, 486.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (529, 1155, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9601)
[0000][PE] mean and std.dev: (1592.92, 1387.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12625)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 2182, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1821.64, 668.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 389.380 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518039, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 270, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1472)
[0000][PE] mean and std.dev: (382.35, 385.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 952, 5083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14433)
[0000][PE] mean and std.dev: (2163.91, 2439.72)
[0000][PE] low and high boundaries for proper pairs: (1, 19108)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 389.412 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517860, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 276, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (278.82, 156.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1354, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1387.31, 858.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 385.809 CPU sec, 21.644 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518111, 20, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 400, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1955)
[0000][PE] mean and std.dev: (518.31, 468.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 1335, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (1531.50, 1593.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9213)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 393.256 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518009, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 357, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (307.32, 148.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (259, 729, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (958.50, 1032.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 389.493 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518171, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 331, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2222)
[0000][PE] mean and std.dev: (553.39, 551.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 818, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7438)
[0000][PE] mean and std.dev: (1373.54, 1540.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9858)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1550, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (1625.30, 1383.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 391.288 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517854, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 528, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (613.25, 482.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 660, 5378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15758)
[0000][PE] mean and std.dev: (2437.18, 3102.06)
[0000][PE] low and high boundaries for proper pairs: (1, 20948)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1811, 4635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11543)
[0000][PE] mean and std.dev: (2588.75, 2286.08)
[0000][PE] low and high boundaries for proper pairs: (1, 14997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 389.635 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517461, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 545, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8276)
[0000][PE] mean and std.dev: (1485.80, 1561.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 397.101 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518170, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 332, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2046)
[0000][PE] mean and std.dev: (375.00, 343.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 752, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (791.55, 901.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 2518, 5756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15316)
[0000][PE] mean and std.dev: (3185.08, 2392.08)
[0000][PE] low and high boundaries for proper pairs: (1, 20096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 385.137 CPU sec, 21.628 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518016, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 384, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (518.00, 374.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 449, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1005.70, 1298.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1273, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9643)
[0000][PE] mean and std.dev: (2597.86, 2627.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 392.456 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517661, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 398, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (720.30, 668.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 617, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7964)
[0000][PE] mean and std.dev: (1621.93, 1925.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10615)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 387.667 CPU sec, 21.713 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518027, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 418, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (386.72, 198.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 2129, 6576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19066)
[0000][PE] mean and std.dev: (2984.58, 3090.46)
[0000][PE] low and high boundaries for proper pairs: (1, 25311)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 387.543 CPU sec, 21.794 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518650, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 355, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (525.71, 428.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (186, 540, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (726.27, 686.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5218)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1944, 8048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22076)
[0000][PE] mean and std.dev: (3618.20, 3347.50)
[0000][PE] low and high boundaries for proper pairs: (1, 29090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 385.160 CPU sec, 21.578 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518750, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 287, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (332.94, 301.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 359, 3919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11749)
[0000][PE] mean and std.dev: (1591.18, 2398.28)
[0000][PE] low and high boundaries for proper pairs: (1, 15664)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 388.969 CPU sec, 21.866 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517569, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 415, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5740)
[0000][PE] mean and std.dev: (1044.94, 1187.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 515, 3214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9200)
[0000][PE] mean and std.dev: (1755.06, 2081.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12193)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 387.158 CPU sec, 21.706 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518176, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 328, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (329.68, 167.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (410, 1650, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1325.30, 969.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1395, 1688, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (1578.91, 538.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 387.150 CPU sec, 21.775 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517878, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 397, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (649.12, 521.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 463, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6517)
[0000][PE] mean and std.dev: (1416.91, 1971.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9303)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 385.994 CPU sec, 21.610 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518381, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 328, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (497.32, 447.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 681, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5812)
[0000][PE] mean and std.dev: (674.33, 769.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7739)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 399.112 CPU sec, 22.510 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518457, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 293, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (283.44, 108.57)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (470, 565, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (965.55, 1056.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 384.677 CPU sec, 21.576 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517936, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 314, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (455.90, 396.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.86, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 724, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (598.55, 642.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 389.732 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518079, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 311, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (607.83, 618.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 33, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (270.70, 356.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1351, 2918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8052)
[0000][PE] mean and std.dev: (1671.54, 1654.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 384.338 CPU sec, 21.584 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518706, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 331, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 963)
[0000][PE] mean and std.dev: (329.33, 167.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 542, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5570)
[0000][PE] mean and std.dev: (991.93, 1036.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7425)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 391.230 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518144, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 305, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (845.78, 791.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 619, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (890.93, 1043.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6108)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1134, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (277, 2112)
[0000][PE] mean and std.dev: (1074.57, 240.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 385.978 CPU sec, 21.788 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518058, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 291, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (258.47, 162.71)
[0000][PE] low and high boundaries for proper pairs: (1, 966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 149, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (439.85, 680.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 390.569 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517956, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 267, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1509)
[0000][PE] mean and std.dev: (232.40, 148.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 389, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (448.90, 491.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 2024, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5981)
[0000][PE] mean and std.dev: (2064.56, 1259.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 388.788 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518106, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 333, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (520.17, 518.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.44, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 508, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1263.50, 1481.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7858)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1233, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1416.83, 1090.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 391.223 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517793, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 344, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1510)
[0000][PE] mean and std.dev: (343.17, 243.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 373, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (455.00, 549.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1549, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (1262.89, 482.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 389.125 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517785, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 344, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (308.00, 132.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1367, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1462.56, 1131.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 390.920 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518233, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 273, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (333.30, 266.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 166, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (494.53, 739.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 779, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1363.60, 1362.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 385.061 CPU sec, 21.606 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517797, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 347, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1690)
[0000][PE] mean and std.dev: (421.00, 330.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 15, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9487)
[0000][PE] mean and std.dev: (1136.23, 1897.12)
[0000][PE] low and high boundaries for proper pairs: (1, 12649)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 2041, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1796.13, 775.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 395.971 CPU sec, 22.302 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518298, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 341, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (788.96, 803.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.16, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 389.933 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518384, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 413, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (727.11, 635.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 541, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9474)
[0000][PE] mean and std.dev: (1258.71, 1568.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12627)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 385.547 CPU sec, 21.614 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517053, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 320, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2261)
[0000][PE] mean and std.dev: (374.92, 319.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 445, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (726.41, 842.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 386.999 CPU sec, 21.690 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518131, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 328, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (374.12, 262.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1073, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (1055.20, 575.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 387.100 CPU sec, 21.708 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518208, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 573, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5690)
[0000][PE] mean and std.dev: (1171.54, 1198.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 574, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (673.67, 657.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1455, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6035)
[0000][PE] mean and std.dev: (1533.60, 1213.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 384.737 CPU sec, 21.587 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518081, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 320, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1591)
[0000][PE] mean and std.dev: (362.00, 236.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1194, 4059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10491)
[0000][PE] mean and std.dev: (2045.09, 1793.07)
[0000][PE] low and high boundaries for proper pairs: (1, 13707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 391.928 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518012, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 390, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (563.82, 572.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 738, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7780)
[0000][PE] mean and std.dev: (1383.00, 1604.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10369)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 385.768 CPU sec, 21.608 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518084, 15, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 407, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (615.88, 568.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 354, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (421.50, 487.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1033, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (842.33, 447.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 388.193 CPU sec, 21.770 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518598, 16, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 686, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5891)
[0000][PE] mean and std.dev: (1004.94, 983.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 425, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (771.80, 1131.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1930, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6098)
[0000][PE] mean and std.dev: (1756.07, 695.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 385.315 CPU sec, 21.620 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518006, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 360, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1004.58, 1001.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 1237, 3425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9637)
[0000][PE] mean and std.dev: (1848.15, 1688.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12743)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 1144, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (1360.23, 1040.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 385.974 CPU sec, 21.633 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518444, 19, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 297, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1610)
[0000][PE] mean and std.dev: (380.74, 347.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 653, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8510)
[0000][PE] mean and std.dev: (1232.89, 1624.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11343)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1220, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1419.80, 819.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 391.846 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517986, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 347, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 942)
[0000][PE] mean and std.dev: (298.88, 140.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1514, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1662.27, 1069.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 390.977 CPU sec, 21.922 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518448, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 359, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2131)
[0000][PE] mean and std.dev: (537.95, 372.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1324, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1150.18, 652.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 385.329 CPU sec, 21.609 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518277, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 400, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (352.91, 219.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 432, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (582.00, 607.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 388.786 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518652, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 399, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2496)
[0000][PE] mean and std.dev: (665.32, 583.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 1041, 3282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9208)
[0000][PE] mean and std.dev: (1842.14, 1961.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12171)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 387.127 CPU sec, 21.728 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518092, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 325, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (417.00, 339.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1009, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (885.33, 283.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 391.450 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518562, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 298, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1679)
[0000][PE] mean and std.dev: (373.10, 294.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 447, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (695.09, 608.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 392.539 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517707, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 287, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (447.33, 462.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 537, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (554.82, 598.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 387.010 CPU sec, 21.668 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518099, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 367, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (430.50, 309.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 505, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (597.78, 870.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 389.071 CPU sec, 21.838 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518000, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 373, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1323)
[0000][PE] mean and std.dev: (507.63, 346.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1010, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (1001.45, 570.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 387.798 CPU sec, 21.788 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517590, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 347, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1703)
[0000][PE] mean and std.dev: (433.29, 388.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (145, 792, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1121.08, 1093.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 390.990 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518343, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 371, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2066)
[0000][PE] mean and std.dev: (485.79, 441.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 781, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6835)
[0000][PE] mean and std.dev: (960.42, 1035.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9110)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1603, 4639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11609)
[0000][PE] mean and std.dev: (2329.31, 1822.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 381.875 CPU sec, 21.396 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518389, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 347, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (528.32, 601.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (497, 1665, 4196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11594)
[0000][PE] mean and std.dev: (1830.42, 1804.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1786, 4022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9694)
[0000][PE] mean and std.dev: (2633.27, 2018.80)
[0000][PE] low and high boundaries for proper pairs: (1, 12530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 385.882 CPU sec, 21.653 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518076, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 312, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (287.11, 132.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 384, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (556.36, 818.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 385.320 CPU sec, 21.604 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517833, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 385, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (661.00, 598.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 223, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (306.07, 480.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1520, 6440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17266)
[0000][PE] mean and std.dev: (2776.00, 2580.70)
[0000][PE] low and high boundaries for proper pairs: (1, 22679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 389.303 CPU sec, 21.839 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518326, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 292, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (573.00, 586.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 200, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2448)
[0000][PE] mean and std.dev: (336.40, 424.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3253)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 386.440 CPU sec, 21.687 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517823, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 346, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1642)
[0000][PE] mean and std.dev: (454.71, 319.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 426, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1245.10, 1515.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1212, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5568)
[0000][PE] mean and std.dev: (1279.75, 788.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 388.690 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518019, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1033, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (757.76, 421.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (217, 640, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (969.70, 1252.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8545)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1165, 5570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15074)
[0000][PE] mean and std.dev: (2328.54, 2485.55)
[0000][PE] low and high boundaries for proper pairs: (1, 19826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 388.753 CPU sec, 21.838 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518362, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 305, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (291.37, 96.92)
[0000][PE] low and high boundaries for proper pairs: (1, 860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 463, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1756)
[0000][PE] mean and std.dev: (405.79, 362.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 386.886 CPU sec, 21.665 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518291, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 391, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (539.37, 483.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (932, 2284, 4120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10496)
[0000][PE] mean and std.dev: (2836.10, 2461.84)
[0000][PE] low and high boundaries for proper pairs: (1, 13684)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 393.311 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517826, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 331, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (512.25, 434.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 601, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7982)
[0000][PE] mean and std.dev: (1280.42, 1354.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10531)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 385.702 CPU sec, 21.602 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518171, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 276, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (224.64, 76.56)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (232, 986, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7693)
[0000][PE] mean and std.dev: (1168.17, 1254.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10180)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 389.879 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517751, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 362, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1442)
[0000][PE] mean and std.dev: (415.33, 258.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 391.039 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518591, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 305, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (378.29, 289.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (325, 621, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8086)
[0000][PE] mean and std.dev: (1359.27, 1560.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10673)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 1338, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5632)
[0000][PE] mean and std.dev: (1263.64, 1003.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 387.252 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518001, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 393, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1643)
[0000][PE] mean and std.dev: (374.15, 196.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (363, 812, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (714.92, 409.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3883)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1813, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1403.67, 650.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 389.922 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518551, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 301, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 756)
[0000][PE] mean and std.dev: (258.84, 123.28)
[0000][PE] low and high boundaries for proper pairs: (1, 945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 393, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (281.45, 304.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1427, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6135)
[0000][PE] mean and std.dev: (1564.31, 889.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 391.281 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518030, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 418, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (803.12, 786.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 265, 3888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11660)
[0000][PE] mean and std.dev: (1670.17, 2366.28)
[0000][PE] low and high boundaries for proper pairs: (1, 15546)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 386.143 CPU sec, 21.635 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518320, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 323, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (596.65, 555.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 261, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1118.56, 1623.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1245, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1504.40, 1161.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 387.957 CPU sec, 21.762 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518446, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 357, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (576.36, 542.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (451, 1199, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8032)
[0000][PE] mean and std.dev: (1708.67, 1980.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10559)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 383.588 CPU sec, 21.495 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518185, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 324, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (491.70, 415.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 388.167 CPU sec, 21.802 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517905, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 306, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1681)
[0000][PE] mean and std.dev: (456.61, 390.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (81, 670, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (688.20, 869.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 387.442 CPU sec, 21.716 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518129, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 344, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (437.48, 431.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (155, 568, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (718.77, 818.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 383.987 CPU sec, 21.566 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518170, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 525, 4527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12965)
[0000][PE] mean and std.dev: (1909.05, 2168.28)
[0000][PE] low and high boundaries for proper pairs: (1, 17184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (340, 700, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (1830.18, 2361.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11276)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 388.708 CPU sec, 21.809 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517917, 16, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 317, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (410.75, 432.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 439, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5806)
[0000][PE] mean and std.dev: (781.20, 1048.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7732)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1202, 4349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11593)
[0000][PE] mean and std.dev: (2265.93, 2433.06)
[0000][PE] low and high boundaries for proper pairs: (1, 15215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 390.773 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518242, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 352, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2293)
[0000][PE] mean and std.dev: (567.20, 534.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 303, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (448.92, 565.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 385.568 CPU sec, 21.587 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518005, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 307, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (327.05, 189.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 376, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (711.64, 929.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 386.342 CPU sec, 21.690 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518323, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 343, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (351.00, 200.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.20, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 206, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (568.45, 927.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 390.525 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518326, 12, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 2915, 5702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16824)
[0000][PE] mean and std.dev: (2671.42, 2839.27)
[0000][PE] low and high boundaries for proper pairs: (1, 22385)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 384.571 CPU sec, 21.662 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518194, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 359, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (739.54, 807.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (405, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 885)
[0000][PE] mean and std.dev: (489.70, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 929, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (785.77, 745.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1530, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1531.78, 752.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 386.173 CPU sec, 21.690 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518356, 18, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 365, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (536.00, 500.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 846, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1184.65, 1291.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7162)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 387.894 CPU sec, 21.764 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518191, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 384, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (449.67, 391.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.38, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 388.438 CPU sec, 21.814 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518161, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 449, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (808.36, 837.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 385.719 CPU sec, 21.647 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517680, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 443, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (1142.21, 1220.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 393.183 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518475, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 312, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (287.53, 171.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.62, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 384.356 CPU sec, 21.563 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518276, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 356, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (556.48, 660.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1545, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6032)
[0000][PE] mean and std.dev: (1220.33, 967.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7899)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 390.468 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518242, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 306, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (479.81, 447.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 495, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (667.08, 986.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1342, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1263.92, 930.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 388.110 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518170, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 388, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (479.25, 400.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 391, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (478.82, 552.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5831)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000216 bp)...
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 391.043 CPU sec, 24.468 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517724, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 472, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (719.70, 576.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 377, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (714.70, 773.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1628, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1544.00, 629.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 391.299 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518435, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 361, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1550)
[0000][PE] mean and std.dev: (363.04, 222.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 386.079 CPU sec, 21.682 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518236, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 230, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 726)
[0000][PE] mean and std.dev: (265.71, 138.90)
[0000][PE] low and high boundaries for proper pairs: (1, 903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 430, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1151.00, 1485.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 392.498 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518040, 15, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 372, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (557.44, 626.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 403, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (478.31, 542.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 985, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1067.00, 807.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 387.398 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517922, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 379, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1561)
[0000][PE] mean and std.dev: (460.11, 342.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (103, 408, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1260.00, 1670.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 384.902 CPU sec, 21.592 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517744, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 390, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (849.30, 976.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 386.234 CPU sec, 21.689 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518086, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 307, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (406.53, 312.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (145, 720, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (440.88, 332.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1454, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (1689.90, 1147.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 392.946 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517989, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 387, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1038.32, 1168.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.78, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 1388, 2947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8327)
[0000][PE] mean and std.dev: (1560.75, 1461.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11017)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 387.408 CPU sec, 21.779 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518222, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 479, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (983.96, 1109.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (156, 854, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (877.92, 881.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 387.329 CPU sec, 21.805 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517967, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 244, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 818)
[0000][PE] mean and std.dev: (230.88, 106.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 792, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4520)
[0000][PE] mean and std.dev: (797.57, 834.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 987, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (1313.73, 769.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 383.048 CPU sec, 21.493 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518167, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 322, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (33, 678)
[0000][PE] mean and std.dev: (319.22, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 684, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (520.25, 335.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 388.041 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517696, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 395, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (666.68, 666.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 388.434 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517989, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 333, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (343.80, 193.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 536, 5306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15172)
[0000][PE] mean and std.dev: (2636.38, 2988.47)
[0000][PE] low and high boundaries for proper pairs: (1, 20105)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1581, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (1252.56, 676.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 389.698 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206094
	[0000][ M::kt_pipeline] read 1206094 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518069, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 430, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (827.31, 826.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 358, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1277)
[0000][PE] mean and std.dev: (328.46, 306.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1695)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 390.363 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518131, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 318, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (281.87, 97.20)
[0000][PE] low and high boundaries for proper pairs: (1, 820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (705, 859, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (819.50, 562.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 2068, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6470)
[0000][PE] mean and std.dev: (2026.64, 1321.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206094 reads in 389.705 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518168, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 394, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (705.90, 595.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 368, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (981.46, 1206.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1401, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1518.40, 861.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 384.720 CPU sec, 21.688 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517662, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 328, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (353.80, 196.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 17, 4705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14109)
[0000][PE] mean and std.dev: (1880.00, 2829.46)
[0000][PE] low and high boundaries for proper pairs: (1, 18811)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 587, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (774.91, 664.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 393.823 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517901, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 283, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (285.11, 146.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (794, 1531, 4451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11765)
[0000][PE] mean and std.dev: (2714.24, 2557.07)
[0000][PE] low and high boundaries for proper pairs: (1, 15422)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1182, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1172.00, 680.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 386.041 CPU sec, 21.666 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517596, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 419, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (768.39, 695.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.82, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1458, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (1373.11, 480.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 395.705 CPU sec, 22.299 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518162, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 330, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 906)
[0000][PE] mean and std.dev: (304.95, 166.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 493, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (549.27, 534.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1381, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (1267.56, 484.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 389.718 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517631, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 410, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (519.89, 368.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 364, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (606.46, 722.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 385.542 CPU sec, 21.748 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517861, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 240, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (228.43, 109.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 660, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (549.40, 515.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1485, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1385.42, 759.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 386.175 CPU sec, 21.680 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518166, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 347, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (532.64, 559.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 490, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6199)
[0000][PE] mean and std.dev: (962.42, 1250.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 389.483 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518274, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 373, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (466.88, 347.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 381, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1790)
[0000][PE] mean and std.dev: (299.73, 314.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1446, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7704)
[0000][PE] mean and std.dev: (1683.23, 1123.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 388.096 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518170, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 326, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (329.72, 168.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.38, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 569, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1121.76, 1247.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7457)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1432, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7118)
[0000][PE] mean and std.dev: (1912.92, 1634.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 386.323 CPU sec, 21.656 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518016, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 396, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (537.58, 500.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.17, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (44, 939, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7250)
[0000][PE] mean and std.dev: (1234.92, 1422.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9652)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 390.853 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518210, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 366, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (600.73, 500.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 384, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (244.91, 350.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1704, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1690.50, 890.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 385.579 CPU sec, 21.679 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518199, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 366, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (680.64, 740.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 580, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (823.70, 1049.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 1077, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1191.45, 991.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 386.370 CPU sec, 21.674 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518096, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 385, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (613.65, 608.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1363, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (1217.40, 541.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 387.949 CPU sec, 21.784 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518434, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 387, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1856)
[0000][PE] mean and std.dev: (438.50, 283.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 1001, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1096.50, 1063.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8833)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 383.649 CPU sec, 21.515 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517776, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 293, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 706)
[0000][PE] mean and std.dev: (276.75, 96.48)
[0000][PE] low and high boundaries for proper pairs: (1, 873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 2318, 4010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9842)
[0000][PE] mean and std.dev: (2485.82, 1963.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 387.349 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517968, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 261, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (266.50, 139.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (325, 815, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6877)
[0000][PE] mean and std.dev: (1191.42, 1602.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9061)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 393.580 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518129, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 240, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (245.56, 92.72)
[0000][PE] low and high boundaries for proper pairs: (1, 861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 387.356 CPU sec, 21.747 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518202, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 253, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (489.05, 617.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (270, 903, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6033)
[0000][PE] mean and std.dev: (1070.38, 1059.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7954)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 2039, 3205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7579)
[0000][PE] mean and std.dev: (2365.82, 1851.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 386.333 CPU sec, 21.727 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517949, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 326, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (411.50, 387.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 73, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (154.12, 217.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2243)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 389.898 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517636, 19, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 359, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (643.90, 613.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (588, 1308, 2951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7677)
[0000][PE] mean and std.dev: (1838.79, 1769.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10040)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 869, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (943.54, 507.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 391.446 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518095, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 450, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (440.48, 274.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 252, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (905.92, 1258.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8463)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 386.801 CPU sec, 21.733 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517859, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 401, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (632.07, 578.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 1586, 3876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11102)
[0000][PE] mean and std.dev: (2047.08, 2035.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14715)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1386, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6241)
[0000][PE] mean and std.dev: (1708.00, 1410.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 390.676 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518112, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 299, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (610.25, 558.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 484, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (764.55, 868.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6584)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 387.730 CPU sec, 21.752 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517841, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 382, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (478.63, 444.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 487, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1744)
[0000][PE] mean and std.dev: (438.17, 349.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2237)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1058, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1107.62, 703.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 388.317 CPU sec, 21.825 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518345, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 345, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1984)
[0000][PE] mean and std.dev: (447.10, 381.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 639, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (686.00, 654.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 386.347 CPU sec, 21.696 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518059, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 347, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (561.83, 532.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 389.936 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206138
	[0000][ M::kt_pipeline] read 1206138 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517980, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 354, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (675.33, 665.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 613, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4648)
[0000][PE] mean and std.dev: (1058.87, 1219.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 386.092 CPU sec, 21.703 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518312, 20, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 276, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (287.20, 113.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (406, 1083, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6325)
[0000][PE] mean and std.dev: (1420.95, 1361.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1406, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1789.27, 970.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206138 reads in 388.111 CPU sec, 21.789 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517772, 26, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 393, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (738.43, 785.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 480, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (759.32, 882.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1729, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1521.80, 645.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 388.030 CPU sec, 21.799 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518497, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 230, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1039)
[0000][PE] mean and std.dev: (246.14, 159.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.86, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 346, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1117.21, 1566.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7922)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 391.320 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517847, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 345, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (288.62, 152.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 880, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1033.82, 1055.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 386.365 CPU sec, 21.675 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518371, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 392, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (930.38, 1059.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 847, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9128)
[0000][PE] mean and std.dev: (1658.80, 1974.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12147)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1000, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6101)
[0000][PE] mean and std.dev: (1533.08, 1453.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 387.529 CPU sec, 21.798 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518083, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 343, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (392.75, 226.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 190, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (757.00, 1196.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7932)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 387.357 CPU sec, 21.718 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518255, 19, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 653, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8045)
[0000][PE] mean and std.dev: (1206.17, 1433.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 750, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7291)
[0000][PE] mean and std.dev: (1136.35, 1472.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9658)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 387.805 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517829, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 319, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (433.23, 380.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 308, 3505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10513)
[0000][PE] mean and std.dev: (1326.85, 1643.21)
[0000][PE] low and high boundaries for proper pairs: (1, 14017)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1222, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (1183.70, 454.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 387.280 CPU sec, 21.747 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518061, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 635, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6362)
[0000][PE] mean and std.dev: (1477.72, 1780.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 1457, 4534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12794)
[0000][PE] mean and std.dev: (1936.58, 1936.95)
[0000][PE] low and high boundaries for proper pairs: (1, 16924)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 2127, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7159)
[0000][PE] mean and std.dev: (1835.90, 1233.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 390.110 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517690, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 452, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (723.54, 702.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1572, 3414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8542)
[0000][PE] mean and std.dev: (2193.67, 1994.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 392.459 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517954, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 335, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (578.50, 565.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 1434, 3872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10750)
[0000][PE] mean and std.dev: (2280.30, 2635.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 389.270 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517722, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 296, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (240.71, 101.82)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 956, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7912)
[0000][PE] mean and std.dev: (1726.07, 2105.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10495)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1314, 6180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15966)
[0000][PE] mean and std.dev: (2884.09, 3027.33)
[0000][PE] low and high boundaries for proper pairs: (1, 20859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 390.437 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517889, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 283, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 668)
[0000][PE] mean and std.dev: (263.00, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 427, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7097)
[0000][PE] mean and std.dev: (1005.42, 1136.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 388.675 CPU sec, 21.856 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518459, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 353, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 974)
[0000][PE] mean and std.dev: (370.20, 226.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 564, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (374.33, 335.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 385.284 CPU sec, 21.608 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518489, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 441, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1646)
[0000][PE] mean and std.dev: (473.78, 408.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 1076, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5236)
[0000][PE] mean and std.dev: (1094.83, 1154.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6958)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 382.212 CPU sec, 21.440 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518039, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 306, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1753)
[0000][PE] mean and std.dev: (352.18, 246.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.65, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 388.909 CPU sec, 21.834 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517988, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 383, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (634.76, 601.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 424, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (552.31, 788.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7022)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 390.654 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518324, 20, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 324, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (525.86, 577.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 517, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (620.68, 634.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 382.035 CPU sec, 21.423 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518150, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 334, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6222)
[0000][PE] mean and std.dev: (836.20, 1022.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 295, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (248.90, 306.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1481, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1679.27, 863.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 390.439 CPU sec, 21.894 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518317, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 333, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (506.39, 498.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.41, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 435, 4126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11942)
[0000][PE] mean and std.dev: (2326.60, 2717.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15850)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1198, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1038.22, 438.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 382.306 CPU sec, 21.455 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517873, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 327, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (562.46, 598.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 432, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (306.92, 341.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1395, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1360.67, 928.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 385.525 CPU sec, 21.631 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517933, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 315, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (908.73, 1150.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 852, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6249)
[0000][PE] mean and std.dev: (1129.50, 1358.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8257)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 387.283 CPU sec, 21.828 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517651, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 380, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (749.11, 818.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 397, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (279.83, 277.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2546)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 388.334 CPU sec, 21.873 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517546, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 245, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 811)
[0000][PE] mean and std.dev: (233.79, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (175, 735, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1124.38, 1165.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9583)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 383.893 CPU sec, 21.577 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518063, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 372, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (376.13, 238.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 383.051 CPU sec, 21.465 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518264, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 335, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (387.80, 303.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 386, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (938.71, 1300.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6142)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 387.751 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518176, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 383, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2368)
[0000][PE] mean and std.dev: (492.55, 368.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 695, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (761.83, 849.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7673)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 383.986 CPU sec, 21.559 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518179, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 312, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (602.42, 656.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 173, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (228.20, 314.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1527, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1844.31, 1299.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 385.306 CPU sec, 21.645 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517908, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 318, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (283.54, 108.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 2153, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7754)
[0000][PE] mean and std.dev: (1776.00, 1844.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10232)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 383.286 CPU sec, 21.502 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517983, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 361, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1734)
[0000][PE] mean and std.dev: (464.33, 308.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 443, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1060.00, 1372.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 386.112 CPU sec, 21.687 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517864, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 277, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (591.71, 609.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 641, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (1011.09, 1144.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1505, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7459)
[0000][PE] mean and std.dev: (1520.44, 1377.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 381.824 CPU sec, 21.452 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517944, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 382, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (618.92, 530.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 326, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (380.91, 496.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1061, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (916.12, 477.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 389.599 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517855, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 307, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (440.80, 414.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (276, 1167, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (997.53, 1007.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6868)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 2141, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (2124.50, 1234.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 384.609 CPU sec, 21.566 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517802, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 328, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (719.23, 802.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 474, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (436.93, 438.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 388.302 CPU sec, 21.850 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518202, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 347, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (765.87, 808.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 517, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (424.10, 380.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 385.385 CPU sec, 21.612 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517986, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 334, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2059)
[0000][PE] mean and std.dev: (483.26, 366.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 444, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (424.40, 432.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 386.338 CPU sec, 21.748 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518343, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 399, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3048)
[0000][PE] mean and std.dev: (717.67, 677.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 620, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (590.64, 615.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 384.200 CPU sec, 21.573 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517910, 19, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 412, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (844.67, 935.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 33, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (460.11, 617.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4362)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 383.556 CPU sec, 21.557 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518434, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 322, 719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1747)
[0000][PE] mean and std.dev: (411.62, 312.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 381.891 CPU sec, 21.405 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517645, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 394, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (415.65, 244.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 603, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (838.73, 989.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 389.004 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517984, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 582, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (660.65, 555.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.78, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (591, 1439, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5844)
[0000][PE] mean and std.dev: (1541.92, 1280.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 383.482 CPU sec, 21.510 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518050, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 394, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 985)
[0000][PE] mean and std.dev: (363.93, 148.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 383.798 CPU sec, 21.565 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518212, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 382, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (649.94, 638.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 384.967 CPU sec, 21.586 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518323, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 262, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1015)
[0000][PE] mean and std.dev: (307.73, 191.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 384.164 CPU sec, 21.642 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518380, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 336, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (939.95, 1147.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 382.887 CPU sec, 21.465 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518384, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 300, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (294.43, 146.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (603, 1085, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6348)
[0000][PE] mean and std.dev: (1450.23, 1110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1868, 3416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7484)
[0000][PE] mean and std.dev: (2147.18, 1535.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 383.390 CPU sec, 21.579 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518255, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 480, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6073)
[0000][PE] mean and std.dev: (1221.38, 1270.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1914, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1616.67, 1050.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 387.075 CPU sec, 21.702 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518176, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 345, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (613.60, 578.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 227, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (483.27, 627.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3513)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1415, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1294.82, 582.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 389.330 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518044, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 363, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1743)
[0000][PE] mean and std.dev: (408.50, 310.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 376, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (1256.71, 1766.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1331, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1325.00, 810.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 383.223 CPU sec, 21.479 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517938, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 290, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (432.59, 336.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (326, 691, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (645.00, 477.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2990)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 384.525 CPU sec, 21.651 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518294, 14, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 326, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 853)
[0000][PE] mean and std.dev: (285.27, 134.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 764, 2740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8116)
[0000][PE] mean and std.dev: (1623.14, 2259.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10804)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 2019, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1664.71, 640.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 390.074 CPU sec, 21.972 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518680, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 506, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (750.05, 726.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1989, 4588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11662)
[0000][PE] mean and std.dev: (2578.08, 2295.02)
[0000][PE] low and high boundaries for proper pairs: (1, 15199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 385.504 CPU sec, 21.647 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517667, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 333, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (635.00, 583.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 396, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1551)
[0000][PE] mean and std.dev: (268.33, 288.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2067)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1711, 1737, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (1961.09, 1030.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 382.366 CPU sec, 21.444 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517949, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 491, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1190.83, 1353.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 767, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (559.40, 443.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1837, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6649)
[0000][PE] mean and std.dev: (1747.11, 837.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 387.627 CPU sec, 21.798 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518184, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 361, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1804)
[0000][PE] mean and std.dev: (469.74, 381.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 231, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (221.50, 268.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 381.637 CPU sec, 21.394 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517949, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 355, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (605.05, 744.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (289, 803, 4235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12127)
[0000][PE] mean and std.dev: (1585.46, 1731.93)
[0000][PE] low and high boundaries for proper pairs: (1, 16073)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 388.421 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518387, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 290, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (500.83, 461.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 380.600 CPU sec, 21.342 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518238, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 347, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (578.14, 527.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.66, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 353, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (482.22, 734.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1024, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1214.58, 535.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 381.555 CPU sec, 21.445 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518323, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 396, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (643.61, 587.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 809, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (645.20, 626.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 392.401 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517892, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 709, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (739.07, 555.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 253, 3339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9989)
[0000][PE] mean and std.dev: (1198.73, 1626.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1614, 3598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8696)
[0000][PE] mean and std.dev: (1906.70, 1262.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 388.117 CPU sec, 21.784 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518130, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 429, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (367.75, 172.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 892, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8699)
[0000][PE] mean and std.dev: (1517.50, 1710.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11596)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 386.043 CPU sec, 21.655 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517755, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 252, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (758.25, 984.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 390.572 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518534, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 314, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (272.36, 148.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 389, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6254)
[0000][PE] mean and std.dev: (1171.45, 1479.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8251)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 384.510 CPU sec, 21.625 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518033, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 2092, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1362.90, 1051.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 679, 3164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9484)
[0000][PE] mean and std.dev: (1194.69, 1348.92)
[0000][PE] low and high boundaries for proper pairs: (1, 12644)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1202, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1594.55, 798.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 389.073 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518025, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 354, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (376.59, 206.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 489, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (617.53, 606.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 391.696 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517991, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 354, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (575.62, 527.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 392.131 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518358, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 536, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1294)
[0000][PE] mean and std.dev: (478.78, 213.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 377, 3831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11457)
[0000][PE] mean and std.dev: (1438.09, 2132.90)
[0000][PE] low and high boundaries for proper pairs: (1, 15270)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (496, 1221, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1246.58, 969.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 386.957 CPU sec, 21.697 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518077, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 321, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1339)
[0000][PE] mean and std.dev: (330.32, 214.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (288, 485, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (659.25, 611.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1935, 3823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9101)
[0000][PE] mean and std.dev: (2273.90, 1507.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 388.980 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517908, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 371, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1616)
[0000][PE] mean and std.dev: (380.94, 197.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 873, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (703.60, 778.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 392.902 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518202, 19, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 415, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (605.74, 658.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 808, 4012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11574)
[0000][PE] mean and std.dev: (2185.63, 2881.91)
[0000][PE] low and high boundaries for proper pairs: (1, 15355)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1997, 3525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8331)
[0000][PE] mean and std.dev: (2393.90, 2052.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 386.063 CPU sec, 21.715 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518093, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 282, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 660)
[0000][PE] mean and std.dev: (274.62, 98.63)
[0000][PE] low and high boundaries for proper pairs: (1, 813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 781, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (963.00, 656.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 390.785 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518009, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 387, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (599.06, 679.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 460, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (919.27, 1219.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1782, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (1664.00, 664.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 388.449 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517873, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 406, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1992)
[0000][PE] mean and std.dev: (442.95, 457.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 388.519 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518347, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 292, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (514.05, 575.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 930, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1019.58, 699.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 388.235 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517849, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 397, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (605.50, 554.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 2197, 6178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17936)
[0000][PE] mean and std.dev: (2688.00, 2537.78)
[0000][PE] low and high boundaries for proper pairs: (1, 23815)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 388.001 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517539, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 326, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (530.77, 410.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1349, 3124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7172)
[0000][PE] mean and std.dev: (1870.60, 1235.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 391.975 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518173, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 476, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (623.72, 473.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (83, 557, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1133.21, 1451.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (622, 1175, 3902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10462)
[0000][PE] mean and std.dev: (1912.45, 1997.51)
[0000][PE] low and high boundaries for proper pairs: (1, 13742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 389.941 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518255, 11, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 389, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1218.57, 1418.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 1021, 3837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11381)
[0000][PE] mean and std.dev: (1762.27, 2017.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15153)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 390.196 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518167, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 304, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (534.52, 582.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.17, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 637, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6320)
[0000][PE] mean and std.dev: (941.38, 1185.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8418)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 387.453 CPU sec, 21.745 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517474, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 403, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (551.40, 507.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1341, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1637.00, 1173.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 391.417 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517674, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 349, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1087)
[0000][PE] mean and std.dev: (315.95, 151.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 533, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (682.00, 528.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 392.779 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517938, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 429, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (678.65, 590.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 309, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (841.36, 1099.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6911)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1539, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1639.91, 923.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 390.855 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517806, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 495, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (636.47, 483.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 391.060 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517827, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 341, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (617.91, 695.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 284, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1744)
[0000][PE] mean and std.dev: (250.45, 254.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2325)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1250, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1367.92, 1028.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 389.599 CPU sec, 21.855 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517814, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 557, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (914.07, 882.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 317, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (775.00, 1227.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1625, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1489.70, 598.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 391.217 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517877, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 364, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (840.50, 796.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 565, 3715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10705)
[0000][PE] mean and std.dev: (1270.08, 1574.31)
[0000][PE] low and high boundaries for proper pairs: (1, 14200)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 391.615 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518883, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 341, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (630.03, 628.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 1567, 4138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11632)
[0000][PE] mean and std.dev: (2476.64, 2841.17)
[0000][PE] low and high boundaries for proper pairs: (1, 15379)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 388.630 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518202, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 310, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (272.00, 109.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1013, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (971.25, 368.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 387.217 CPU sec, 21.743 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517760, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 294, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (301.73, 191.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 1286, 5031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14523)
[0000][PE] mean and std.dev: (2657.31, 2886.50)
[0000][PE] low and high boundaries for proper pairs: (1, 19269)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 393.916 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518024, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 722, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1247.29, 1231.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 394.947 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518315, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 598, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (957.71, 891.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.77, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 1126, 3383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9693)
[0000][PE] mean and std.dev: (1675.17, 1671.84)
[0000][PE] low and high boundaries for proper pairs: (1, 12848)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1187, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1241.75, 863.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 391.164 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518204, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 330, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (683.59, 857.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 258, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (205.00, 229.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 387.100 CPU sec, 21.764 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518116, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 373, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (550.91, 475.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 326, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2415)
[0000][PE] mean and std.dev: (239.88, 271.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1726, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1757.15, 882.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 391.324 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518113, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 394, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (298.67, 135.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 559, 3473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10025)
[0000][PE] mean and std.dev: (1492.88, 2131.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13301)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 388.868 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518168, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 311, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (512.42, 541.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 1860, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9624)
[0000][PE] mean and std.dev: (2127.90, 2068.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12796)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1785, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6372)
[0000][PE] mean and std.dev: (2027.10, 1570.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 389.422 CPU sec, 21.849 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517473, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 352, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 749)
[0000][PE] mean and std.dev: (303.88, 113.24)
[0000][PE] low and high boundaries for proper pairs: (1, 905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 389.732 CPU sec, 21.866 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517754, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 321, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (470.35, 370.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1305, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1346.18, 758.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 391.201 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518281, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 337, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (623.00, 571.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 386.760 CPU sec, 21.748 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518225, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 334, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (295.44, 138.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 389.140 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517598, 20, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 305, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1108)
[0000][PE] mean and std.dev: (304.89, 135.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 513, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (457.72, 466.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1658, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5811)
[0000][PE] mean and std.dev: (1901.43, 1468.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 388.047 CPU sec, 21.777 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517873, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 374, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (810.35, 871.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1308, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1619.08, 1335.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 390.476 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517989, 18, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 381, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (641.60, 663.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (132, 421, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (988.88, 1334.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 388.775 CPU sec, 21.860 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518219, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 355, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (527.25, 543.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 681, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (885.23, 1020.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 389.414 CPU sec, 21.889 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517875, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 363, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (428.50, 369.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (428, 782, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7943)
[0000][PE] mean and std.dev: (1446.00, 1419.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10448)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 398.426 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518208, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 432, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (717.24, 737.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1134, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2674)
[0000][PE] mean and std.dev: (1072.10, 551.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 388.207 CPU sec, 21.794 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517889, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 332, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1921)
[0000][PE] mean and std.dev: (405.50, 299.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 512, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (580.40, 605.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1187, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1353.40, 832.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 389.773 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517691, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1086, 3598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10046)
[0000][PE] mean and std.dev: (1845.60, 1852.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1375, 2477, 6381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16393)
[0000][PE] mean and std.dev: (3525.92, 2780.52)
[0000][PE] low and high boundaries for proper pairs: (1, 21399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 394.846 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517666, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 307, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1413)
[0000][PE] mean and std.dev: (395.48, 314.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 387.102 CPU sec, 21.731 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518289, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 315, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (431.79, 415.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (95, 871, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8585)
[0000][PE] mean and std.dev: (1804.57, 2198.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11415)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 393.448 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518191, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 362, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (1057.95, 1350.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 1431, 3141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9403)
[0000][PE] mean and std.dev: (1886.36, 2094.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12534)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 395.226 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518154, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 209, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 657)
[0000][PE] mean and std.dev: (241.08, 69.45)
[0000][PE] low and high boundaries for proper pairs: (1, 809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (102, 694, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1030.46, 1106.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1945, 4122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11102)
[0000][PE] mean and std.dev: (2283.00, 2069.85)
[0000][PE] low and high boundaries for proper pairs: (1, 14592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 393.474 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518143, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 352, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5494)
[0000][PE] mean and std.dev: (667.69, 781.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 425, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4804)
[0000][PE] mean and std.dev: (701.50, 735.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 388.509 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518585, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 269, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (478.30, 530.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 390.808 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518109, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 426, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (582.88, 497.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 1386, 4131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12387)
[0000][PE] mean and std.dev: (1948.10, 2036.22)
[0000][PE] low and high boundaries for proper pairs: (1, 16515)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1147, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (1301.09, 580.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 388.675 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518449, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 436, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (456.54, 357.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 397, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (392.77, 465.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2651)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1121, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 2125)
[0000][PE] mean and std.dev: (1197.10, 424.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 391.716 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518017, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 327, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1762)
[0000][PE] mean and std.dev: (365.12, 270.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 663, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (727.25, 773.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 388.092 CPU sec, 21.769 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518335, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 288, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (268.00, 155.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1178, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1166.08, 725.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 386.562 CPU sec, 21.683 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517778, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 231, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (528.75, 623.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 615, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (1111.71, 1595.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7495)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1897, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1689.78, 877.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 392.239 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518096, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 342, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (431.77, 365.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 576, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7642)
[0000][PE] mean and std.dev: (1145.60, 1434.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10184)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 396.209 CPU sec, 22.340 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517688, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 413, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (822.07, 741.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (430, 1424, 3955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11005)
[0000][PE] mean and std.dev: (2374.30, 2419.51)
[0000][PE] low and high boundaries for proper pairs: (1, 14530)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 387.496 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518136, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 424, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (411.33, 215.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 406, 4195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12569)
[0000][PE] mean and std.dev: (1767.47, 2194.56)
[0000][PE] low and high boundaries for proper pairs: (1, 16756)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1283, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5398)
[0000][PE] mean and std.dev: (1260.10, 657.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 391.215 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518330, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 347, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2424)
[0000][PE] mean and std.dev: (502.19, 436.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (567, 804, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2163)
[0000][PE] mean and std.dev: (921.10, 622.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 387.294 CPU sec, 21.755 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518129, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 365, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (505.63, 401.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 602, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9511)
[0000][PE] mean and std.dev: (1777.62, 2569.88)
[0000][PE] low and high boundaries for proper pairs: (1, 12675)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1626, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (6, 3346)
[0000][PE] mean and std.dev: (1385.10, 549.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 389.492 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518420, 23, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 212, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (248.84, 147.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (186, 1048, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1158.32, 1248.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7846)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 388.155 CPU sec, 21.751 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518117, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 509, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1137.76, 1318.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1425, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6998)
[0000][PE] mean and std.dev: (1940.09, 1434.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 392.199 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517808, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 376, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (678.19, 731.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (437, 1386, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6548)
[0000][PE] mean and std.dev: (1525.00, 1414.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8585)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1319, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1684.80, 1283.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 390.543 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518110, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 343, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (429.75, 329.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (701, 1258, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (930.79, 709.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 388.274 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518501, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 364, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (333.00, 158.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 309, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (856.38, 1127.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 2602, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (2238.44, 1570.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 391.817 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517892, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 314, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (385.78, 252.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1473, 4092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10510)
[0000][PE] mean and std.dev: (2642.20, 2496.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 391.560 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517868, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 327, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6992)
[0000][PE] mean and std.dev: (1076.94, 1048.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 1021, 2926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8734)
[0000][PE] mean and std.dev: (1512.07, 1467.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11638)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 388.332 CPU sec, 21.802 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518747, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 436, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (693.12, 579.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 832, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1088.75, 859.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7550)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1124, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1281.69, 930.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 387.642 CPU sec, 21.802 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517931, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 423, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (675.82, 611.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 390.150 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517985, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 424, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (705.00, 557.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (287, 410, 719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1583)
[0000][PE] mean and std.dev: (352.75, 219.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1366, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1152.27, 525.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 392.178 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518148, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 677, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (840.44, 737.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 2470, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9686)
[0000][PE] mean and std.dev: (2152.40, 2459.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12907)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1189, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (1208.92, 674.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 387.886 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518037, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 256, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2053)
[0000][PE] mean and std.dev: (437.94, 480.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 686, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7414)
[0000][PE] mean and std.dev: (1234.42, 1368.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9815)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 391.604 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518310, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 417, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (516.48, 361.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.79, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 712, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (512.91, 411.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 393.141 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517944, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 311, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (535.60, 478.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 218, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (675.36, 1109.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1546, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (1511.60, 823.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 392.066 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517830, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 385, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (566.00, 520.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 237, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1184)
[0000][PE] mean and std.dev: (229.44, 271.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1461, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (1248.11, 694.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 391.584 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517764, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 346, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1503)
[0000][PE] mean and std.dev: (458.64, 342.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.81, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 313, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1504)
[0000][PE] mean and std.dev: (170.38, 215.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1471, 3522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8262)
[0000][PE] mean and std.dev: (1949.17, 1267.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 390.367 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518423, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1186, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (970.22, 860.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 380, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (523.73, 555.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 965, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1158.08, 806.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 389.910 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518011, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 406, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (764.85, 747.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 625, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8563)
[0000][PE] mean and std.dev: (1408.00, 1778.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11411)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 2240, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6315)
[0000][PE] mean and std.dev: (2295.80, 1442.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 387.527 CPU sec, 21.745 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517845, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 345, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (589.71, 488.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1266, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1218.50, 663.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 390.961 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518079, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 504, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (979.89, 1004.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (327, 619, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1014.00, 1205.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1612, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1424.10, 857.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 386.255 CPU sec, 21.695 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517972, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 457, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (700.15, 566.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 174, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (154.75, 152.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1790)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 388.801 CPU sec, 21.835 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518286, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 306, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (502.18, 574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 386.982 CPU sec, 21.772 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518304, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 271, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (431.44, 420.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 42, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (550.33, 920.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1629, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1779.69, 910.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 391.989 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518424, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 304, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (592.67, 596.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 385.738 CPU sec, 21.670 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518327, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 329, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (656.62, 719.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (230, 768, 4236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12248)
[0000][PE] mean and std.dev: (1793.19, 2138.52)
[0000][PE] low and high boundaries for proper pairs: (1, 16254)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 389.506 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518153, 17, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 324, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (577.24, 588.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 647, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8827)
[0000][PE] mean and std.dev: (1624.41, 1997.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11769)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (457, 1133, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (999.70, 481.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 389.637 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518196, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 345, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (518.00, 407.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (604, 649, 4142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11218)
[0000][PE] mean and std.dev: (2250.82, 2362.98)
[0000][PE] low and high boundaries for proper pairs: (1, 14756)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1348, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (1427.85, 586.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 389.113 CPU sec, 21.852 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517848, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 426, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2454)
[0000][PE] mean and std.dev: (510.31, 376.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1218, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1153.64, 687.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 394.697 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518588, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 330, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1560)
[0000][PE] mean and std.dev: (403.80, 353.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 741, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1137.88, 1337.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7170)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1376, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (180, 2580)
[0000][PE] mean and std.dev: (1209.80, 412.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 388.559 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517521, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 406, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (575.17, 555.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 437, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (700.80, 944.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 2266, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8402)
[0000][PE] mean and std.dev: (2500.60, 2116.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 389.922 CPU sec, 21.889 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517771, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 279, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (236.71, 95.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 388.544 CPU sec, 21.846 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517865, 16, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 427, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (649.93, 499.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 462, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6789)
[0000][PE] mean and std.dev: (831.07, 1093.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 387.928 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518283, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 282, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 868)
[0000][PE] mean and std.dev: (271.14, 99.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 452, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1093.73, 1004.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6506)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1228, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (1231.62, 540.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 388.893 CPU sec, 21.839 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518140, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 285, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (856.39, 1173.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (420, 731, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1217.67, 1271.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 947, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (924.33, 522.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 397.831 CPU sec, 22.371 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517979, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 277, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (447.59, 470.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 600, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (626.73, 703.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6142)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1461, 4054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10222)
[0000][PE] mean and std.dev: (2069.67, 1494.23)
[0000][PE] low and high boundaries for proper pairs: (1, 13306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 390.590 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517746, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 344, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (477.00, 415.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (238, 725, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (561.82, 465.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2926)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 388.483 CPU sec, 21.777 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518409, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 346, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1277)
[0000][PE] mean and std.dev: (331.78, 145.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 578, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (856.50, 1071.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 387.623 CPU sec, 21.746 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518076, 17, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 365, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (444.13, 332.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 994, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7129)
[0000][PE] mean and std.dev: (1415.24, 1560.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9499)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1506, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6541)
[0000][PE] mean and std.dev: (1434.31, 876.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 391.467 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517444, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 421, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (910.33, 1058.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 2178, 3881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11631)
[0000][PE] mean and std.dev: (2019.36, 1924.31)
[0000][PE] low and high boundaries for proper pairs: (1, 15506)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1036, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (1018.50, 628.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 391.313 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518097, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 288, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (580.62, 648.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 176, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (765.00, 1174.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1958, 3182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7340)
[0000][PE] mean and std.dev: (2029.00, 1312.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 390.587 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517814, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 353, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (476.64, 450.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 106, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1741)
[0000][PE] mean and std.dev: (293.11, 486.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2317)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 391.008 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518327, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 330, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (625.62, 632.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 1487, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8823)
[0000][PE] mean and std.dev: (2072.00, 2412.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11762)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1305, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1302.27, 840.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 394.383 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518260, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 733, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (806.44, 600.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 359, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6647)
[0000][PE] mean and std.dev: (1169.79, 1577.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 2241, 3359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9101)
[0000][PE] mean and std.dev: (2431.40, 2162.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 386.311 CPU sec, 21.673 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517973, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 400, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (615.17, 582.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 490, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7153)
[0000][PE] mean and std.dev: (1020.00, 1239.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9514)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 389.129 CPU sec, 21.839 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518014, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 349, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1380)
[0000][PE] mean and std.dev: (411.29, 313.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (67, 409, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (492.54, 572.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 390.317 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518349, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 272, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (320.19, 254.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 390.272 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518038, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 321, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (678.06, 770.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.67, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1714, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1868.60, 1086.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 386.649 CPU sec, 21.688 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518344, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 430, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2403)
[0000][PE] mean and std.dev: (497.95, 364.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 570, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (525.73, 480.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1571, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1176.62, 482.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 397.095 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518483, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 246, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (340.33, 263.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 1002, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1089.00, 999.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1374, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1461.50, 967.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 388.892 CPU sec, 21.851 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518025, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 370, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (743.00, 787.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (469, 1123, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6646)
[0000][PE] mean and std.dev: (1391.62, 1096.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8705)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 874, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1420.55, 950.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 387.269 CPU sec, 21.740 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517978, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 450, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (609.21, 589.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 270, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (240.67, 287.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.186 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517861, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 333, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1384)
[0000][PE] mean and std.dev: (314.36, 178.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 391.786 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517716, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 312, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (683.52, 803.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1044, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (495, 1555)
[0000][PE] mean and std.dev: (957.62, 130.87)
[0000][PE] low and high boundaries for proper pairs: (283, 1767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 390.589 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518254, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 404, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (634.78, 591.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 883, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (813.00, 649.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 387.380 CPU sec, 21.769 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518253, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 321, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (303.24, 130.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 389.200 CPU sec, 21.844 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518289, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 368, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (673.76, 647.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 193, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (341.18, 411.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1447, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (415, 2360)
[0000][PE] mean and std.dev: (1533.71, 316.29)
[0000][PE] low and high boundaries for proper pairs: (26, 2799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 386.174 CPU sec, 21.668 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518093, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 369, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (354.83, 207.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 465, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1129.27, 1518.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 390.127 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518075, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 348, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (527.40, 601.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 598, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (982.85, 1045.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8563)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 390.988 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518142, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 343, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 789)
[0000][PE] mean and std.dev: (305.26, 133.24)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.34, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 517, 3539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10075)
[0000][PE] mean and std.dev: (1691.60, 2100.13)
[0000][PE] low and high boundaries for proper pairs: (1, 13343)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 386.458 CPU sec, 21.670 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517561, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 383, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (640.67, 548.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 324, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (419.55, 600.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1093, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1064.70, 636.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 396.369 CPU sec, 22.267 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518430, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 572, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1025.95, 1008.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 473, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (853.19, 1093.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6542)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 387.610 CPU sec, 21.773 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517433, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 318, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (602.16, 750.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (106, 735, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7717)
[0000][PE] mean and std.dev: (1504.53, 1594.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10254)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 391.605 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517860, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 401, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (714.71, 652.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.86, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (187, 352, 4910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14356)
[0000][PE] mean and std.dev: (2056.91, 2818.30)
[0000][PE] low and high boundaries for proper pairs: (1, 19079)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1235, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1483.14, 1108.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 390.559 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518379, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 329, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (330.07, 200.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 389.069 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518275, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 366, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (289.00, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 390.038 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517688, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 379, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (1199.81, 1417.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 7, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (823.93, 1153.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 974, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (1317.55, 862.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 399.750 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517915, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 385, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2215)
[0000][PE] mean and std.dev: (664.05, 577.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 8, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1728)
[0000][PE] mean and std.dev: (326.86, 489.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2303)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 391.741 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517988, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 352, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (503.79, 503.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 583, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (656.58, 591.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 392.553 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518143, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 247, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (312.31, 280.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 2208, 7429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21285)
[0000][PE] mean and std.dev: (3122.00, 3217.72)
[0000][PE] low and high boundaries for proper pairs: (1, 28213)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1336, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7654)
[0000][PE] mean and std.dev: (2043.92, 1901.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 388.087 CPU sec, 21.763 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517761, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 277, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (410.15, 384.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 824, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (994.00, 663.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 394.520 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517968, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 534, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (717.88, 591.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 576, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (582.31, 567.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 389.745 CPU sec, 21.856 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518116, 20, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 625, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (612.93, 549.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 423, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6491)
[0000][PE] mean and std.dev: (1067.74, 1676.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8647)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1377, 4580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11604)
[0000][PE] mean and std.dev: (2602.33, 2662.94)
[0000][PE] low and high boundaries for proper pairs: (1, 15116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 393.061 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517894, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 303, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (299.20, 163.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 377, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (770.12, 1165.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6442)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 389.346 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517950, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 337, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (371.06, 259.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 316, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2093)
[0000][PE] mean and std.dev: (408.69, 372.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2770)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 394.275 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518017, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 337, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (433.86, 394.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 635, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1858)
[0000][PE] mean and std.dev: (438.00, 323.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2388)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 395.853 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518112, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 321, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1197)
[0000][PE] mean and std.dev: (357.50, 212.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1693, 3926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9122)
[0000][PE] mean and std.dev: (2622.38, 2238.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 392.703 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518255, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 411, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1056.53, 1127.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 532, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6384)
[0000][PE] mean and std.dev: (833.89, 1121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8508)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 387.073 CPU sec, 21.719 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518257, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 338, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (317.55, 184.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 344, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6707)
[0000][PE] mean and std.dev: (693.56, 914.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1082, 3363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8235)
[0000][PE] mean and std.dev: (1826.64, 1240.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 392.254 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518098, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 849, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (698.38, 427.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1942, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1860.40, 985.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 391.006 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518077, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 369, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1275)
[0000][PE] mean and std.dev: (363.44, 208.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 677, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (748.77, 732.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6321)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 390.283 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517926, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 333, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (450.95, 385.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 390.844 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517910, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 378, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1684)
[0000][PE] mean and std.dev: (451.00, 330.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (351, 1471, 4633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13197)
[0000][PE] mean and std.dev: (2334.64, 2413.72)
[0000][PE] low and high boundaries for proper pairs: (1, 17479)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1341, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7539)
[0000][PE] mean and std.dev: (1605.09, 1032.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 391.626 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517738, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 299, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (499.19, 411.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 636, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (972.00, 960.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8403)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1650, 4420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11288)
[0000][PE] mean and std.dev: (2379.92, 2054.82)
[0000][PE] low and high boundaries for proper pairs: (1, 14722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 392.623 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518220, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 301, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (489.81, 436.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (677, 1176, 3720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9806)
[0000][PE] mean and std.dev: (2431.45, 2484.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12849)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1726, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (1450.92, 1044.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 391.224 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518195, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 461, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (850.15, 783.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.15, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 335, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (747.85, 1112.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 384.553 CPU sec, 21.648 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518291, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 686, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (665.05, 506.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1401, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (1256.44, 436.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 386.912 CPU sec, 21.716 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518246, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 270, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1369)
[0000][PE] mean and std.dev: (277.53, 171.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 596, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8323)
[0000][PE] mean and std.dev: (1978.09, 2563.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12234)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 1617, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5522)
[0000][PE] mean and std.dev: (2150.40, 1254.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 389.274 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518159, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 333, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (367.70, 230.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.40, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 463, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (474.00, 410.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1981, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6754)
[0000][PE] mean and std.dev: (2330.20, 1561.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 388.090 CPU sec, 21.775 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518021, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 305, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (300.83, 184.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 389.799 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517924, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 758, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (840.50, 789.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (149, 551, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (714.42, 797.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1844, 3571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9231)
[0000][PE] mean and std.dev: (2707.90, 2569.04)
[0000][PE] low and high boundaries for proper pairs: (1, 12984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 390.147 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518044, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 380, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 857)
[0000][PE] mean and std.dev: (315.87, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (427, 996, 3483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9595)
[0000][PE] mean and std.dev: (1520.87, 1454.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12651)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 390.025 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518390, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 300, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (633.50, 740.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 44, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (401.67, 817.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1470, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1331.90, 574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 387.343 CPU sec, 21.724 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517799, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 324, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1972)
[0000][PE] mean and std.dev: (538.77, 432.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.65, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 276, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (217.00, 230.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1529, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1823.82, 899.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 390.963 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517658, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 333, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1982)
[0000][PE] mean and std.dev: (472.92, 382.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (460, 718, 4764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13372)
[0000][PE] mean and std.dev: (2582.36, 3191.11)
[0000][PE] low and high boundaries for proper pairs: (1, 17676)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 392.786 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518109, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 314, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (275.58, 169.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 54, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1339)
[0000][PE] mean and std.dev: (109.00, 146.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1781)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1521, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (311, 2756)
[0000][PE] mean and std.dev: (1405.00, 323.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 393.853 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518174, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 267, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (259.69, 128.48)
[0000][PE] low and high boundaries for proper pairs: (1, 955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 388.835 CPU sec, 21.836 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517676, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 381, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1575)
[0000][PE] mean and std.dev: (458.00, 281.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (388, 816, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1160.57, 1083.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 390.359 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518154, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 290, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (269.69, 158.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 384.391 CPU sec, 21.577 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517716, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 280, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 784)
[0000][PE] mean and std.dev: (252.56, 141.66)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 436, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2566)
[0000][PE] mean and std.dev: (548.38, 566.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1700, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5711)
[0000][PE] mean and std.dev: (1741.25, 857.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 390.837 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518223, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 317, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (332.19, 240.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.79, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 47, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (311.41, 440.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2327)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 392.577 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518045, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 932, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8054)
[0000][PE] mean and std.dev: (1599.35, 1940.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 330, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (579.00, 771.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 387.401 CPU sec, 21.688 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517837, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 391, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (511.27, 424.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1499, 3953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10267)
[0000][PE] mean and std.dev: (2618.83, 3032.74)
[0000][PE] low and high boundaries for proper pairs: (1, 14750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 387.815 CPU sec, 21.753 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518059, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 332, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (397.83, 285.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 406, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (743.71, 825.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 392.271 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518205, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 309, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (258.11, 133.65)
[0000][PE] low and high boundaries for proper pairs: (1, 938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (578, 2894, 4607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12665)
[0000][PE] mean and std.dev: (3331.20, 3083.26)
[0000][PE] low and high boundaries for proper pairs: (1, 16694)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1959, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (2196.45, 1356.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 389.627 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518268, 13, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 365, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (447.22, 346.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 272, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1993)
[0000][PE] mean and std.dev: (288.50, 408.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2657)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 990, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1353.00, 1146.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 389.965 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518242, 15, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 355, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (453.35, 383.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (461, 992, 4844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13610)
[0000][PE] mean and std.dev: (1928.47, 2069.21)
[0000][PE] low and high boundaries for proper pairs: (1, 17993)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 388.359 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518493, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 369, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (579.62, 558.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 514, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6502)
[0000][PE] mean and std.dev: (1001.17, 1368.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1009, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (989.11, 705.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 386.412 CPU sec, 21.685 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518128, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 395, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (668.22, 771.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 387.474 CPU sec, 21.721 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518009, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 348, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (530.41, 433.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 244, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1844)
[0000][PE] mean and std.dev: (298.40, 309.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 385.094 CPU sec, 21.562 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517689, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 375, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (747.25, 755.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (59, 230, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (556.67, 746.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3723)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 389.428 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517943, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 349, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (660.06, 655.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1081, 4605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12057)
[0000][PE] mean and std.dev: (2005.18, 1913.10)
[0000][PE] low and high boundaries for proper pairs: (1, 15783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 390.443 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518465, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 321, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (448.30, 374.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1209, 3837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9219)
[0000][PE] mean and std.dev: (2583.09, 2144.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 387.603 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517948, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 399, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (633.80, 580.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 376, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2115)
[0000][PE] mean and std.dev: (363.53, 442.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 921, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (954.80, 564.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 387.049 CPU sec, 21.710 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517891, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 391, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (892.71, 837.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.26, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 543, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (363.11, 268.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2267)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.443 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517757, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 906, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1080.72, 1010.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 288, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (774.44, 1280.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8416)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 390.996 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518306, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 348, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (597.88, 450.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 455, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (618.08, 964.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 386.111 CPU sec, 21.614 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518172, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 405, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (610.54, 615.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (389, 574, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (798.42, 654.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 393.246 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518041, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 350, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (675.10, 645.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1090, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1200.18, 805.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 384.050 CPU sec, 21.554 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517848, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 361, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (474.50, 372.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (192, 286, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (475.33, 598.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7116)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 392.063 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518301, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 416, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1709)
[0000][PE] mean and std.dev: (449.00, 301.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 386.597 CPU sec, 21.670 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518153, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 412, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5713)
[0000][PE] mean and std.dev: (923.32, 1185.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 229, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (306.42, 435.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 388.182 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517634, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 419, 3972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11526)
[0000][PE] mean and std.dev: (1633.92, 2307.82)
[0000][PE] low and high boundaries for proper pairs: (1, 15303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 647, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (752.94, 724.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1959, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7948)
[0000][PE] mean and std.dev: (1670.82, 1308.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 390.334 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518074, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 308, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 736)
[0000][PE] mean and std.dev: (236.00, 95.42)
[0000][PE] low and high boundaries for proper pairs: (1, 919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 387.028 CPU sec, 21.719 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518169, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 318, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (620.93, 657.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (359, 476, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (736.00, 739.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1512, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (1585.73, 1018.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 389.336 CPU sec, 21.880 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518553, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 293, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (670.46, 770.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 756, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (719.09, 844.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1262, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (1267.31, 435.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 386.437 CPU sec, 21.706 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517932, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 479, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (991.67, 941.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (344, 927, 5315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15257)
[0000][PE] mean and std.dev: (2188.33, 2841.87)
[0000][PE] low and high boundaries for proper pairs: (1, 20228)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1437, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (1384.73, 935.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 385.176 CPU sec, 21.656 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518036, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 310, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1103)
[0000][PE] mean and std.dev: (316.29, 194.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 990, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8750)
[0000][PE] mean and std.dev: (1606.69, 1666.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11611)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 389.654 CPU sec, 21.851 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518448, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 428, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (700.67, 742.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 1095, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1076.56, 663.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 386.948 CPU sec, 21.675 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518247, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 460, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (787.29, 834.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 822, 5153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15397)
[0000][PE] mean and std.dev: (2141.38, 2760.42)
[0000][PE] low and high boundaries for proper pairs: (1, 20519)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 389.137 CPU sec, 21.827 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517744, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 290, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1015)
[0000][PE] mean and std.dev: (300.81, 193.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 389.581 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518416, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 270, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (501.30, 476.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1785, 2797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1684.50, 1075.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 388.542 CPU sec, 21.808 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518042, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 852, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (886.11, 677.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 23, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (478.91, 605.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1267, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6280)
[0000][PE] mean and std.dev: (1548.25, 989.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 386.107 CPU sec, 21.683 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517992, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 388, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (691.00, 844.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 140, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (463.21, 678.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 395.102 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517872, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 267, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (512.29, 580.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (234, 1195, 3917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11283)
[0000][PE] mean and std.dev: (2282.18, 2657.53)
[0000][PE] low and high boundaries for proper pairs: (1, 14966)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1467, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1672.06, 753.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 388.979 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517797, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 525, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (554.06, 369.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 71, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2499)
[0000][PE] mean and std.dev: (285.20, 371.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1312, 1388, 4095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9661)
[0000][PE] mean and std.dev: (2233.18, 1862.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 388.908 CPU sec, 21.826 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517977, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 327, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (322.68, 161.76)
[0000][PE] low and high boundaries for proper pairs: (1, 970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1407, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (1379.22, 790.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 388.890 CPU sec, 21.817 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518190, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 549, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (954.96, 952.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 388.273 CPU sec, 21.773 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518028, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 261, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1393)
[0000][PE] mean and std.dev: (412.46, 297.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (139, 275, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6859)
[0000][PE] mean and std.dev: (1412.18, 1630.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9099)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1455, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1396.80, 740.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 384.924 CPU sec, 21.579 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518039, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 428, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1446)
[0000][PE] mean and std.dev: (475.60, 373.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 887, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2077)
[0000][PE] mean and std.dev: (842.33, 335.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 385.609 CPU sec, 21.611 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518077, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 332, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 813)
[0000][PE] mean and std.dev: (262.33, 115.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 275, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (774.41, 1214.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 980, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (931.08, 499.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 388.018 CPU sec, 21.771 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518076, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 372, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1940)
[0000][PE] mean and std.dev: (442.75, 272.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 1026, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (864.20, 868.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 392.839 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518414, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 267, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 828)
[0000][PE] mean and std.dev: (277.44, 149.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (488, 1454, 3317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8975)
[0000][PE] mean and std.dev: (1976.50, 2252.78)
[0000][PE] low and high boundaries for proper pairs: (1, 11804)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 388.449 CPU sec, 21.785 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518090, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 327, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (482.00, 402.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (81, 974, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8763)
[0000][PE] mean and std.dev: (1568.73, 1737.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11657)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1343, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1353.62, 797.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 393.983 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517966, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 349, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (618.92, 586.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 2081, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7399)
[0000][PE] mean and std.dev: (1442.67, 1613.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9865)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 384.724 CPU sec, 21.574 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518038, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 377, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (536.40, 435.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 386.534 CPU sec, 21.685 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518567, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 301, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (271.45, 57.96)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 383.609 CPU sec, 21.464 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518340, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 386, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1914)
[0000][PE] mean and std.dev: (445.65, 276.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (75, 882, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (486.89, 427.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3747)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 390.409 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517964, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 380, 641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1529)
[0000][PE] mean and std.dev: (361.12, 270.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1011, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1084.46, 691.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 387.298 CPU sec, 21.716 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517699, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 286, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (696.10, 876.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 389.122 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517859, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 357, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (628.62, 649.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (198, 352, 4020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11664)
[0000][PE] mean and std.dev: (1640.64, 2304.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15486)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1526, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1494.70, 614.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 390.360 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517944, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 353, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (388.67, 299.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 223, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1903)
[0000][PE] mean and std.dev: (153.73, 207.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1947, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6798)
[0000][PE] mean and std.dev: (1860.25, 851.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 388.122 CPU sec, 21.759 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518414, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 354, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (515.59, 465.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 679, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (954.88, 1024.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 383.823 CPU sec, 21.562 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518263, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 350, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1613)
[0000][PE] mean and std.dev: (437.41, 335.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 407, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (662.18, 961.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7000)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 2654, 3529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8401)
[0000][PE] mean and std.dev: (2437.60, 1391.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 394.421 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517963, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 424, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (568.10, 492.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 555, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (700.43, 990.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1440, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7072)
[0000][PE] mean and std.dev: (1719.60, 1146.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 389.243 CPU sec, 21.873 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517682, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 295, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (263.06, 148.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (44, 435, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8321)
[0000][PE] mean and std.dev: (1652.07, 2211.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11080)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 392.276 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518340, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 349, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2276)
[0000][PE] mean and std.dev: (348.73, 229.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1358, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (1311.79, 692.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 388.443 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518050, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 335, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (467.28, 444.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1747, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1635.50, 870.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 388.042 CPU sec, 21.758 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517890, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 203, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (219.64, 132.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 390.335 CPU sec, 21.919 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517964, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 292, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2222)
[0000][PE] mean and std.dev: (497.26, 537.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 431, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4920)
[0000][PE] mean and std.dev: (653.09, 780.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 387.896 CPU sec, 21.721 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517798, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 313, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (299.57, 131.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 386.845 CPU sec, 21.693 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518150, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 341, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (446.65, 336.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (421, 529, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2107)
[0000][PE] mean and std.dev: (541.22, 405.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 387.463 CPU sec, 21.735 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517826, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 319, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1266)
[0000][PE] mean and std.dev: (361.73, 271.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 643, 4848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14494)
[0000][PE] mean and std.dev: (2221.08, 3083.17)
[0000][PE] low and high boundaries for proper pairs: (1, 19317)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 386.780 CPU sec, 21.743 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517582, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 560, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (749.08, 582.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 704, 4289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12861)
[0000][PE] mean and std.dev: (2351.80, 2837.68)
[0000][PE] low and high boundaries for proper pairs: (1, 17147)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 387.530 CPU sec, 21.722 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517891, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 638, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6317)
[0000][PE] mean and std.dev: (1036.56, 1285.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 1959, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7331)
[0000][PE] mean and std.dev: (1804.00, 1612.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9671)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 2008, 4570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12076)
[0000][PE] mean and std.dev: (2503.50, 1781.04)
[0000][PE] low and high boundaries for proper pairs: (1, 15829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 386.168 CPU sec, 21.638 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517766, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 339, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (625.71, 736.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 396.154 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518030, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 305, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (521.76, 456.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 471, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (486.94, 571.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3961)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 398.082 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517769, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 319, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1437)
[0000][PE] mean and std.dev: (410.04, 337.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 392.600 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517497, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 210, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 999)
[0000][PE] mean and std.dev: (245.63, 189.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (242, 572, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (641.71, 635.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1150, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (1298.64, 692.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 393.626 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518018, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 281, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (278.13, 144.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 52, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (179.50, 291.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 402.949 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517770, 23, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 347, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (657.19, 644.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 681, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (598.38, 636.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 457.417 CPU sec, 25.682 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517833, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 368, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (589.88, 564.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 1340, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (817.56, 814.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 922, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (960.20, 354.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 396.560 CPU sec, 22.286 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518043, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 441, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (667.11, 586.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1440, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1422.00, 701.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 398.251 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518092, 16, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 598, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (698.38, 711.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 954, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8580)
[0000][PE] mean and std.dev: (1685.31, 2083.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11372)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 415.608 CPU sec, 23.607 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518264, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 367, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (681.67, 672.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 1542, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9686)
[0000][PE] mean and std.dev: (2084.89, 2101.72)
[0000][PE] low and high boundaries for proper pairs: (1, 12908)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1354, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5344)
[0000][PE] mean and std.dev: (1478.09, 980.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 408.042 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517966, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 374, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (613.80, 571.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 408, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1184)
[0000][PE] mean and std.dev: (298.00, 224.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 395.740 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517961, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 401, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (411.26, 344.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 526, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (729.45, 671.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 398.890 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517908, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 277, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (664.72, 633.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 999, 5000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13696)
[0000][PE] mean and std.dev: (2074.17, 2386.74)
[0000][PE] low and high boundaries for proper pairs: (1, 18044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 408.996 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518046, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 376, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (408.57, 267.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 619, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9142)
[0000][PE] mean and std.dev: (1515.09, 1860.80)
[0000][PE] low and high boundaries for proper pairs: (1, 12133)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 1469, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (295, 2865)
[0000][PE] mean and std.dev: (1439.90, 413.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 417.509 CPU sec, 23.420 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517883, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 403, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (647.05, 562.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 649, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (566.67, 539.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1127, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (972.56, 463.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 409.030 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518528, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 340, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (469.81, 412.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 591, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7494)
[0000][PE] mean and std.dev: (1484.20, 1708.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 416.530 CPU sec, 23.386 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517681, 16, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 350, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (333.62, 153.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 220, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (248.46, 270.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1835, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1657.56, 779.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 416.722 CPU sec, 23.451 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518199, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 378, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (784.05, 855.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 425.973 CPU sec, 23.964 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518126, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 408, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (558.16, 481.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 429.270 CPU sec, 24.386 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517863, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 352, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1469)
[0000][PE] mean and std.dev: (313.67, 195.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 1204, 3066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8416)
[0000][PE] mean and std.dev: (1525.50, 1516.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11091)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 415.557 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518342, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 317, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1052)
[0000][PE] mean and std.dev: (313.72, 202.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 401, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1499)
[0000][PE] mean and std.dev: (175.12, 210.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1998)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1512, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (1206.40, 444.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 428.001 CPU sec, 24.133 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518307, 15, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 492, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (605.92, 565.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 639, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (1654.67, 1907.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1506, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1496.82, 1172.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 421.973 CPU sec, 23.981 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518164, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 344, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1202)
[0000][PE] mean and std.dev: (330.95, 220.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 374, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (431.56, 667.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1291, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (1437.00, 857.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 428.257 CPU sec, 24.125 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517767, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 430, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2004)
[0000][PE] mean and std.dev: (444.18, 302.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 529, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (548.27, 640.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1416, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5788)
[0000][PE] mean and std.dev: (1737.62, 1204.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 425.536 CPU sec, 23.892 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517836, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 261, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 842)
[0000][PE] mean and std.dev: (263.78, 122.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.70, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 713, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2789)
[0000][PE] mean and std.dev: (490.42, 520.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3718)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 416.608 CPU sec, 23.441 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518065, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 329, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1494)
[0000][PE] mean and std.dev: (432.91, 373.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 427.449 CPU sec, 24.175 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517842, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 362, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2516)
[0000][PE] mean and std.dev: (558.67, 484.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 426.124 CPU sec, 23.983 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518363, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 339, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1020)
[0000][PE] mean and std.dev: (347.13, 193.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 507, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (1476.36, 1622.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8607)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 425.084 CPU sec, 23.864 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518124, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 296, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (492.22, 458.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 441, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (293.90, 279.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3299)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 422.148 CPU sec, 23.764 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517496, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 377, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (629.00, 548.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (354, 1389, 4852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13848)
[0000][PE] mean and std.dev: (2344.25, 2654.92)
[0000][PE] low and high boundaries for proper pairs: (1, 18346)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 432.530 CPU sec, 24.449 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518425, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 246, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (879.96, 1040.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (59, 566, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9710)
[0000][PE] mean and std.dev: (1752.36, 2385.24)
[0000][PE] low and high boundaries for proper pairs: (1, 12927)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1275, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1353.45, 556.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 422.114 CPU sec, 23.722 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517994, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 381, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (525.15, 397.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (278, 713, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1454.31, 1569.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 426.931 CPU sec, 24.005 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517960, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 405, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (595.14, 471.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.38, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 961, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1494.40, 1900.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9877)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 431.648 CPU sec, 24.374 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518365, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 305, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (655.32, 727.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (185, 413, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (432.18, 492.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 979, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1376.43, 1150.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 424.344 CPU sec, 23.858 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518222, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 245, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (234.62, 103.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.16, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 428.446 CPU sec, 24.167 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518052, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 312, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 618)
[0000][PE] mean and std.dev: (253.89, 97.07)
[0000][PE] low and high boundaries for proper pairs: (1, 755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 1213, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (816.90, 907.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1324, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1308.13, 849.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 413.421 CPU sec, 23.233 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517967, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 284, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 835)
[0000][PE] mean and std.dev: (252.71, 104.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1311, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1369.45, 864.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 397.571 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518357, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 298, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (783.47, 814.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (389, 629, 3821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10685)
[0000][PE] mean and std.dev: (1712.83, 2196.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14117)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 401.596 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518183, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 367, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (533.87, 436.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 298, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (306.30, 291.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3186)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 392.560 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517865, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 312, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (500.70, 556.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 698, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (503.25, 551.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 405.295 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517763, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 282, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1435)
[0000][PE] mean and std.dev: (282.33, 149.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 253, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (319.27, 395.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 395.527 CPU sec, 22.316 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517711, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 359, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (378.26, 185.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.88, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 339, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (311.78, 515.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1865, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1749.30, 944.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 399.346 CPU sec, 22.428 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517970, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 376, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (664.65, 546.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1459, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (1405.60, 702.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 397.992 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517767, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 586, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (786.68, 780.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 1491, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1378.92, 1130.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 402.985 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518301, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 392, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (613.07, 543.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1462, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1648.80, 973.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 399.487 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517810, 15, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 273, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 729)
[0000][PE] mean and std.dev: (284.11, 117.25)
[0000][PE] low and high boundaries for proper pairs: (1, 900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 246, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (231.92, 314.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1110, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (1148.50, 409.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 403.392 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518376, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 299, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1728)
[0000][PE] mean and std.dev: (419.42, 356.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1158, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (1453.55, 896.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 395.117 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518307, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 315, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (438.39, 370.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 570, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1365.27, 1554.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 401.149 CPU sec, 22.508 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518032, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 392, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (416.55, 201.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 397.764 CPU sec, 22.314 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517438, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 338, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (644.25, 689.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 997, 3342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9952)
[0000][PE] mean and std.dev: (1411.50, 1648.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13257)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 404.633 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518326, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 449, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (869.40, 970.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (375, 484, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6789)
[0000][PE] mean and std.dev: (947.21, 1180.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8927)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 398.420 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517892, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 281, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (288.89, 157.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (447, 865, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7242)
[0000][PE] mean and std.dev: (1544.62, 1412.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9507)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1551, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1498.75, 740.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 404.020 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517842, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 400, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (758.22, 767.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 392.544 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517856, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 390, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (643.44, 641.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.13, 119.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 818, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (796.93, 874.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1198, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1229.33, 569.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 400.532 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518199, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 365, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2220)
[0000][PE] mean and std.dev: (466.05, 340.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (202, 386, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (600.21, 615.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 1054, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1029.20, 867.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 394.362 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518363, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 294, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1706)
[0000][PE] mean and std.dev: (324.22, 225.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 209, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (639.00, 968.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 400.050 CPU sec, 22.458 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517993, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 278, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 866)
[0000][PE] mean and std.dev: (296.41, 199.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1337, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (1227.56, 430.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 398.317 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517818, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 296, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (540.11, 577.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 381, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1507)
[0000][PE] mean and std.dev: (212.91, 210.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2008)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 1028, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (931.00, 565.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 403.840 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518127, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 364, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (682.85, 679.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (540, 964, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (967.00, 749.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 395.720 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518241, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 235, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (457.60, 457.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 1207, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1005.64, 1125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8599)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 400.786 CPU sec, 22.555 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518013, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 303, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (902.35, 1218.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1853, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6193)
[0000][PE] mean and std.dev: (2154.64, 1391.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 412.049 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517974, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 365, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (547.76, 515.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 1323, 4800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13980)
[0000][PE] mean and std.dev: (2226.80, 2293.53)
[0000][PE] low and high boundaries for proper pairs: (1, 18570)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 401.495 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518179, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 402, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1004.57, 1150.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 654, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1889)
[0000][PE] mean and std.dev: (477.56, 271.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 403.387 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517935, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 329, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (798.32, 916.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (258, 677, 4040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11604)
[0000][PE] mean and std.dev: (1571.92, 1882.54)
[0000][PE] low and high boundaries for proper pairs: (1, 15386)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 402.862 CPU sec, 22.718 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518721, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 306, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (358.90, 272.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 656, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (724.21, 614.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 395.016 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517666, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 343, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1881)
[0000][PE] mean and std.dev: (358.08, 305.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 941, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9163)
[0000][PE] mean and std.dev: (1403.38, 1337.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12205)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 405.738 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518157, 19, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 307, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (241.17, 102.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (498, 1020, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6123)
[0000][PE] mean and std.dev: (1168.00, 1196.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7998)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1060, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1150.62, 643.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 409.686 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518074, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 318, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (322.76, 211.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 796, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (1241.45, 1263.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8184)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1823, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1577.20, 716.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 397.516 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518469, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 351, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (617.08, 634.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1682, 5915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16371)
[0000][PE] mean and std.dev: (2891.36, 2625.49)
[0000][PE] low and high boundaries for proper pairs: (1, 21599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 399.182 CPU sec, 22.521 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518123, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 660, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (689.82, 539.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.56, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1603, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1550.64, 711.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 401.375 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518388, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 280, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1128)
[0000][PE] mean and std.dev: (327.36, 192.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 334, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (553.00, 650.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 402.451 CPU sec, 22.654 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518231, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 331, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (857.71, 1129.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.54, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (343, 360, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1249.73, 1400.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7591)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 401.041 CPU sec, 22.598 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517866, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 447, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (711.65, 712.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 707, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (897.90, 963.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1590, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1783.00, 723.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 407.339 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517652, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 310, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (633.24, 638.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 404.643 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517983, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 351, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1957)
[0000][PE] mean and std.dev: (428.41, 358.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 567, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (788.80, 885.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 402.358 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518277, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 351, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (374.72, 168.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 403.761 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518279, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 381, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (445.40, 458.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1293, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (1036.77, 596.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 398.061 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517251, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 320, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (450.78, 320.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 800, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6869)
[0000][PE] mean and std.dev: (1209.33, 1347.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9042)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 400.702 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517984, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 402, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (546.29, 408.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.60, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 601, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1086.85, 1308.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1201, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (388, 2313)
[0000][PE] mean and std.dev: (1270.78, 466.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 399.582 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518048, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 309, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (616.76, 568.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 621, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6391)
[0000][PE] mean and std.dev: (1612.30, 2274.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1427, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1634.73, 900.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.746 CPU sec, 22.490 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518068, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 351, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1923)
[0000][PE] mean and std.dev: (429.05, 359.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1772, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7180)
[0000][PE] mean and std.dev: (1804.93, 1248.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 397.426 CPU sec, 22.314 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518030, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 469, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (681.80, 744.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.66, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 1342, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6273)
[0000][PE] mean and std.dev: (1259.79, 1267.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8327)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1000, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6638)
[0000][PE] mean and std.dev: (1626.64, 1205.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 401.200 CPU sec, 22.587 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517709, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 492, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (680.79, 629.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 874, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (1197.91, 1664.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 2130, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6555)
[0000][PE] mean and std.dev: (1791.20, 948.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 399.380 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518105, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 319, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 704)
[0000][PE] mean and std.dev: (278.35, 75.11)
[0000][PE] low and high boundaries for proper pairs: (1, 867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (340, 851, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8362)
[0000][PE] mean and std.dev: (1524.08, 1653.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11036)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 398.119 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518187, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 359, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (912.88, 893.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 399.745 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518298, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 285, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1365)
[0000][PE] mean and std.dev: (291.92, 176.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 617, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (744.42, 1048.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 393.890 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517954, 17, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 317, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (639.08, 711.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.07, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 745, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1072.00, 1245.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 401.823 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517975, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 348, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (406.87, 255.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 789, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8107)
[0000][PE] mean and std.dev: (1246.00, 1580.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10803)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 397.344 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518278, 21, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 347, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1796)
[0000][PE] mean and std.dev: (415.17, 300.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 1274, 3993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11153)
[0000][PE] mean and std.dev: (2151.10, 2411.08)
[0000][PE] low and high boundaries for proper pairs: (1, 14733)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1576, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1835.62, 1378.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 400.752 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517807, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 505, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (938.10, 947.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 721, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9051)
[0000][PE] mean and std.dev: (2377.29, 2874.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13873)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1376, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6099)
[0000][PE] mean and std.dev: (1549.08, 1144.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 403.681 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517995, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 282, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 801)
[0000][PE] mean and std.dev: (268.67, 152.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (174, 645, 4380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12792)
[0000][PE] mean and std.dev: (2060.44, 2265.33)
[0000][PE] low and high boundaries for proper pairs: (1, 16998)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1408, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1431.82, 698.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 405.810 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517549, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 301, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1988)
[0000][PE] mean and std.dev: (520.24, 496.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (521, 1171, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1383.25, 1392.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8169)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 400.106 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517920, 17, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 343, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (707.12, 907.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (540, 973, 4682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12966)
[0000][PE] mean and std.dev: (2451.53, 2702.14)
[0000][PE] low and high boundaries for proper pairs: (1, 17108)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 407.415 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517688, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 202, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1267)
[0000][PE] mean and std.dev: (219.55, 105.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (663, 925, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1291.40, 923.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 399.286 CPU sec, 22.377 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518418, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 461, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (741.05, 633.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 693, 4624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13866)
[0000][PE] mean and std.dev: (1872.19, 2196.01)
[0000][PE] low and high boundaries for proper pairs: (1, 18487)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1959, 2740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6302)
[0000][PE] mean and std.dev: (1696.67, 809.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 401.409 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517885, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 382, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (575.36, 561.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 412, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (789.30, 849.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7554)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 990, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (986.18, 568.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 399.460 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518252, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 368, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (591.65, 594.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 874, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10758)
[0000][PE] mean and std.dev: (1572.15, 1628.40)
[0000][PE] low and high boundaries for proper pairs: (1, 14264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1382, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1336.86, 765.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 402.128 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518217, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 332, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (316.67, 134.67)
[0000][PE] low and high boundaries for proper pairs: (1, 910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 391, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1118.82, 1428.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 403.353 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518024, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 358, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (643.70, 588.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 215, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (236.69, 242.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1779)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 400.047 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517752, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 398, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (877.79, 996.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (310, 732, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (581.92, 447.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1593, 2334, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1791.45, 792.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 397.537 CPU sec, 22.286 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517781, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 382, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (551.91, 493.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 1551, 4094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12200)
[0000][PE] mean and std.dev: (2088.56, 2414.71)
[0000][PE] low and high boundaries for proper pairs: (1, 16253)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 400.786 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518162, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 421, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6329)
[0000][PE] mean and std.dev: (1153.10, 1180.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 377, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2134)
[0000][PE] mean and std.dev: (296.56, 304.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2845)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 411.844 CPU sec, 23.377 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517847, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 434, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (565.44, 447.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (482, 1357, 4874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13658)
[0000][PE] mean and std.dev: (2099.50, 1991.59)
[0000][PE] low and high boundaries for proper pairs: (1, 18050)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1484, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5803)
[0000][PE] mean and std.dev: (1613.30, 1326.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 402.181 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518264, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 363, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1316)
[0000][PE] mean and std.dev: (352.31, 299.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 322, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (255.22, 309.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 398.537 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517796, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 357, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (650.52, 607.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 400.545 CPU sec, 22.469 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518140, 22, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 349, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (675.80, 717.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 557, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (867.11, 1279.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6711)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 914, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (1006.08, 500.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 396.688 CPU sec, 22.319 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517683, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 371, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (49, 689)
[0000][PE] mean and std.dev: (349.53, 96.67)
[0000][PE] low and high boundaries for proper pairs: (1, 817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (491, 1765, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5711)
[0000][PE] mean and std.dev: (1293.92, 1077.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7451)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 400.309 CPU sec, 22.466 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517823, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 320, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (767.00, 820.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (161, 298, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (536.00, 632.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3585)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 403.973 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518103, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 351, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (347.89, 218.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 401.242 CPU sec, 22.523 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518437, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 251, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (279.82, 173.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (235, 605, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (933.00, 1018.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 403.785 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517722, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 266, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1954)
[0000][PE] mean and std.dev: (376.95, 363.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 397.915 CPU sec, 22.303 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517707, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 423, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (421.48, 346.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (411, 1473, 4165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11673)
[0000][PE] mean and std.dev: (2280.36, 2300.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15427)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 403.582 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517977, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 294, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 993)
[0000][PE] mean and std.dev: (269.31, 147.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 402.683 CPU sec, 22.681 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518562, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 379, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2509)
[0000][PE] mean and std.dev: (629.62, 688.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.47, 119.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1236, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1508.25, 1061.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 400.349 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518417, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 274, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (255.20, 101.04)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 403.358 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518154, 17, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 312, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (670.42, 810.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 776, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5991)
[0000][PE] mean and std.dev: (1441.00, 1585.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7864)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 401.398 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517991, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 848, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (949.50, 831.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 876, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (836.22, 900.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7550)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 401.774 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517858, 16, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 426, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (464.07, 380.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 521, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (372.38, 399.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 407.815 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518445, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 373, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1764)
[0000][PE] mean and std.dev: (428.82, 333.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 140, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1186.36, 1838.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8540)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1708, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6810)
[0000][PE] mean and std.dev: (1752.25, 1246.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 398.734 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517845, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 345, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (556.47, 414.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (131, 441, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1976)
[0000][PE] mean and std.dev: (340.67, 279.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2591)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1149, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1227.85, 803.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 403.277 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517411, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 317, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (582.38, 611.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 2165, 4120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10566)
[0000][PE] mean and std.dev: (2741.94, 2288.15)
[0000][PE] low and high boundaries for proper pairs: (1, 13789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 401.010 CPU sec, 22.482 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517743, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 370, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (886.57, 1103.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 168, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (339.73, 390.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1890, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1833.60, 984.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 402.592 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518256, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 374, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1437)
[0000][PE] mean and std.dev: (364.65, 260.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 399.533 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518098, 21, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 365, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1458)
[0000][PE] mean and std.dev: (398.25, 252.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 692, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9368)
[0000][PE] mean and std.dev: (1673.67, 2163.03)
[0000][PE] low and high boundaries for proper pairs: (1, 12472)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 405.996 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518069, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 633, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (817.67, 750.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (81, 544, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (839.20, 871.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5841)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1912, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (2017.45, 1238.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 404.051 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518398, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 359, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1465)
[0000][PE] mean and std.dev: (498.27, 403.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 402.172 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518212, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 354, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (811.05, 1113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 34, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (492.25, 779.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 405.019 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517843, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 347, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (468.17, 321.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 400.510 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517651, 14, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 277, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (328.50, 202.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (595, 1730, 4764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13102)
[0000][PE] mean and std.dev: (2740.71, 2445.53)
[0000][PE] low and high boundaries for proper pairs: (1, 17271)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 2063, 3754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9454)
[0000][PE] mean and std.dev: (2332.62, 1781.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 403.125 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518588, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 274, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 891)
[0000][PE] mean and std.dev: (338.77, 151.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (259, 600, 3919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11239)
[0000][PE] mean and std.dev: (1886.18, 2432.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14899)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 401.643 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517782, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 356, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (544.89, 571.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1460, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1780.55, 1213.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 408.778 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517543, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 295, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 933)
[0000][PE] mean and std.dev: (246.41, 112.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 178, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (305.11, 371.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3351)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 401.600 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517707, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 341, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (472.35, 460.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 1251, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1154.44, 1097.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 402.183 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518123, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 402, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1022)
[0000][PE] mean and std.dev: (326.64, 147.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 517, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (582.64, 967.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6318)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 1535, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6085)
[0000][PE] mean and std.dev: (1327.33, 824.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 398.397 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518448, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 772, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (634.92, 417.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 430, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1933)
[0000][PE] mean and std.dev: (255.18, 229.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2577)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 401.055 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517720, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 302, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 588)
[0000][PE] mean and std.dev: (275.20, 81.90)
[0000][PE] low and high boundaries for proper pairs: (1, 704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 237, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (713.43, 1055.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1463, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1827.73, 1206.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 402.124 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517907, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 451, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (693.88, 697.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 277, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (231.56, 178.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1604, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6442)
[0000][PE] mean and std.dev: (1702.94, 1080.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 400.593 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517918, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 317, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 982)
[0000][PE] mean and std.dev: (269.76, 118.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 116, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (215.11, 326.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3149)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1400, 3398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8362)
[0000][PE] mean and std.dev: (2011.70, 1932.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 406.355 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518576, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 313, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (36, 656)
[0000][PE] mean and std.dev: (301.22, 107.46)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.16, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1432, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1510.10, 912.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 397.392 CPU sec, 22.347 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517768, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 434, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (932.56, 925.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 656, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (667.90, 688.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1566, 2274, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (2169.30, 943.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 399.616 CPU sec, 22.379 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518046, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 375, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (765.00, 713.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 192, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (232.00, 336.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1104, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1449.73, 908.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 401.882 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517941, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 329, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (655.35, 700.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 1171, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9921)
[0000][PE] mean and std.dev: (1876.40, 1835.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13070)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 404.287 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517974, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 565, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (503.33, 181.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.82, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (226, 299, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (491.08, 577.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1386, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1369.00, 910.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 401.988 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517892, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 333, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1101)
[0000][PE] mean and std.dev: (277.14, 137.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 399.331 CPU sec, 22.379 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518203, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 317, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (604.94, 626.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 1347, 4796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14294)
[0000][PE] mean and std.dev: (2188.58, 2365.77)
[0000][PE] low and high boundaries for proper pairs: (1, 19043)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 397.035 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518501, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 331, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1019)
[0000][PE] mean and std.dev: (330.28, 171.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 408.015 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517934, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 327, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (286.21, 128.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 250, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (445.12, 488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 403.938 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518073, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 330, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 778)
[0000][PE] mean and std.dev: (330.54, 135.70)
[0000][PE] low and high boundaries for proper pairs: (1, 950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 53, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (406.33, 638.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 1493, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1537.00, 688.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 398.144 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518191, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 294, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (454.65, 393.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 399.011 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518002, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 315, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 796)
[0000][PE] mean and std.dev: (279.28, 97.41)
[0000][PE] low and high boundaries for proper pairs: (1, 983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 194, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (446.54, 594.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1447, 4025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9425)
[0000][PE] mean and std.dev: (2589.27, 2074.10)
[0000][PE] low and high boundaries for proper pairs: (1, 12125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 396.343 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518250, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 322, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (577.68, 673.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 431, 4437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13027)
[0000][PE] mean and std.dev: (1872.82, 2708.69)
[0000][PE] low and high boundaries for proper pairs: (1, 17322)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 401.750 CPU sec, 22.598 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518230, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 293, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (576.91, 559.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 131, 4562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13658)
[0000][PE] mean and std.dev: (1874.82, 2842.28)
[0000][PE] low and high boundaries for proper pairs: (1, 18206)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1405, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1353.93, 679.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 401.866 CPU sec, 22.553 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517517, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 361, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2112)
[0000][PE] mean and std.dev: (466.21, 369.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 525, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (391.92, 339.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2647)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 405.126 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517799, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 457, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6567)
[0000][PE] mean and std.dev: (1454.47, 1785.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 426, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9374)
[0000][PE] mean and std.dev: (1654.00, 1912.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12432)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 398.044 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517646, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 363, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (368.88, 165.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 591, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7383)
[0000][PE] mean and std.dev: (1418.15, 1987.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9739)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 401.156 CPU sec, 22.544 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518344, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 325, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (271.52, 125.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 398.384 CPU sec, 22.408 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518194, 17, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 343, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (287.11, 210.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 382, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (347.20, 285.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 402.976 CPU sec, 22.645 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517734, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 267, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (367.78, 358.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (185, 273, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1364)
[0000][PE] mean and std.dev: (241.78, 209.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1757)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 401.110 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517362, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 397, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (801.61, 848.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 400.366 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518244, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 359, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (470.06, 372.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 294, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (314.67, 415.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 395.044 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518199, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 391, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (517.87, 464.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (443, 646, 3336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9122)
[0000][PE] mean and std.dev: (1469.64, 1736.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12015)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 400.714 CPU sec, 22.492 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518087, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 328, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (660.24, 664.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 1691, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6529)
[0000][PE] mean and std.dev: (1466.57, 1334.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1254, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (1198.46, 493.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 398.429 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518309, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 360, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (1179.32, 1374.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (180, 964, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1171.78, 1209.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 404.813 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518255, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 734, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7911)
[0000][PE] mean and std.dev: (1332.59, 1263.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 292, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (268.40, 282.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1611)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1034, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1081.17, 565.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 398.448 CPU sec, 22.356 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517721, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 341, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (877.59, 955.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1300, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1133.33, 627.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 401.203 CPU sec, 22.553 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517909, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 398, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (714.17, 737.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1505, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1115.62, 736.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 399.334 CPU sec, 22.490 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518351, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 365, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (484.71, 355.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 404, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (542.00, 700.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3345)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 399.616 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517947, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 622, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (853.62, 701.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 393, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (264.08, 263.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1359, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (1173.67, 581.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 401.367 CPU sec, 22.542 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517722, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 463, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (680.20, 636.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1338, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1339.91, 554.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 401.942 CPU sec, 22.565 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517759, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 405, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (744.59, 690.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 490, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (773.55, 929.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1265, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1453.45, 892.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 401.428 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518479, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 286, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (298.33, 160.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1820, 5235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14167)
[0000][PE] mean and std.dev: (2522.80, 2307.14)
[0000][PE] low and high boundaries for proper pairs: (1, 18633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 401.996 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518130, 17, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 337, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (417.19, 359.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 660, 3956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11654)
[0000][PE] mean and std.dev: (1794.06, 2173.33)
[0000][PE] low and high boundaries for proper pairs: (1, 15503)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 398.978 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517800, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 373, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (332.55, 137.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 136, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (813.55, 1069.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8579)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 405.604 CPU sec, 22.859 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518120, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 343, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (597.09, 631.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (798, 1982, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6075)
[0000][PE] mean and std.dev: (1653.75, 1255.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7834)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1475, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (1386.00, 930.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 396.085 CPU sec, 22.418 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000280 bp)...
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517845, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 294, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (750.87, 835.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.56, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 666, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7458)
[0000][PE] mean and std.dev: (1617.10, 2046.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9940)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1501, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (1624.70, 1291.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 394.096 CPU sec, 22.235 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517843, 12, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 251, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (251.36, 139.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 592, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (552.27, 608.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3240)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 398.783 CPU sec, 22.422 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517656, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 396, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (592.64, 673.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 713, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1190.73, 1351.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7713)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 402.173 CPU sec, 22.595 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517934, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 389, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (669.64, 639.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1382, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1530.38, 939.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 397.745 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518316, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 318, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1275)
[0000][PE] mean and std.dev: (389.73, 247.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 72, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (204.09, 263.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 401.162 CPU sec, 22.551 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517606, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 329, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (741.76, 810.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 532, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8753)
[0000][PE] mean and std.dev: (1762.13, 2502.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11773)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 401.110 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518014, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 464, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2305)
[0000][PE] mean and std.dev: (639.47, 499.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 777, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6023)
[0000][PE] mean and std.dev: (1084.17, 1156.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7940)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 395.761 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518125, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 337, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (356.16, 250.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 384, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1757)
[0000][PE] mean and std.dev: (259.44, 240.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2337)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 402.372 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518099, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 348, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2174)
[0000][PE] mean and std.dev: (413.18, 421.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 270, 3320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9866)
[0000][PE] mean and std.dev: (1599.50, 2652.94)
[0000][PE] low and high boundaries for proper pairs: (1, 13139)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 400.958 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518211, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 327, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2006)
[0000][PE] mean and std.dev: (459.30, 405.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 220, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (265.42, 397.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 401.004 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517796, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 366, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (791.74, 894.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 620, 4567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13413)
[0000][PE] mean and std.dev: (1720.18, 2158.93)
[0000][PE] low and high boundaries for proper pairs: (1, 17836)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 1200, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1042.58, 752.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 399.008 CPU sec, 22.404 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517939, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 384, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (814.46, 798.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 1308, 5033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14733)
[0000][PE] mean and std.dev: (2189.47, 2663.00)
[0000][PE] low and high boundaries for proper pairs: (1, 19583)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1309, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (200, 2540)
[0000][PE] mean and std.dev: (1183.80, 435.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 404.175 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517841, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 430, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (630.24, 499.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.79, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 372, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (521.78, 570.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 402.862 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518299, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 509, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (593.86, 413.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 684, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (812.47, 745.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5623)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 405.516 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518111, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 309, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1803)
[0000][PE] mean and std.dev: (403.43, 332.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 532, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (967.00, 1192.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 401.213 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518331, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 304, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (448.41, 387.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (534, 2651, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8004)
[0000][PE] mean and std.dev: (1912.70, 1439.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10494)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1583, 2909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1983.30, 959.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 403.120 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518622, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 346, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (477.00, 390.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1627, 3170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7410)
[0000][PE] mean and std.dev: (1934.58, 1334.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 397.514 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517865, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 333, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1829)
[0000][PE] mean and std.dev: (367.50, 275.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.63, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 1828, 4027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11447)
[0000][PE] mean and std.dev: (2206.33, 2050.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15157)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 399.927 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518765, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 369, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (532.71, 440.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.904 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518274, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 353, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1566)
[0000][PE] mean and std.dev: (325.42, 219.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 56, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5075)
[0000][PE] mean and std.dev: (535.77, 763.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6763)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1108, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (1165.00, 535.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 403.326 CPU sec, 22.707 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517823, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 459, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (533.67, 389.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 361, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7651)
[0000][PE] mean and std.dev: (1226.76, 1903.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10199)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1408, 1599, 2808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5608)
[0000][PE] mean and std.dev: (2063.00, 1360.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 398.722 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517751, 16, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 359, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (370.13, 232.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.27, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 566, 4739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13859)
[0000][PE] mean and std.dev: (2121.19, 2793.17)
[0000][PE] low and high boundaries for proper pairs: (1, 18419)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 400.808 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517863, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 267, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 749)
[0000][PE] mean and std.dev: (276.21, 144.55)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.55, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 402.761 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518258, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 282, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (462.19, 465.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 403.084 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517729, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 338, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (698.78, 772.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 40, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (203.30, 327.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 2092, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7780)
[0000][PE] mean and std.dev: (2459.50, 1875.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 399.019 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518497, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 398, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (507.50, 450.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 41, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (716.69, 916.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1623, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6768)
[0000][PE] mean and std.dev: (1202.67, 934.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 405.817 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518025, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 485, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (943.00, 1008.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1621, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6320)
[0000][PE] mean and std.dev: (2144.80, 1589.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 399.644 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518075, 13, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 306, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2502)
[0000][PE] mean and std.dev: (459.84, 503.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 318, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (611.83, 926.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 404.290 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518079, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 338, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (490.42, 418.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 563, 4831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13709)
[0000][PE] mean and std.dev: (2067.45, 3004.19)
[0000][PE] low and high boundaries for proper pairs: (1, 18148)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1847, 5494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13964)
[0000][PE] mean and std.dev: (3056.23, 2345.32)
[0000][PE] low and high boundaries for proper pairs: (1, 18199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 402.000 CPU sec, 22.622 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518208, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 291, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (681.44, 754.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 2017, 3912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10054)
[0000][PE] mean and std.dev: (2386.27, 1790.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 401.410 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518191, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 340, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (434.05, 421.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 385, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (519.33, 533.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 403.066 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517477, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 326, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (525.50, 445.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 583, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (382.25, 373.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3118)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 2066, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1993.30, 1075.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 406.162 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517629, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 323, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2240)
[0000][PE] mean and std.dev: (490.40, 458.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.38, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 518, 3190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9564)
[0000][PE] mean and std.dev: (1574.33, 2300.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12751)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1071, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (983.80, 353.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 405.603 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517730, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 350, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (456.95, 443.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 508, 3486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9656)
[0000][PE] mean and std.dev: (1289.46, 1474.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12741)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 399.590 CPU sec, 22.512 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517766, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 291, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (770.89, 822.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (477, 1655, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8532)
[0000][PE] mean and std.dev: (1830.50, 1867.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1293, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1271.90, 857.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 401.148 CPU sec, 22.542 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518102, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 305, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2070)
[0000][PE] mean and std.dev: (372.15, 346.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.51, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 405.648 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518121, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 339, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 604)
[0000][PE] mean and std.dev: (297.75, 77.76)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1363, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1371.08, 763.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 403.323 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518325, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 325, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (573.47, 463.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.59, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 402.929 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518407, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 297, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (406.67, 375.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 549, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1026.77, 1300.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 398.973 CPU sec, 22.431 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517710, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 298, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (549.10, 601.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 808, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1033.18, 1152.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 403.179 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517933, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 395, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1174.38, 1287.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (627, 1004, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (906.91, 717.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1393, 4513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11487)
[0000][PE] mean and std.dev: (2135.18, 1634.97)
[0000][PE] low and high boundaries for proper pairs: (1, 14974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 401.865 CPU sec, 22.555 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518086, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 799, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1006.86, 1007.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (792, 1715, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6642)
[0000][PE] mean and std.dev: (1543.33, 1140.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1139, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (1375.64, 948.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 408.123 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517823, 15, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 789, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (787.47, 646.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (466, 561, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1130.93, 1222.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1591, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (2025.86, 1625.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 405.931 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518092, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 286, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 561)
[0000][PE] mean and std.dev: (261.05, 109.29)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (865, 1500, 4158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10744)
[0000][PE] mean and std.dev: (2390.00, 2222.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14037)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 400.829 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517869, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 828, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (885.71, 662.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1020, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1584.50, 1256.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 401.103 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518187, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 289, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1283)
[0000][PE] mean and std.dev: (280.39, 152.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 119.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 612, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1304.61, 1415.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1576, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1494.80, 909.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 403.176 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518204, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 525, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (759.95, 758.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 364, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (585.60, 796.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 405.344 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517691, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 339, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (702.00, 664.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1832, 3447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8405)
[0000][PE] mean and std.dev: (2053.83, 1688.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 407.843 CPU sec, 23.073 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518241, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 236, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 656)
[0000][PE] mean and std.dev: (238.58, 53.55)
[0000][PE] low and high boundaries for proper pairs: (1, 807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.29, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 2176, 4067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12161)
[0000][PE] mean and std.dev: (2266.40, 2552.05)
[0000][PE] low and high boundaries for proper pairs: (1, 16208)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 405.133 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518299, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 339, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 957)
[0000][PE] mean and std.dev: (325.92, 115.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 1037, 2801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7995)
[0000][PE] mean and std.dev: (1305.38, 1177.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1289, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1467.85, 896.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 405.542 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 517891, 16, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 403, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6900)
[0000][PE] mean and std.dev: (754.53, 1087.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9198)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 400.734 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517629, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 326, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (472.96, 491.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 738, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7334)
[0000][PE] mean and std.dev: (1233.42, 1222.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9653)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 397.771 CPU sec, 22.309 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517966, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 352, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (598.48, 547.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 205, 3991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11967)
[0000][PE] mean and std.dev: (1725.17, 2349.25)
[0000][PE] low and high boundaries for proper pairs: (1, 15955)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 398.616 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517931, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 338, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 794)
[0000][PE] mean and std.dev: (283.10, 102.91)
[0000][PE] low and high boundaries for proper pairs: (1, 977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (46, 381, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (322.25, 399.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 406.012 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517700, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 522, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (731.23, 535.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 881)
[0000][PE] mean and std.dev: (490.40, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 651, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (595.86, 514.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 397.428 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517818, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 340, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 982)
[0000][PE] mean and std.dev: (316.50, 146.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1129, 3279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8223)
[0000][PE] mean and std.dev: (1953.25, 1938.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 402.304 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518506, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 398, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (785.18, 834.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (420, 519, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1227)
[0000][PE] mean and std.dev: (441.62, 192.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1496)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 399.744 CPU sec, 22.497 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518144, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 300, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (571.62, 575.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 753, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1177.69, 1315.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1391, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1172.60, 529.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 404.542 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518175, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 236, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (239.00, 134.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 21, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (313.69, 392.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1559, 1817, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (469, 3194)
[0000][PE] mean and std.dev: (1888.38, 297.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 405.490 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518701, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 320, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 856)
[0000][PE] mean and std.dev: (308.57, 122.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (274, 506, 5104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14764)
[0000][PE] mean and std.dev: (2155.93, 2884.89)
[0000][PE] low and high boundaries for proper pairs: (1, 19594)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1052, 3348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8426)
[0000][PE] mean and std.dev: (2285.00, 2358.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 399.516 CPU sec, 22.428 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518076, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 298, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1209)
[0000][PE] mean and std.dev: (358.65, 215.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.71, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 594, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (549.70, 547.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 402.102 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518313, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 361, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (298.73, 154.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 516, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6218)
[0000][PE] mean and std.dev: (1174.00, 1559.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 401.928 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518108, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 340, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2389)
[0000][PE] mean and std.dev: (344.25, 217.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1134, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (1301.10, 671.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 396.246 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518167, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 308, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (317.14, 244.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 272, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (390.64, 523.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6666)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 404.134 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517808, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 326, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (760.87, 822.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 315, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2280)
[0000][PE] mean and std.dev: (407.89, 644.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1400, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1599.31, 1146.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 400.009 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518246, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 276, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 864)
[0000][PE] mean and std.dev: (279.29, 165.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1424, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1451.92, 966.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 402.160 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517760, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 337, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (279.30, 113.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 1055, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1294.30, 1031.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 402.157 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518404, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 251, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 722)
[0000][PE] mean and std.dev: (247.33, 97.48)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 216, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (521.93, 860.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 399.508 CPU sec, 22.483 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518232, 18, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (452, 1191, 3901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10799)
[0000][PE] mean and std.dev: (1725.61, 1570.59)
[0000][PE] low and high boundaries for proper pairs: (1, 14248)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 399.106 CPU sec, 22.420 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517994, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 365, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (335.78, 146.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.28, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 59, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (147.54, 231.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 405.232 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518247, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 476, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (773.74, 745.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 492, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (514.36, 661.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1218, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (159, 1974)
[0000][PE] mean and std.dev: (1212.78, 356.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 402.211 CPU sec, 22.622 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518498, 18, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 314, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 911)
[0000][PE] mean and std.dev: (294.15, 205.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 561, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (597.00, 618.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1136, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1416.00, 921.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 408.619 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518375, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 347, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2101)
[0000][PE] mean and std.dev: (481.15, 414.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 398.745 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518032, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 455, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (568.15, 511.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 305, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7611)
[0000][PE] mean and std.dev: (1435.21, 2169.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10146)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 399.162 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517772, 18, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 280, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (448.35, 477.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 345, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7972)
[0000][PE] mean and std.dev: (1325.72, 1892.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10627)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.217 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518261, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 324, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (398.19, 239.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (98, 368, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2501)
[0000][PE] mean and std.dev: (324.88, 277.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3302)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1503, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (1190.50, 379.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 401.744 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518065, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 383, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (863.40, 989.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 660, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (879.09, 1402.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 407.959 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517820, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 287, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (469.23, 435.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1610, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1803.00, 1083.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 399.458 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517812, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 311, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (638.20, 608.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (239, 568, 3352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9578)
[0000][PE] mean and std.dev: (1939.12, 2687.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12691)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 399.263 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517561, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 548, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (970.05, 787.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 401.489 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518144, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 363, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1011.74, 1110.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 458, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1996)
[0000][PE] mean and std.dev: (556.62, 467.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 400.441 CPU sec, 22.560 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517761, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 360, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 905)
[0000][PE] mean and std.dev: (302.50, 108.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (329, 607, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9275)
[0000][PE] mean and std.dev: (2001.91, 2536.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 2415, 4191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9565)
[0000][PE] mean and std.dev: (2541.45, 1826.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 401.998 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518783, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 294, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (312.62, 183.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 343, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (658.65, 940.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 2076, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1942.09, 1136.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 400.405 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518095, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 410, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1035.22, 1039.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (74, 307, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (733.45, 896.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4514)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 402.502 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518102, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 312, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (704.16, 717.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (329, 721, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8291)
[0000][PE] mean and std.dev: (1535.69, 1823.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10945)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1131, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1415.11, 743.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 402.337 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518567, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.94, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 772, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1239.30, 1258.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 397.405 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518198, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 352, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (822.91, 720.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 759, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (756.00, 863.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 399.144 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517945, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 378, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (517.14, 440.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1337, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1201.27, 575.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 397.322 CPU sec, 22.262 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518164, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 458, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (740.00, 568.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (491, 709, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (787.30, 645.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1016, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1050.36, 619.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 407.989 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517608, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 367, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1472)
[0000][PE] mean and std.dev: (403.42, 251.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (547, 1204, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8335)
[0000][PE] mean and std.dev: (2107.27, 2215.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10967)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 1256, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6915)
[0000][PE] mean and std.dev: (1593.70, 1604.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 405.122 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517789, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 313, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (753.45, 878.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 409, 3965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11781)
[0000][PE] mean and std.dev: (1524.46, 2114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 15689)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 403.644 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517993, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 461, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (844.47, 993.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 381, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (658.17, 733.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 2271, 3367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7953)
[0000][PE] mean and std.dev: (2100.00, 1317.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 405.572 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517894, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 514, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (674.78, 452.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 194, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (588.69, 807.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 403.292 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517869, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 343, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (588.00, 490.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 312, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (193.00, 177.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 2048, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1626.40, 935.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 404.112 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517839, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 280, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (420.53, 348.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (835, 1547, 4649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12277)
[0000][PE] mean and std.dev: (2537.30, 2511.00)
[0000][PE] low and high boundaries for proper pairs: (1, 16091)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1277, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1333.83, 881.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 400.759 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518001, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 327, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1706)
[0000][PE] mean and std.dev: (429.64, 373.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.06, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 908, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7729)
[0000][PE] mean and std.dev: (1653.60, 1691.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 401.132 CPU sec, 22.517 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518290, 17, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 263, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (236.85, 90.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 217, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (976.18, 1327.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8054)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1019, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1323.08, 964.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 397.212 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518089, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 365, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (437.17, 320.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 21, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 569)
[0000][PE] mean and std.dev: (47.43, 64.83)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 402.188 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517546, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 412, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (775.23, 821.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 402.452 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518074, 18, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 302, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2481)
[0000][PE] mean and std.dev: (491.35, 485.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.53, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 194, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (637.53, 1065.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 398.561 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517817, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 327, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (513.05, 486.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 246, 4762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14256)
[0000][PE] mean and std.dev: (1494.00, 2412.25)
[0000][PE] low and high boundaries for proper pairs: (1, 19003)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 399.872 CPU sec, 22.422 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518270, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 271, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (540.36, 650.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 691, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (964.69, 920.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 403.556 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517962, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 323, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1617)
[0000][PE] mean and std.dev: (494.96, 408.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (417, 595, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5586)
[0000][PE] mean and std.dev: (1275.36, 1455.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 946, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (853.10, 476.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 408.669 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518359, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 333, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1592)
[0000][PE] mean and std.dev: (392.25, 255.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 402.764 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517750, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 385, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (503.58, 357.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 350, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6184)
[0000][PE] mean and std.dev: (882.58, 1170.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8236)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 397.342 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518327, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 358, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (741.61, 817.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 601, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (1162.33, 1375.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1560, 3451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (1956.38, 1161.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 404.284 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517865, 16, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 342, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (524.69, 475.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 639, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1044.80, 1217.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 400.242 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518034, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 325, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (264.00, 123.74)
[0000][PE] low and high boundaries for proper pairs: (1, 932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.20, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 402.338 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518145, 17, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 354, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (898.72, 924.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 937, 3141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9415)
[0000][PE] mean and std.dev: (1743.53, 1928.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12552)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 407.776 CPU sec, 23.000 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518253, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 382, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1823)
[0000][PE] mean and std.dev: (477.76, 360.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 1165, 3754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11232)
[0000][PE] mean and std.dev: (2135.00, 2350.62)
[0000][PE] low and high boundaries for proper pairs: (1, 14971)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1281, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1442.00, 1012.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 397.379 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517819, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 317, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1941)
[0000][PE] mean and std.dev: (429.91, 391.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 399.986 CPU sec, 22.457 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517736, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 260, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 689)
[0000][PE] mean and std.dev: (252.85, 116.70)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 673, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (734.17, 706.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1414, 2171, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1913.90, 674.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 404.434 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518735, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 335, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1113)
[0000][PE] mean and std.dev: (289.79, 148.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 936, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (957.90, 890.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7539)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 398.605 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518430, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 380, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (801.53, 737.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 566, 5087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15233)
[0000][PE] mean and std.dev: (2349.70, 2842.71)
[0000][PE] low and high boundaries for proper pairs: (1, 20306)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 401.036 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518234, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (90, 207, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (419.27, 536.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 121, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (186.00, 253.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1192, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1468.29, 976.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 405.803 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518149, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 367, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (490.69, 361.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.93, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 579, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4869)
[0000][PE] mean and std.dev: (960.25, 1080.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 401.862 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518110, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 288, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 783)
[0000][PE] mean and std.dev: (269.94, 160.61)
[0000][PE] low and high boundaries for proper pairs: (1, 969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 19, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7261)
[0000][PE] mean and std.dev: (1159.80, 1859.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9681)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 402.163 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518032, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 268, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1059)
[0000][PE] mean and std.dev: (279.82, 130.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 51, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7048)
[0000][PE] mean and std.dev: (418.22, 735.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 401.244 CPU sec, 22.583 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518157, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 379, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (349.52, 210.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 1381, 4846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13536)
[0000][PE] mean and std.dev: (2188.42, 2268.28)
[0000][PE] low and high boundaries for proper pairs: (1, 17881)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (440, 992, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1272.58, 1104.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 405.791 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518093, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 409, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (634.26, 622.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 403.059 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517616, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 373, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (897.61, 862.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 119.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (310, 730, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8308)
[0000][PE] mean and std.dev: (1420.18, 1447.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10974)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 1358, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1022.56, 586.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 401.799 CPU sec, 22.550 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518134, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 319, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (327.05, 142.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (569, 2739, 4108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11186)
[0000][PE] mean and std.dev: (2560.77, 2038.78)
[0000][PE] low and high boundaries for proper pairs: (1, 14725)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1119, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7089)
[0000][PE] mean and std.dev: (1519.69, 998.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 402.272 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517696, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 372, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2022)
[0000][PE] mean and std.dev: (558.62, 475.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 403.095 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518486, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 368, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1461)
[0000][PE] mean and std.dev: (353.11, 289.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 586, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6813)
[0000][PE] mean and std.dev: (1200.64, 1367.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2576, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (2197.82, 1102.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 407.902 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518089, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 382, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (609.85, 618.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1335, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1506.45, 631.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 398.734 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517885, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 339, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6646)
[0000][PE] mean and std.dev: (1210.07, 1579.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (720, 1047, 4262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11346)
[0000][PE] mean and std.dev: (1975.31, 1845.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14888)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1007, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (845.22, 519.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 401.278 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517863, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 342, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (289.25, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 402.080 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518170, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 403, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1143.50, 1508.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 381, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (524.67, 706.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1099, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (1292.77, 455.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 403.505 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518788, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 344, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (663.10, 713.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 2, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (517.91, 816.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 400.276 CPU sec, 22.484 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518075, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 362, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (473.88, 382.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 396.960 CPU sec, 22.288 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518088, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 286, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (452.33, 387.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 760, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (842.20, 913.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8491)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1627, 2223, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7042)
[0000][PE] mean and std.dev: (2257.17, 1179.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 402.265 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517780, 19, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 424, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (644.19, 574.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.41, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 619, 3166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9326)
[0000][PE] mean and std.dev: (1631.95, 1725.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12406)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 406.017 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518152, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 394, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (494.47, 454.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 211, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (412.64, 510.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1540, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5499)
[0000][PE] mean and std.dev: (1750.00, 1054.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 399.348 CPU sec, 22.421 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517856, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 498, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2241)
[0000][PE] mean and std.dev: (520.12, 305.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.36, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 553, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (531.31, 657.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1672, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6938)
[0000][PE] mean and std.dev: (1953.77, 1202.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 397.228 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518310, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 386, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (552.46, 488.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 398.782 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518432, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 360, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (411.29, 333.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 515, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (493.22, 523.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1484, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (1600.60, 921.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 395.206 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517895, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 374, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (403.41, 211.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 440, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (304.50, 314.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1441, 3571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9109)
[0000][PE] mean and std.dev: (2068.69, 1658.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 400.321 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518459, 21, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 317, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (311.14, 204.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 261, 3167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9457)
[0000][PE] mean and std.dev: (1501.14, 2062.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12602)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1269, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (1125.22, 453.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 403.644 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518212, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 365, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (729.76, 726.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.78, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 83, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (683.31, 1111.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1663, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1600.30, 1138.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 398.227 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517926, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 448, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1124.59, 1202.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 791, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (807.25, 944.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 814, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (649.00, 321.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 404.415 CPU sec, 22.717 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518280, 18, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 307, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (408.71, 281.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 844, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1285.39, 1547.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7477)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 403.505 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517767, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 349, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (340.70, 176.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 402.137 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518092, 15, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 351, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1252)
[0000][PE] mean and std.dev: (390.21, 210.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 261, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (704.93, 966.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 396.457 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518295, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 424, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1007.70, 1134.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (560, 1280, 4182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11426)
[0000][PE] mean and std.dev: (1996.31, 1722.30)
[0000][PE] low and high boundaries for proper pairs: (1, 15048)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 400.041 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518053, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 433, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2647)
[0000][PE] mean and std.dev: (684.48, 631.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 501, 4219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12653)
[0000][PE] mean and std.dev: (1486.38, 1906.82)
[0000][PE] low and high boundaries for proper pairs: (1, 16870)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1043, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1520.27, 994.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 395.307 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518546, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 433, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (733.75, 854.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1384, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1437.67, 897.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 399.467 CPU sec, 22.446 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518034, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 328, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1536)
[0000][PE] mean and std.dev: (361.12, 241.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (498, 1035, 3991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10977)
[0000][PE] mean and std.dev: (1638.62, 1760.62)
[0000][PE] low and high boundaries for proper pairs: (1, 14470)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1057, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6913)
[0000][PE] mean and std.dev: (1564.67, 1283.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 397.561 CPU sec, 22.305 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517963, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 355, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1000)
[0000][PE] mean and std.dev: (309.15, 122.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.60, 118.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (68, 1683, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7328)
[0000][PE] mean and std.dev: (1429.21, 1422.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 399.647 CPU sec, 22.454 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517811, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 293, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1406)
[0000][PE] mean and std.dev: (356.03, 284.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (242, 513, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (559.42, 406.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 399.089 CPU sec, 22.483 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517995, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 374, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (400.84, 271.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 407.748 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517966, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 267, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (541.93, 558.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 679, 4842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14354)
[0000][PE] mean and std.dev: (1888.00, 2425.91)
[0000][PE] low and high boundaries for proper pairs: (1, 19110)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 401.825 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518147, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 946, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (677.00, 577.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 571, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6186)
[0000][PE] mean and std.dev: (1114.45, 1428.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8241)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 406.479 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517832, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 334, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1472)
[0000][PE] mean and std.dev: (402.19, 291.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 34, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (163.78, 356.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1256, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1101.50, 474.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 400.317 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518128, 15, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 258, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (262.27, 87.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1488, 4190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11774)
[0000][PE] mean and std.dev: (2411.80, 2429.41)
[0000][PE] low and high boundaries for proper pairs: (1, 15566)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 400.349 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518224, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 400, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2659)
[0000][PE] mean and std.dev: (533.88, 476.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 387, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1012.20, 1025.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9023)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 398.829 CPU sec, 22.396 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518267, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 336, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (535.76, 515.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 885, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1102.40, 1193.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1397, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (1270.56, 563.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 399.881 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518373, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 307, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1588)
[0000][PE] mean and std.dev: (428.67, 311.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 403.481 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517907, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 517, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (864.82, 839.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 402.428 CPU sec, 22.579 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518046, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 412, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (712.62, 657.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 2300, 5652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14840)
[0000][PE] mean and std.dev: (3505.82, 3362.16)
[0000][PE] low and high boundaries for proper pairs: (1, 19434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 402.616 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518167, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 353, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (570.26, 579.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 396.941 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518108, 19, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 428, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (551.05, 392.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (229, 398, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (998.42, 1122.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 399.485 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518306, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 615, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (805.81, 696.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.36, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 423, 3745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11093)
[0000][PE] mean and std.dev: (1746.94, 2281.76)
[0000][PE] low and high boundaries for proper pairs: (1, 14767)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1306, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1103.20, 565.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 398.354 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518000, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 313, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1723)
[0000][PE] mean and std.dev: (431.06, 314.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (199, 347, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2272)
[0000][PE] mean and std.dev: (458.33, 460.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 403.344 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518287, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 328, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (287.00, 109.02)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.35, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 116, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (234.93, 418.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 396.987 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518549, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 373, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (505.07, 437.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (339, 712, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1227.27, 1343.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8879)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 397.073 CPU sec, 22.293 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518102, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 557, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (742.60, 663.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.84, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 389, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (958.94, 1286.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6789)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1914, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (1766.60, 1066.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 405.593 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518668, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 493, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (698.33, 605.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.08, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 231, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1424)
[0000][PE] mean and std.dev: (237.29, 236.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1898)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 404.171 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517879, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 343, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1196)
[0000][PE] mean and std.dev: (353.45, 216.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (646, 1883, 3185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8263)
[0000][PE] mean and std.dev: (1831.08, 1493.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10802)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1431, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (1392.00, 603.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 404.418 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518189, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 323, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (295.31, 173.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.91, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (170, 972, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (760.50, 718.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7134)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 405.895 CPU sec, 22.799 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518199, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 304, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 733)
[0000][PE] mean and std.dev: (276.67, 105.76)
[0000][PE] low and high boundaries for proper pairs: (1, 905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 565, 2990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8308)
[0000][PE] mean and std.dev: (1198.43, 1549.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10967)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 400.017 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518267, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 255, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1203)
[0000][PE] mean and std.dev: (265.95, 237.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 701, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1305.90, 1529.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7426)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 401.574 CPU sec, 22.494 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517844, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 300, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 670)
[0000][PE] mean and std.dev: (327.69, 138.28)
[0000][PE] low and high boundaries for proper pairs: (1, 881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 538, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (398.54, 394.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 401.589 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517845, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 331, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (325.61, 142.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 1355, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7321)
[0000][PE] mean and std.dev: (1185.33, 1200.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9757)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1460, 3544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8694)
[0000][PE] mean and std.dev: (2576.90, 2051.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 406.407 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518531, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 290, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (477.95, 481.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 409, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (447.36, 319.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 2411, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5984)
[0000][PE] mean and std.dev: (1520.00, 947.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 396.894 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517947, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 372, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (575.79, 551.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 461, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8819)
[0000][PE] mean and std.dev: (1341.58, 1753.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11752)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 403.914 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518263, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 331, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2097)
[0000][PE] mean and std.dev: (531.00, 587.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 425, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2133)
[0000][PE] mean and std.dev: (422.36, 478.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 402.715 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517981, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 201, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (220.20, 84.40)
[0000][PE] low and high boundaries for proper pairs: (1, 968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.58, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 399.421 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517578, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 366, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (545.63, 532.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 402.254 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517950, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 375, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (783.39, 839.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 116, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (489.82, 724.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6671)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1282, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4728)
[0000][PE] mean and std.dev: (1093.33, 565.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 408.587 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517838, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 314, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (606.42, 629.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 766, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6580)
[0000][PE] mean and std.dev: (910.25, 891.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8681)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 400.721 CPU sec, 22.570 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518001, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 281, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (570.04, 622.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 397.547 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517930, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 429, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (605.06, 514.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 129, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (679.92, 884.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 406.748 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518042, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 292, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (508.88, 532.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 442, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7146)
[0000][PE] mean and std.dev: (1395.42, 1658.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9472)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 401.477 CPU sec, 22.592 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518420, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 340, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (303.17, 165.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.44, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1208, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8780)
[0000][PE] mean and std.dev: (2227.46, 2120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 401.786 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517888, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1067, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1138.22, 1019.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 436, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (333.62, 302.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 402.034 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518312, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 522, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (526.54, 421.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 585, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (401.11, 455.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1372, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1406.18, 626.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 403.995 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518263, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 535, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1004.74, 875.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 377, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (754.15, 840.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 398.969 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518023, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 321, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (716.40, 720.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 906, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5945)
[0000][PE] mean and std.dev: (949.23, 915.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7911)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1182, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1228.56, 829.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 400.687 CPU sec, 22.431 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518371, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 593, 3877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11265)
[0000][PE] mean and std.dev: (2122.12, 2787.60)
[0000][PE] low and high boundaries for proper pairs: (1, 14959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (882, 1161, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (949.89, 606.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 397.187 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518493, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 371, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1822)
[0000][PE] mean and std.dev: (452.55, 331.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 414, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6591)
[0000][PE] mean and std.dev: (1021.07, 1382.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8777)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 404.250 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517868, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (393, 1752, 3979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11151)
[0000][PE] mean and std.dev: (2641.30, 2488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 14737)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 407.255 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518035, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 727, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (739.95, 632.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (381, 600, 4284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12090)
[0000][PE] mean and std.dev: (2436.45, 3014.31)
[0000][PE] low and high boundaries for proper pairs: (1, 15993)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 397.930 CPU sec, 22.319 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517648, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 245, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 446)
[0000][PE] mean and std.dev: (227.07, 99.09)
[0000][PE] low and high boundaries for proper pairs: (1, 623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 678, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (772.20, 502.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 407.721 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518246, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 332, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 956)
[0000][PE] mean and std.dev: (355.21, 170.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 190, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (502.00, 723.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 401.679 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518129, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 327, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1585)
[0000][PE] mean and std.dev: (423.04, 306.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.52, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 613, 4684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13304)
[0000][PE] mean and std.dev: (2163.27, 2599.05)
[0000][PE] low and high boundaries for proper pairs: (1, 17614)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 403.717 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518711, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 301, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (344.53, 211.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.62, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (506, 774, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (621.73, 415.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3018)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 406.622 CPU sec, 22.963 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518207, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 193, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (518.00, 535.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 195, 3087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9255)
[0000][PE] mean and std.dev: (1018.54, 1421.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12339)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 404.850 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518411, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 314, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (485.83, 499.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 587, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1056.77, 1488.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 402.785 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518156, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 449, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1744)
[0000][PE] mean and std.dev: (457.14, 287.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (44, 1729, 4146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12350)
[0000][PE] mean and std.dev: (1860.33, 1863.23)
[0000][PE] low and high boundaries for proper pairs: (1, 16452)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 398.295 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517810, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 381, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (723.79, 677.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 351, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (481.00, 500.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1205, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (1154.80, 442.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 405.163 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518151, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 301, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 688)
[0000][PE] mean and std.dev: (251.38, 80.06)
[0000][PE] low and high boundaries for proper pairs: (1, 844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.75, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 1285, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (997.80, 517.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 404.037 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518498, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 266, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (413.69, 392.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (67, 466, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (756.18, 746.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6219)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 1175, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1104.38, 636.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 408.557 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517948, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 335, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1647)
[0000][PE] mean and std.dev: (397.33, 280.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 726, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (1272.21, 1324.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8972)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1164, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1059.70, 875.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 399.406 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518385, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 278, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (270.47, 111.50)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 585, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (502.18, 530.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7222)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 400.317 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518719, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 449, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2089)
[0000][PE] mean and std.dev: (591.82, 393.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1816, 3023, 4883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11017)
[0000][PE] mean and std.dev: (3742.09, 2674.22)
[0000][PE] low and high boundaries for proper pairs: (1, 14439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 400.641 CPU sec, 22.595 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518106, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 293, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (353.64, 309.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 1231, 4229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12181)
[0000][PE] mean and std.dev: (2302.12, 2552.49)
[0000][PE] low and high boundaries for proper pairs: (1, 16157)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 398.677 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517786, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 270, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (295.68, 160.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 612, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8856)
[0000][PE] mean and std.dev: (1520.75, 2054.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11807)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1115, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1007.44, 425.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 399.752 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 2115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517554, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 324, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (483.25, 419.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 638, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (645.19, 676.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 405.525 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 2116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518113, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 480, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1232.21, 1362.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1394, 2486, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1913.91, 646.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 395.655 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 2117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517782, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 257, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (354.95, 278.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1247, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1264.55, 665.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 403.793 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 2118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517928, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 558, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (731.42, 622.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 401.391 CPU sec, 22.565 real sec
[0000] Calling mem_process_seqs.., task: 2119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518153, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 419, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (828.94, 792.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 1715, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9637)
[0000][PE] mean and std.dev: (2027.62, 2008.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12843)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 402.458 CPU sec, 22.560 real sec
[0000] Calling mem_process_seqs.., task: 2120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517676, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 356, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (477.03, 447.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 600, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8491)
[0000][PE] mean and std.dev: (1226.87, 1401.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11303)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1019, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1030.67, 543.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 408.231 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 2121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518790, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 344, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (515.20, 427.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 176, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (439.54, 660.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 401.463 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 2122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517871, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 428, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (844.69, 909.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 556, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (859.80, 818.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1535, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1734.50, 1048.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 407.890 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 2123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518278, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 309, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (527.32, 731.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.10, 118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1111, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1302.73, 864.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 401.380 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 2124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518261, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 234, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (328.52, 213.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 397.802 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 2125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518472, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 326, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2322)
[0000][PE] mean and std.dev: (486.62, 516.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 583, 3165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9387)
[0000][PE] mean and std.dev: (1892.25, 2351.70)
[0000][PE] low and high boundaries for proper pairs: (1, 12498)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 404.198 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 2126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517753, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 359, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1067)
[0000][PE] mean and std.dev: (327.61, 199.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 119.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 999, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2253)
[0000][PE] mean and std.dev: (1070.90, 389.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 406.149 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 2127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517993, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 320, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (349.77, 165.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 396, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6833)
[0000][PE] mean and std.dev: (1320.62, 2003.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9334)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1798, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1336.25, 829.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 398.591 CPU sec, 22.388 real sec
[0000] Calling mem_process_seqs.., task: 2128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518510, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 252, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 618)
[0000][PE] mean and std.dev: (225.64, 93.09)
[0000][PE] low and high boundaries for proper pairs: (1, 767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.50, 119.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 608, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (590.11, 477.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3239)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 408.931 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 2129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517777, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 318, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (293.26, 133.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 402.060 CPU sec, 22.595 real sec
[0000] Calling mem_process_seqs.., task: 2130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518041, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 409, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (592.09, 501.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.45, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1596, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5971)
[0000][PE] mean and std.dev: (1709.60, 891.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 399.515 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 2131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517273, 13, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1023, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1017.58, 918.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (217, 737, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (798.92, 667.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 407.084 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 2132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518417, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 312, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1613)
[0000][PE] mean and std.dev: (399.88, 253.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.29, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 518, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (777.00, 858.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 398.622 CPU sec, 22.405 real sec
[0000] Calling mem_process_seqs.., task: 2133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517768, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 432, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (738.84, 765.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.85, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 401.640 CPU sec, 22.546 real sec
[0000] Calling mem_process_seqs.., task: 2134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517673, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 426, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (677.39, 685.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1897, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1741.33, 798.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 403.361 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 2135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518487, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 393, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (634.95, 673.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 395.769 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 2136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518050, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 293, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1821)
[0000][PE] mean and std.dev: (464.00, 431.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 282, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (185.09, 218.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2511)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 404.505 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 2137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517965, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 355, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1824)
[0000][PE] mean and std.dev: (394.94, 260.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 241, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (320.44, 398.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1362, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1326.10, 573.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 399.981 CPU sec, 22.517 real sec
[0000] Calling mem_process_seqs.., task: 2138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518299, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 276, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (353.50, 241.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 229, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (400.42, 573.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 400.560 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 2139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518377, 19, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 271, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1828)
[0000][PE] mean and std.dev: (307.00, 303.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 830, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (891.67, 841.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 2511, 4621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12343)
[0000][PE] mean and std.dev: (2762.21, 2318.78)
[0000][PE] low and high boundaries for proper pairs: (1, 16204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 398.963 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 2140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517932, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 315, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (473.18, 340.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 406.350 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 2141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518166, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 463, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (659.31, 472.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 329, 3922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11586)
[0000][PE] mean and std.dev: (1619.25, 2350.60)
[0000][PE] low and high boundaries for proper pairs: (1, 15418)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 398.639 CPU sec, 22.398 real sec
[0000] Calling mem_process_seqs.., task: 2142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518249, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 302, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 979)
[0000][PE] mean and std.dev: (266.00, 119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 401.968 CPU sec, 22.555 real sec
[0000] Calling mem_process_seqs.., task: 2143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518105, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 294, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (574.14, 794.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.43, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1525, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6564)
[0000][PE] mean and std.dev: (1717.77, 1294.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 399.286 CPU sec, 22.401 real sec
[0000] Calling mem_process_seqs.., task: 2144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517826, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 296, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (278.88, 179.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1661, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5176)
[0000][PE] mean and std.dev: (1599.07, 1154.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 401.584 CPU sec, 22.545 real sec
[0000] Calling mem_process_seqs.., task: 2145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206126
	[0000][ M::kt_pipeline] read 1206126 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518140, 19, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 284, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (354.65, 217.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 197, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (824.61, 1222.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1123, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (1113.50, 460.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 400.664 CPU sec, 22.492 real sec
[0000] Calling mem_process_seqs.., task: 2146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518408, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 348, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (594.94, 589.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 218, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (750.20, 1201.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 1026, 2952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7868)
[0000][PE] mean and std.dev: (2039.91, 2314.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206126 reads in 402.665 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 2147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518366, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 660, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (719.24, 689.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 995, 4482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13388)
[0000][PE] mean and std.dev: (2223.70, 2486.83)
[0000][PE] low and high boundaries for proper pairs: (1, 17841)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1518, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6679)
[0000][PE] mean and std.dev: (1912.80, 1648.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 403.374 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 2148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518502, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 279, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1207)
[0000][PE] mean and std.dev: (323.63, 253.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.19, 119.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 916, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9286)
[0000][PE] mean and std.dev: (1698.92, 1767.92)
[0000][PE] low and high boundaries for proper pairs: (1, 12301)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 401.931 CPU sec, 22.585 real sec
[0000] Calling mem_process_seqs.., task: 2149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518038, 11, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 240, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1087)
[0000][PE] mean and std.dev: (330.28, 236.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.35, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 527, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6980)
[0000][PE] mean and std.dev: (1025.91, 1233.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9303)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 405.157 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 2150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517978, 17, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 350, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (523.17, 511.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.39, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 500, 4059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12103)
[0000][PE] mean and std.dev: (1724.71, 2121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 16125)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 405.787 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 2151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518315, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 424, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (641.82, 582.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1717, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1670.18, 1013.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 400.987 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 2152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517882, 16, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 422, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (646.58, 560.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.92, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 1353, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (916.14, 846.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6771)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 403.036 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 2153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517871, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 354, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (659.41, 566.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 119.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 730, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8748)
[0000][PE] mean and std.dev: (1612.75, 1865.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11590)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 403.331 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 2154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518306, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 387, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (627.69, 495.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 762, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (736.92, 626.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 402.888 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 2155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518619, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 230, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 709)
[0000][PE] mean and std.dev: (194.38, 90.06)
[0000][PE] low and high boundaries for proper pairs: (1, 900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 399.604 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 2156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518178, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 395, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (551.47, 398.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 1086, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10609)
[0000][PE] mean and std.dev: (1913.10, 2126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 14137)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 405.093 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 2157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518479, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 565, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (798.19, 618.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.14, 119.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1326, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1021.89, 568.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 400.763 CPU sec, 22.504 real sec
[0000] Calling mem_process_seqs.., task: 2158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518208, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 353, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (560.17, 612.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.59, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 398.665 CPU sec, 22.358 real sec
[0000] Calling mem_process_seqs.., task: 2159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518207, 14, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 342, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 774)
[0000][PE] mean and std.dev: (324.25, 137.11)
[0000][PE] low and high boundaries for proper pairs: (1, 938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.30, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 451, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (569.42, 715.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 2293, 4034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9558)
[0000][PE] mean and std.dev: (2859.92, 2300.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 397.308 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 2160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518159, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 342, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (485.12, 469.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 654, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5768)
[0000][PE] mean and std.dev: (1081.08, 1366.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 398.582 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 2161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518046, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 551, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (941.59, 832.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.10, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 692, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (766.50, 648.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 407.749 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 2162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518187, 20, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 230, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (314.75, 222.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 682, 4120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12018)
[0000][PE] mean and std.dev: (2066.05, 2580.36)
[0000][PE] low and high boundaries for proper pairs: (1, 15967)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1242, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1722.70, 1374.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 401.201 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 2163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517884, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 322, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (776.12, 851.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 408.303 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 2164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517542, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 277, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (369.88, 331.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.24, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 405.989 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 2165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518429, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 308, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (809.29, 886.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 437, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (241.23, 255.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1578, 1837, 3795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8229)
[0000][PE] mean and std.dev: (2909.30, 2216.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 398.637 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 2166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517838, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 369, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1856)
[0000][PE] mean and std.dev: (474.72, 445.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 402.669 CPU sec, 22.615 real sec
[0000] Calling mem_process_seqs.., task: 2167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518365, 15, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 234, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (303.50, 275.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.22, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 770, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8265)
[0000][PE] mean and std.dev: (1692.67, 1922.89)
[0000][PE] low and high boundaries for proper pairs: (1, 11014)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1385, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1435.00, 755.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 403.292 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 2168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518390, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 284, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (403.38, 433.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 396.178 CPU sec, 22.287 real sec
[0000] Calling mem_process_seqs.., task: 2169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518153, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 378, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1485)
[0000][PE] mean and std.dev: (320.24, 170.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.61, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 357, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4828)
[0000][PE] mean and std.dev: (707.80, 1155.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 399.269 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 2170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518153, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 424, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (617.00, 659.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.04, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 468, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (652.00, 909.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 404.611 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 2171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517689, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 303, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (445.88, 422.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 247, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (867.18, 1169.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 402.768 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 2172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518058, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 329, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (349.59, 241.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 332, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (330.14, 362.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2516)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 402.117 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 2173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518372, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 371, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (783.38, 896.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 444, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8763)
[0000][PE] mean and std.dev: (1499.58, 2136.10)
[0000][PE] low and high boundaries for proper pairs: (1, 11664)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1005, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (1076.20, 565.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 399.626 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 2174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517975, 14, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 303, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (620.77, 626.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 552, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (450.82, 543.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7838)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 402.351 CPU sec, 22.584 real sec
[0000] Calling mem_process_seqs.., task: 2175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518104, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 363, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (734.57, 772.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 450, 6196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18564)
[0000][PE] mean and std.dev: (2449.90, 3095.81)
[0000][PE] low and high boundaries for proper pairs: (1, 24748)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1298, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5751)
[0000][PE] mean and std.dev: (1995.91, 1376.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 403.106 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 2176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518324, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 232, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (233.05, 129.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 253, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (534.46, 678.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 407.428 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 2177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517670, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 290, 3636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10700)
[0000][PE] mean and std.dev: (1609.71, 2193.71)
[0000][PE] low and high boundaries for proper pairs: (1, 14232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 405.586 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 2178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518032, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 342, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (347.15, 202.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1745, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1817.91, 1058.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 404.748 CPU sec, 22.756 real sec
[0000] Calling mem_process_seqs.., task: 2179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517542, 16, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 303, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (539.78, 584.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.00, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (278, 1119, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (911.71, 765.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7542)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1416, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1105.92, 626.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 397.550 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 2180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517694, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 254, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (241.00, 66.81)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 192, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (532.00, 731.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 411.454 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 2181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517873, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 346, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (714.96, 904.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 115, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (294.73, 328.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1870)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2946, 3682, 4894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8790)
[0000][PE] mean and std.dev: (3743.73, 2045.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 402.943 CPU sec, 22.668 real sec
[0000] Calling mem_process_seqs.., task: 2182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517868, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 314, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1066.33, 1365.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.48, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1610, 3918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10096)
[0000][PE] mean and std.dev: (2471.30, 2318.88)
[0000][PE] low and high boundaries for proper pairs: (1, 13185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 406.883 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 2183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518176, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 264, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 866)
[0000][PE] mean and std.dev: (246.40, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 450, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (958.00, 1171.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7419)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 398.423 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 2184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517799, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 267, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 877)
[0000][PE] mean and std.dev: (222.22, 101.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1175, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (227, 1967)
[0000][PE] mean and std.dev: (976.88, 266.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 403.389 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 2185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518131, 13, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 300, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (455.86, 445.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 405, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (917.15, 1125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 408.515 CPU sec, 23.109 real sec
[0000] Calling mem_process_seqs.., task: 2186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518423, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 278, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 680)
[0000][PE] mean and std.dev: (278.50, 125.45)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 317, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6702)
[0000][PE] mean and std.dev: (884.91, 1233.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8931)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 1070, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (1069.78, 778.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 398.967 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 2187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518306, 16, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 322, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (305.06, 182.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (255, 530, 4035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11595)
[0000][PE] mean and std.dev: (1896.06, 2393.27)
[0000][PE] low and high boundaries for proper pairs: (1, 15375)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 400.930 CPU sec, 22.502 real sec
[0000] Calling mem_process_seqs.., task: 2188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518251, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 364, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (591.31, 543.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 405.219 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 2189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517866, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 500, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (626.60, 500.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 225, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6750)
[0000][PE] mean and std.dev: (863.92, 1422.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8995)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1230, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1545.00, 674.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 401.462 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 2190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518197, 12, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 411, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1077.50, 1186.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 238, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (558.58, 701.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 402.086 CPU sec, 22.608 real sec
[0000] Calling mem_process_seqs.., task: 2191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518412, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 346, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (663.45, 653.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 402.108 CPU sec, 22.576 real sec
[0000] Calling mem_process_seqs.., task: 2192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518140, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 297, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 759)
[0000][PE] mean and std.dev: (269.59, 92.85)
[0000][PE] low and high boundaries for proper pairs: (1, 931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.42, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 404.168 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 2193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518219, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 257, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (228.75, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.83, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 387, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (594.91, 943.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 399.106 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 2194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517787, 19, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 291, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (294.62, 208.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (155, 566, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (953.17, 1146.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 2708, 3870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9552)
[0000][PE] mean and std.dev: (2525.70, 1564.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 401.148 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 2195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518347, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 341, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (606.83, 533.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 420, 3592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10632)
[0000][PE] mean and std.dev: (1598.38, 2339.00)
[0000][PE] low and high boundaries for proper pairs: (1, 14152)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 794, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (710.08, 431.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 399.698 CPU sec, 22.433 real sec
[0000] Calling mem_process_seqs.., task: 2196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518060, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 337, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (393.62, 332.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 398.803 CPU sec, 22.423 real sec
[0000] Calling mem_process_seqs.., task: 2197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517399, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 422, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (534.44, 564.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 743, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1396.60, 1639.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1350, 4125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10485)
[0000][PE] mean and std.dev: (1931.73, 1602.75)
[0000][PE] low and high boundaries for proper pairs: (1, 13665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 399.678 CPU sec, 22.401 real sec
[0000] Calling mem_process_seqs.., task: 2198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517991, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 360, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1872)
[0000][PE] mean and std.dev: (556.46, 475.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.23, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 231, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8069)
[0000][PE] mean and std.dev: (1356.13, 1934.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10741)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1563, 1744, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1696.60, 600.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 407.286 CPU sec, 22.936 real sec
[0000] Calling mem_process_seqs.., task: 2199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518263, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 315, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1915)
[0000][PE] mean and std.dev: (402.78, 365.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.26, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (48, 429, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6081)
[0000][PE] mean and std.dev: (1087.83, 1640.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8092)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 2017, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5915)
[0000][PE] mean and std.dev: (1979.70, 855.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 400.866 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 2200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517802, 17, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 342, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (530.71, 472.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.11, 118.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 164, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7291)
[0000][PE] mean and std.dev: (1120.76, 1437.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9717)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 407.197 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 2201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518082, 19, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 356, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (326.79, 195.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.16, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 493, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (470.94, 547.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1370, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (244, 2619)
[0000][PE] mean and std.dev: (1261.11, 398.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 407.734 CPU sec, 22.956 real sec
[0000] Calling mem_process_seqs.., task: 2202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517865, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 377, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (463.11, 350.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.05, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1107, 3230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7704)
[0000][PE] mean and std.dev: (1854.45, 1493.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 405.120 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 2203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518065, 15, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 314, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 856)
[0000][PE] mean and std.dev: (291.29, 84.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.18, 119.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (436, 713, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (837.64, 914.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 401.555 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 2204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517752, 24, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 279, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (293.12, 176.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 476, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (537.68, 633.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1444, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1583.82, 646.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 406.535 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 2205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518081, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 322, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (957.94, 1205.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.03, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (48, 471, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (817.12, 919.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7256)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 401.057 CPU sec, 22.501 real sec
[0000] Calling mem_process_seqs.., task: 2206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517844, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 282, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (533.77, 684.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 27, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (236.46, 394.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2969)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 397.269 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 2207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518453, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 395, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (759.38, 735.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.06, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 399.058 CPU sec, 22.478 real sec
[0000] Calling mem_process_seqs.., task: 2208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517737, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 324, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (652.89, 644.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1522, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1653.89, 1533.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 408.115 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 2209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518453, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 437, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (695.05, 809.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.09, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1221, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1363.50, 1039.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 397.367 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 2210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518139, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 383, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (505.80, 416.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 696, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (649.10, 553.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 401.562 CPU sec, 22.566 real sec
[0000] Calling mem_process_seqs.., task: 2211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517955, 14, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 350, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2013)
[0000][PE] mean and std.dev: (480.25, 456.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 1717, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8486)
[0000][PE] mean and std.dev: (1824.07, 2025.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11312)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 402.654 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 2212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518217, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 321, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (353.94, 154.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 439, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (768.29, 850.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 401.291 CPU sec, 22.476 real sec
[0000] Calling mem_process_seqs.., task: 2213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206102
	[0000][ M::kt_pipeline] read 1206102 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518168, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 320, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (436.85, 373.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3, 415, 4425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13269)
[0000][PE] mean and std.dev: (2143.08, 2852.73)
[0000][PE] low and high boundaries for proper pairs: (1, 17691)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 403.611 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 2214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518388, 16, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 780, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8404)
[0000][PE] mean and std.dev: (1950.39, 2431.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.90, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 409, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (711.13, 749.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1412, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1135.90, 800.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206102 reads in 396.127 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 2215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518320, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 300, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5461)
[0000][PE] mean and std.dev: (1135.11, 1597.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.58, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 928, 3763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10719)
[0000][PE] mean and std.dev: (1665.00, 1910.07)
[0000][PE] low and high boundaries for proper pairs: (1, 14197)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 402.988 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 2216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518576, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 297, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (537.16, 466.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 611, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (997.73, 1168.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6671)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1509, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1358.91, 508.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 396.999 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 2217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518084, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 475, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (541.56, 424.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.25, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 714, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6851)
[0000][PE] mean and std.dev: (1519.69, 1767.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 399.209 CPU sec, 22.395 real sec
[0000] Calling mem_process_seqs.., task: 2218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518287, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 445, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (867.62, 839.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.21, 119.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 826, 4688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14000)
[0000][PE] mean and std.dev: (1777.55, 2157.75)
[0000][PE] low and high boundaries for proper pairs: (1, 18656)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1394, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (1182.13, 493.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 398.786 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 2219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518342, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 425, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2169)
[0000][PE] mean and std.dev: (520.47, 483.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.18, 118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 417, 3629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10819)
[0000][PE] mean and std.dev: (1684.88, 2424.04)
[0000][PE] low and high boundaries for proper pairs: (1, 14414)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 403.048 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 2220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518682, 15, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 287, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (508.77, 420.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.30, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 1030, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1128.33, 973.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 398.491 CPU sec, 22.368 real sec
[0000] Calling mem_process_seqs.., task: 2221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518013, 23, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 346, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (541.39, 507.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 585, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (919.15, 1137.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 406.072 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 2222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517645, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 462, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (727.19, 685.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 1608, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8615)
[0000][PE] mean and std.dev: (2057.00, 2415.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11717)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1113, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (957.64, 450.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 399.371 CPU sec, 22.389 real sec
[0000] Calling mem_process_seqs.., task: 2223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517900, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 282, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (323.92, 259.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.32, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 99, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (456.08, 638.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1608, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6060)
[0000][PE] mean and std.dev: (1637.17, 966.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 401.127 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 2224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518335, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 443, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (837.29, 693.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.82, 118.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 687, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8198)
[0000][PE] mean and std.dev: (1637.45, 1961.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10828)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 396.444 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 2225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518665, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 295, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (748.89, 1008.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.99, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 675, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (886.38, 1034.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1280, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (1232.69, 594.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 405.812 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 2226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518108, 16, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 341, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (560.32, 529.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.98, 118.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 920, 3757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10627)
[0000][PE] mean and std.dev: (1875.50, 2343.47)
[0000][PE] low and high boundaries for proper pairs: (1, 14062)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 402.652 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 2227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517601, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 322, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2220)
[0000][PE] mean and std.dev: (470.24, 436.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 285, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (335.58, 301.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1184, 3438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8078)
[0000][PE] mean and std.dev: (1946.33, 1385.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 404.789 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 2228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518228, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 331, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (719.41, 807.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 399.841 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 2229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518223, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 285, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (489.88, 435.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 404.646 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 2230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517672, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 361, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (388.29, 268.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 739, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1783)
[0000][PE] mean and std.dev: (401.00, 295.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2303)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 881, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (706.33, 303.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 404.035 CPU sec, 22.707 real sec
[0000] Calling mem_process_seqs.., task: 2231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517720, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 343, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1319.20, 1874.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 401.087 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 2232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517841, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 338, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1590)
[0000][PE] mean and std.dev: (488.81, 393.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 402.704 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 2233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518466, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 372, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (360.42, 196.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.24, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 569, 4072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11830)
[0000][PE] mean and std.dev: (1702.09, 1889.19)
[0000][PE] low and high boundaries for proper pairs: (1, 15709)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 399.621 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 2234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517927, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 353, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1386)
[0000][PE] mean and std.dev: (435.45, 299.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.82, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 381, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (323.33, 286.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2407)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 398.036 CPU sec, 22.346 real sec
[0000] Calling mem_process_seqs.., task: 2235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517889, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 305, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1996)
[0000][PE] mean and std.dev: (514.92, 498.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.21, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 401.020 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 2236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517824, 17, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 331, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (581.09, 498.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.97, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 220, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (576.47, 811.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1023, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1023.92, 605.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 402.714 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 2237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517973, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 447, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (493.20, 421.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 482, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (906.54, 1135.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7291)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 401.998 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 2238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518112, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 298, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (325.73, 242.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.03, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (341, 819, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7895)
[0000][PE] mean and std.dev: (1370.81, 1646.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10413)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 400.650 CPU sec, 22.438 real sec
[0000] Calling mem_process_seqs.., task: 2239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518680, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 372, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (537.87, 456.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 849, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (927.85, 899.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 404.903 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 2240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518083, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 320, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 996)
[0000][PE] mean and std.dev: (310.94, 203.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 109, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (738.50, 1071.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7739)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 401.959 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 2241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518041, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 539, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1156.26, 1208.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.96, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 425, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1513)
[0000][PE] mean and std.dev: (420.00, 402.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2030)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 401.434 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 2242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517839, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 315, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 989)
[0000][PE] mean and std.dev: (305.68, 97.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.17, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 539, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (329.67, 288.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2465)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 403.245 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 2243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517676, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 352, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (541.85, 490.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.15, 118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 966, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (953.90, 463.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 398.115 CPU sec, 22.327 real sec
[0000] Calling mem_process_seqs.., task: 2244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518077, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 309, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 762)
[0000][PE] mean and std.dev: (332.27, 164.62)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.07, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (440, 1329, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1529.64, 1418.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7620)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1534, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1481.64, 925.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 401.757 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 2245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517622, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 370, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1699)
[0000][PE] mean and std.dev: (399.28, 325.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.46, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 345, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (336.23, 415.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 411.962 CPU sec, 23.343 real sec
[0000] Calling mem_process_seqs.., task: 2246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518245, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 296, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1393)
[0000][PE] mean and std.dev: (417.15, 418.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.28, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (387, 935, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (902.36, 723.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 406.541 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 2247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518295, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 362, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (502.33, 414.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 398.397 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 2248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518033, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 392, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (523.89, 447.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.87, 118.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 205, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (366.77, 571.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1575, 4144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9944)
[0000][PE] mean and std.dev: (2213.50, 1475.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 399.705 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 2249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517994, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 442, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (890.56, 964.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 479, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (782.30, 738.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1181, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6176)
[0000][PE] mean and std.dev: (1613.10, 1138.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 403.227 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 2250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518242, 14, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 380, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2018)
[0000][PE] mean and std.dev: (563.42, 501.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 638, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (956.38, 1346.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6341)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1477, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7268)
[0000][PE] mean and std.dev: (1720.69, 1389.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 405.178 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 2251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518021, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 292, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 832)
[0000][PE] mean and std.dev: (255.84, 163.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.40, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 403, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (493.46, 558.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 398.900 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 2252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518197, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 473, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (656.14, 469.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.60, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 997, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1159.00, 1010.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 400.917 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 2253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517972, 16, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 270, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1792)
[0000][PE] mean and std.dev: (347.09, 338.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (490.43, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (6, 408, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (908.00, 1362.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7018)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 401.831 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 2254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518373, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 320, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (295.77, 147.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.01, 118.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 405.137 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 2255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518268, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 365, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1456)
[0000][PE] mean and std.dev: (405.12, 267.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.02, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 398.179 CPU sec, 22.421 real sec
[0000] Calling mem_process_seqs.., task: 2256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517834, 16, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 362, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (296.67, 168.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.95, 118.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 714, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7036)
[0000][PE] mean and std.dev: (945.40, 1071.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 396.705 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 2257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518354, 15, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 427, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (835.18, 679.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.31, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 887, 4308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12478)
[0000][PE] mean and std.dev: (1830.07, 2010.59)
[0000][PE] low and high boundaries for proper pairs: (1, 16563)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 400.635 CPU sec, 22.483 real sec
[0000] Calling mem_process_seqs.., task: 2258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517650, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 393, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (623.17, 555.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 361, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (504.08, 614.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 397.515 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 2259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518101, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 440, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (773.69, 704.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.19, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (445, 1114, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (781.18, 502.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 402.515 CPU sec, 22.622 real sec
[0000] Calling mem_process_seqs.., task: 2260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518465, 15, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 236, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (262.95, 184.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.23, 118.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (103, 271, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9775)
[0000][PE] mean and std.dev: (1292.80, 1873.03)
[0000][PE] low and high boundaries for proper pairs: (1, 12999)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1417, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6618)
[0000][PE] mean and std.dev: (1705.83, 1249.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 402.445 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 2261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517789, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 868, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1163.74, 1179.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.38, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2, 709, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (550.85, 577.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 400.562 CPU sec, 22.473 real sec
[0000] Calling mem_process_seqs.., task: 2262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518362, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 288, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1822)
[0000][PE] mean and std.dev: (461.08, 480.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.32, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 366, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1196.20, 1458.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 402.539 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 2263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517933, 18, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 343, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5844)
[0000][PE] mean and std.dev: (920.09, 1043.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.37, 119.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 382, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (629.65, 867.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1303, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1254.42, 381.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 399.553 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 2264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518178, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 336, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (314.86, 165.32)
[0000][PE] low and high boundaries for proper pairs: (1, 976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.11, 118.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (468, 769, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7950)
[0000][PE] mean and std.dev: (1702.18, 2090.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10444)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 2037, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1866.58, 1257.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 401.790 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 2265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517970, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 333, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (733.59, 780.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 506, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8690)
[0000][PE] mean and std.dev: (1368.42, 1928.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11583)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 401.459 CPU sec, 22.523 real sec
[0000] Calling mem_process_seqs.., task: 2266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518271, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 413, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (525.29, 425.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.25, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 399.970 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 2267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518356, 14, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 372, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (488.27, 401.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.33, 118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 482, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (561.23, 623.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 403.069 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 2268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518296, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 366, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1694)
[0000][PE] mean and std.dev: (481.89, 420.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.27, 119.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 910, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4753)
[0000][PE] mean and std.dev: (795.33, 771.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 400.714 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 2269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517914, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 436, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (587.88, 547.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.34, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 526, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (376.90, 320.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 402.314 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 2270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518054, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 228, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 947)
[0000][PE] mean and std.dev: (293.21, 219.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.26, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 427, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (513.10, 560.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1653, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1220.50, 473.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 400.546 CPU sec, 22.531 real sec
[0000] Calling mem_process_seqs.., task: 2271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517902, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 278, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (267.75, 100.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 396.378 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 2272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518643, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 363, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2122)
[0000][PE] mean and std.dev: (583.81, 540.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 663, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (737.42, 1137.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 397.331 CPU sec, 22.283 real sec
[0000] Calling mem_process_seqs.., task: 2273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517966, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 352, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (789.38, 841.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.15, 118.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (448, 553, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (751.25, 685.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 405.804 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 2274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518161, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 332, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 938)
[0000][PE] mean and std.dev: (324.28, 192.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.65, 118.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 405, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (865.40, 1120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 398.676 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 2275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517808, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 317, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (527.00, 447.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.89, 118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 71, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (810.82, 956.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7827)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 404.084 CPU sec, 22.689 real sec
[0000] Calling mem_process_seqs.., task: 2276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518253, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 319, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (648.53, 680.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.13, 118.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 342, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (568.60, 718.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 398.274 CPU sec, 22.357 real sec
[0000] Calling mem_process_seqs.., task: 2277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517821, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 321, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1642)
[0000][PE] mean and std.dev: (355.65, 296.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 63, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (457.62, 847.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 1747, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6136)
[0000][PE] mean and std.dev: (1411.60, 889.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 397.514 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 2278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518369, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 409, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (718.75, 815.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.31, 119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 403.720 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 2279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517661, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 383, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (434.28, 319.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 459, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9085)
[0000][PE] mean and std.dev: (1541.77, 2000.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12113)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1872, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7891)
[0000][PE] mean and std.dev: (1724.42, 1288.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 400.223 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 2280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518227, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 336, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (548.04, 503.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.12, 119.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1574, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9058)
[0000][PE] mean and std.dev: (2272.69, 1793.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 402.490 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 2281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517939, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 334, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 889)
[0000][PE] mean and std.dev: (307.84, 163.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.20, 118.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 753, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (759.31, 772.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 402.013 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 2282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518128, 14, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 350, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (560.19, 504.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.14, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1, 311, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1152.50, 1694.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7932)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1506, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1826.30, 1154.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 398.580 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 2283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517684, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 439, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (815.00, 729.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.22, 118.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 952, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7364)
[0000][PE] mean and std.dev: (1309.50, 1532.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9816)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 405.005 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 2284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518195, 16, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 296, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1376)
[0000][PE] mean and std.dev: (317.11, 182.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 481, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.49, 119.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 832, 5306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15630)
[0000][PE] mean and std.dev: (2002.88, 2604.14)
[0000][PE] low and high boundaries for proper pairs: (1, 20792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1144, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1212.92, 678.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 399.384 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 2285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518377, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 230, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 927)
[0000][PE] mean and std.dev: (230.12, 99.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 886)
[0000][PE] mean and std.dev: (490.33, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (198, 455, 3727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10785)
[0000][PE] mean and std.dev: (1692.06, 2515.60)
[0000][PE] low and high boundaries for proper pairs: (1, 14314)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 404.123 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 2286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 93014368, nseq: 623162
	[0000][ M::kt_pipeline] read 623162 sequences (93014368 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517975, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 354, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (402.06, 332.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (490.38, 118.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (59, 1449, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7397)
[0000][PE] mean and std.dev: (1821.30, 2045.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10004)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1227, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (1169.92, 597.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 399.080 CPU sec, 22.480 real sec
[0000] Calling mem_process_seqs.., task: 2287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 623162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 268007, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 407, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (646.00, 658.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (406, 480, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 883)
[0000][PE] mean and std.dev: (489.76, 118.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 623162 reads in 205.776 CPU sec, 11.591 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.653232 MHz
Runtime profile:

	Time taken for main_mem function: 64140.47 sec

	IO times (sec) :
	Reading IO time (reads) avg: 3652.71, (3652.71, 3652.71)
	Writing IO time (SAM) avg: 6815.17, (6815.17, 6815.17)
	Reading IO time (Reference Genome) avg: 17.49, (17.49, 17.49)
	Index read time avg: 22.13, (22.13, 22.13)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 64099.71
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 64076.91, (64076.91, 64076.91)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 24560.24, (24560.24, 24560.24)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 39193.15, (39193.15, 39193.15)
		SMEM compute avg: 13429.87, (13458.71, 13399.08)
		SAL compute avg: 7125.61, (7151.55, 7092.50)
				MEM_SA avg: 3130.48, (3148.56, 3118.40)

		BSW time, avg: 12176.00, (12186.66, 12164.85)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
