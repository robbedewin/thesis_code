Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000000 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517042, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 405, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (808.58, 750.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1179, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1239.00, 521.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000210 bp)...
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 490.376 CPU sec, 211.618 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517119, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 977, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1229.54, 1094.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1408, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (1536.33, 950.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 455.661 CPU sec, 41.922 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517385, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 476, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (675.91, 563.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1294, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1604.38, 845.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 433.019 CPU sec, 42.957 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517488, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 474, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (939.90, 1044.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1498, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1442.52, 726.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 454.576 CPU sec, 42.327 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517440, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 398, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (544.93, 440.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1343, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (1404.19, 817.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 452.352 CPU sec, 44.627 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516818, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 695, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (772.41, 537.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1227, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (1232.17, 423.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 439.059 CPU sec, 32.929 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517139, 8, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 828, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1106.43, 1024.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1266, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1343.36, 629.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 440.098 CPU sec, 37.997 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517190, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 627, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (867.50, 744.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.47, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1479, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1595.86, 943.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 431.114 CPU sec, 34.322 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516811, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 693, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (619.11, 457.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1326, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1404.78, 764.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 428.443 CPU sec, 38.158 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517074, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 928, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1213.03, 1154.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1187, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (1098.00, 359.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 430.091 CPU sec, 41.414 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516954, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 997, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1033.07, 857.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (764, 2093, 5462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14858)
[0000][PE] mean and std.dev: (2986.82, 2551.87)
[0000][PE] low and high boundaries for proper pairs: (1, 19556)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1088, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1327.83, 855.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 436.900 CPU sec, 40.435 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517448, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 601, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5713)
[0000][PE] mean and std.dev: (944.11, 1004.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1193, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1288.56, 677.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 434.553 CPU sec, 39.567 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517566, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 559, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (771.25, 680.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1933, 3625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8473)
[0000][PE] mean and std.dev: (2166.22, 1148.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 426.288 CPU sec, 35.059 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517692, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 696, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (1203.59, 1214.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1382, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (1772.61, 1196.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 420.651 CPU sec, 36.403 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517460, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 834, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (879.60, 715.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1315, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1603.92, 1142.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 431.235 CPU sec, 35.834 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516789, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 903, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (990.89, 776.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 115.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1235, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6287)
[0000][PE] mean and std.dev: (1469.06, 911.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 439.281 CPU sec, 41.623 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517076, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 737, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (956.42, 856.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1675, 3421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8009)
[0000][PE] mean and std.dev: (2105.82, 1296.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 421.930 CPU sec, 38.658 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517461, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 988, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5151)
[0000][PE] mean and std.dev: (1255.70, 1222.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1247, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (1257.00, 542.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 431.592 CPU sec, 37.423 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517368, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 638, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (774.74, 618.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.04, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1504, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1246.39, 592.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 432.730 CPU sec, 33.723 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517329, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 640, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (953.26, 741.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1706, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1462.30, 811.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 430.878 CPU sec, 34.941 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517060, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 559, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (556.04, 373.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1361, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1667.69, 1180.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 433.740 CPU sec, 33.303 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516587, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 993, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (1034.59, 812.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1172, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1315.62, 723.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 429.620 CPU sec, 39.271 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517154, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 735, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1100.13, 1206.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1471, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1418.08, 644.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 421.122 CPU sec, 40.076 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517135, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 989, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (1008.47, 891.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1345, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (1172.33, 458.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 419.777 CPU sec, 31.925 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516764, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 841, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1374.17, 1236.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1409, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1483.94, 630.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 436.933 CPU sec, 47.057 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516871, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1098, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1084.50, 897.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1351, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (1343.32, 593.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 431.580 CPU sec, 33.472 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517076, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 812, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (836.73, 754.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1408, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (1542.73, 843.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 439.983 CPU sec, 35.947 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517067, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 437, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (623.71, 460.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.90, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1317, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (1516.84, 779.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 436.347 CPU sec, 35.959 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517923, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 378, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (663.39, 668.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1485, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1501.88, 832.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 425.896 CPU sec, 43.035 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517867, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1032, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (1565.93, 1405.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1308, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (1394.92, 573.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 432.505 CPU sec, 37.580 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517212, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 958, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1097.46, 1113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.94, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1228, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1303.39, 558.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 432.067 CPU sec, 38.635 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000288 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517741, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 585, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (904.27, 795.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1219, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1410.16, 910.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 422.419 CPU sec, 45.738 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517295, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 650, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (829.53, 619.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 1833, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1811.14, 777.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 424.956 CPU sec, 37.062 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517079, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 703, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (806.29, 635.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1908, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1737.62, 780.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 437.455 CPU sec, 43.328 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517149, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 442, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (841.26, 752.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.83, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1478, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6635)
[0000][PE] mean and std.dev: (1785.67, 978.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 413.724 CPU sec, 31.085 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517143, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 902, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1212.91, 1232.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1315, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1843.92, 1250.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 427.746 CPU sec, 40.957 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516817, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 991, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1032.90, 796.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1626, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1679.88, 871.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 433.074 CPU sec, 37.842 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517024, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 770, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (882.62, 659.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1263, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7137)
[0000][PE] mean and std.dev: (1878.48, 1605.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 440.216 CPU sec, 45.005 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517202, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 555, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (750.76, 610.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1624, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1862.70, 1108.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 438.491 CPU sec, 37.572 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517130, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 474, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1172.56, 1327.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1280, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1495.40, 810.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 425.160 CPU sec, 35.945 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517349, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 441, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (709.00, 625.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1671, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1719.80, 797.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 424.469 CPU sec, 37.773 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517027, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1169, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1184.18, 846.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1215, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1321.12, 744.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 439.598 CPU sec, 37.577 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517446, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 555, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (885.33, 776.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1822, 3447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7869)
[0000][PE] mean and std.dev: (2088.53, 1120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 429.744 CPU sec, 34.721 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517408, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 863, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (963.36, 750.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1658, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1534.32, 627.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 432.021 CPU sec, 43.195 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517359, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 672, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (986.97, 932.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1756, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6743)
[0000][PE] mean and std.dev: (1849.87, 1216.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 417.684 CPU sec, 37.968 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517542, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1064, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1098.29, 855.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.53, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1998, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7740)
[0000][PE] mean and std.dev: (1937.48, 1249.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 428.718 CPU sec, 34.812 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516723, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 923, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (829.63, 574.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 834, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1237.08, 914.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 435.641 CPU sec, 42.300 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516965, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 901, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (959.48, 736.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1248, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (1003.33, 382.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 432.573 CPU sec, 36.393 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517170, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 554, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (574.12, 406.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.50, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1367, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1554.63, 783.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 417.774 CPU sec, 37.488 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517225, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 783, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (911.54, 782.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1463, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1381.50, 737.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 429.743 CPU sec, 37.243 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517315, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 675, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1034.14, 924.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1687, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1630.20, 622.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 452.353 CPU sec, 37.701 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517270, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 507, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1022.10, 924.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1556, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (1670.55, 1039.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 436.382 CPU sec, 42.577 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516870, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 839, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (724.30, 507.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1537, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (1980.87, 1032.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 413.136 CPU sec, 31.845 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517046, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1158, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1089.38, 878.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 115.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1185, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (1157.38, 491.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 433.937 CPU sec, 39.138 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516405, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 810, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (924.88, 681.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1637, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5860)
[0000][PE] mean and std.dev: (1953.96, 1205.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 427.878 CPU sec, 32.881 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517201, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 348, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (470.17, 344.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.96, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1699, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (1608.91, 652.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 428.578 CPU sec, 42.884 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517371, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 667, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (902.44, 754.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 946, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1055.04, 585.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 431.404 CPU sec, 40.210 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517458, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 436, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (809.50, 757.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1308, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1329.11, 688.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 434.979 CPU sec, 38.417 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517205, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 501, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (939.07, 901.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.98, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1584, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1610.95, 927.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 435.327 CPU sec, 38.284 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517207, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 1248, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1209.00, 772.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1574, 3683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9071)
[0000][PE] mean and std.dev: (2476.67, 2003.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 419.812 CPU sec, 34.067 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517549, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 1096, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (917.97, 742.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1263, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1585.17, 1041.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 425.845 CPU sec, 38.108 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516713, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 464, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (729.32, 658.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.07, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1251, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1479.44, 921.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 435.370 CPU sec, 31.917 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516884, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 424, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2454)
[0000][PE] mean and std.dev: (599.31, 480.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1120, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1252.29, 744.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 432.753 CPU sec, 31.666 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516839, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 842, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1102.32, 885.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1619, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5886)
[0000][PE] mean and std.dev: (1662.92, 925.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 438.052 CPU sec, 37.303 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517343, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 715, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1017.68, 882.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1474, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1809.07, 1174.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 440.100 CPU sec, 43.717 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516970, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 778, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (931.47, 725.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1333, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1352.24, 777.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 426.366 CPU sec, 35.813 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517404, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 511, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (906.42, 761.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1134, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1158.37, 626.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 420.815 CPU sec, 40.177 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516993, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 377, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (634.93, 636.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1387, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1678.83, 1024.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 436.665 CPU sec, 38.007 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517052, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 691, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (861.65, 808.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1337, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1596.06, 929.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 433.111 CPU sec, 40.093 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517251, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 730, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (1008.17, 958.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1670, 3495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8765)
[0000][PE] mean and std.dev: (2152.68, 1636.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 430.553 CPU sec, 36.413 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517061, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 620, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (863.22, 789.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1397, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1584.25, 1116.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 428.913 CPU sec, 35.190 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516899, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 413, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (957.56, 1001.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1288, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1471.39, 920.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 433.646 CPU sec, 38.286 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517354, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1022, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1161.25, 874.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1438, 3362, 4988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12088)
[0000][PE] mean and std.dev: (3431.10, 2901.62)
[0000][PE] low and high boundaries for proper pairs: (1, 15638)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1807, 4787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12141)
[0000][PE] mean and std.dev: (2509.21, 2113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 15818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 435.307 CPU sec, 37.790 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517266, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 432, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (754.41, 613.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1312, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1386.37, 622.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 429.051 CPU sec, 39.237 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516923, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 336, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (894.20, 1004.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1760, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (1903.22, 1172.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 425.060 CPU sec, 37.665 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516983, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 611, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (614.16, 409.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.94, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1489, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1643.44, 913.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 438.621 CPU sec, 40.185 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517043, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 337, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (524.87, 502.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1241, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1379.15, 568.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 427.127 CPU sec, 31.445 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516859, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 512, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (805.96, 756.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.17, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1258, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (1295.43, 557.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 431.876 CPU sec, 37.867 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517121, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 463, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2484)
[0000][PE] mean and std.dev: (489.32, 358.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1347, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (1381.60, 547.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 421.936 CPU sec, 37.263 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516804, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 837, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (951.66, 742.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1214, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6363)
[0000][PE] mean and std.dev: (1565.75, 1145.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 426.286 CPU sec, 31.523 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516697, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 410, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (562.58, 532.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1491, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1630.25, 995.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 431.434 CPU sec, 36.908 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516595, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 538, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (636.54, 487.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1579, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1657.26, 983.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 426.748 CPU sec, 42.623 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517263, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1010, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1228.96, 1075.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.16, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1430, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4858)
[0000][PE] mean and std.dev: (1347.10, 842.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 414.714 CPU sec, 31.913 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516957, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 773, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (863.05, 564.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1492, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1440.57, 739.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 427.745 CPU sec, 39.605 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517395, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 731, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1068.77, 987.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1282, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (1275.22, 609.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 435.876 CPU sec, 39.751 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517065, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 801, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (920.88, 792.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1152, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1454.95, 907.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 436.234 CPU sec, 35.904 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516960, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 852, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (783.38, 611.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1428, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1425.04, 720.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 435.488 CPU sec, 38.191 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517123, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 715, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (857.18, 731.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1154, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (1267.14, 655.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 437.623 CPU sec, 41.942 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517206, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 686, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (844.81, 687.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1112, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (1130.21, 328.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 424.831 CPU sec, 39.936 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517246, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 821, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (956.46, 907.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1088, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1143.47, 674.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 429.776 CPU sec, 34.301 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516868, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 397, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (625.21, 516.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1435, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1616.58, 786.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 431.821 CPU sec, 36.700 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517181, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 471, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (691.31, 527.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.27, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1703, 3598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8268)
[0000][PE] mean and std.dev: (2354.48, 1399.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 433.711 CPU sec, 42.109 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517021, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 742, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (712.86, 523.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.86, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1343, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5160)
[0000][PE] mean and std.dev: (1653.25, 1047.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 425.298 CPU sec, 36.681 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517340, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 905, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (1023.75, 714.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1447, 1763, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (2128.20, 1300.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 439.858 CPU sec, 39.894 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517217, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 605, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (708.55, 717.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1535, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1625.31, 684.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 439.110 CPU sec, 39.115 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517106, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 596, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (661.81, 534.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.96, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1314, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1353.89, 589.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 441.659 CPU sec, 43.592 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517042, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 672, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2129)
[0000][PE] mean and std.dev: (657.32, 432.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1408, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (1327.00, 477.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 436.250 CPU sec, 35.171 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516909, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 438, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (571.06, 477.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1527, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1501.93, 867.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 428.772 CPU sec, 39.596 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517787, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 429, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (649.59, 491.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1644, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (1632.31, 1011.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 436.385 CPU sec, 47.398 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516985, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 714, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1088.12, 1009.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 993, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1371.86, 924.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 424.188 CPU sec, 33.221 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516868, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 775, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (864.30, 722.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1205, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1332.84, 791.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 441.532 CPU sec, 43.453 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516829, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 606, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (924.46, 845.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1196, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1495.05, 960.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 431.669 CPU sec, 33.506 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 516862, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 644, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (855.22, 755.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1720, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1947.43, 953.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 424.817 CPU sec, 32.747 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516671, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 948, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1429.14, 1352.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1352, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1495.65, 702.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 434.686 CPU sec, 47.028 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517216, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 474, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (619.21, 477.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1111, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1254.57, 777.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 429.982 CPU sec, 40.924 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516494, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 716, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (915.25, 703.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1126, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1399.94, 647.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 430.115 CPU sec, 34.154 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517206, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 478, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (737.83, 783.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 918, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1312.22, 863.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 434.761 CPU sec, 37.162 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516907, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 867, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4474)
[0000][PE] mean and std.dev: (985.00, 926.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1793, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6292)
[0000][PE] mean and std.dev: (1859.68, 1121.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 421.285 CPU sec, 39.054 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517363, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 828, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5344)
[0000][PE] mean and std.dev: (1158.16, 1122.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1275, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1458.27, 1108.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 418.216 CPU sec, 41.466 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517052, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 829, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1183.74, 1194.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1283, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1388.65, 679.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 420.797 CPU sec, 36.532 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516645, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 487, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (855.25, 837.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1550, 2758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6824)
[0000][PE] mean and std.dev: (1727.85, 1137.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 425.887 CPU sec, 40.023 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517175, 2, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1063, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1180.00, 902.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1404, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1383.13, 897.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 417.393 CPU sec, 33.309 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517075, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 601, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (738.24, 672.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1840, 4046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9586)
[0000][PE] mean and std.dev: (2660.32, 2034.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 419.259 CPU sec, 35.136 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517107, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 574, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (744.09, 523.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1412, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1701.78, 954.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 420.736 CPU sec, 34.748 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517437, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 894, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1304.31, 1262.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1377, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (1410.18, 569.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 430.043 CPU sec, 44.834 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516958, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 766, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (833.74, 707.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1293, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1422.29, 732.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 421.039 CPU sec, 35.256 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517197, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 958, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (929.61, 846.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1231, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (1229.12, 555.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 413.579 CPU sec, 31.037 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517077, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 629, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1003.68, 982.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.71, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1297, 3969, 5400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13606)
[0000][PE] mean and std.dev: (3321.30, 2337.85)
[0000][PE] low and high boundaries for proper pairs: (1, 17709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1850, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8743)
[0000][PE] mean and std.dev: (2202.81, 1744.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 419.659 CPU sec, 39.848 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517472, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 797, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1051.65, 974.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1490, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (613, 2403)
[0000][PE] mean and std.dev: (1494.92, 299.79)
[0000][PE] low and high boundaries for proper pairs: (255, 2761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 419.128 CPU sec, 36.875 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517547, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 730, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (739.00, 547.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1255, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4335)
[0000][PE] mean and std.dev: (1164.82, 742.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 420.379 CPU sec, 34.852 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517233, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 364, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (655.61, 629.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1477, 1554, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1603.95, 533.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 414.392 CPU sec, 32.904 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516693, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 525, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (843.27, 725.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1427, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1326.94, 498.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 425.395 CPU sec, 36.885 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517286, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 618, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (886.28, 989.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1411, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1203.10, 593.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 414.516 CPU sec, 32.998 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517506, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 384, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (850.96, 844.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1167, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1350.11, 814.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 411.141 CPU sec, 31.776 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516852, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 516, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (922.43, 947.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1322, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5577)
[0000][PE] mean and std.dev: (1725.74, 1219.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 422.245 CPU sec, 37.640 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516809, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 498, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (693.75, 460.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1433, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (1309.50, 344.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 419.110 CPU sec, 37.395 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517022, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 455, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (629.24, 530.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1651, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1677.12, 971.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 416.621 CPU sec, 35.226 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517136, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 416, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (741.32, 669.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1264, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1362.27, 801.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 432.667 CPU sec, 38.931 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516976, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 297, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (473.27, 353.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.27, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1356, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (1349.19, 553.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 411.287 CPU sec, 30.171 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517180, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 561, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1109.38, 1159.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1624, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1399.90, 528.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 417.085 CPU sec, 35.148 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516964, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 806, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (960.88, 832.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1014, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (1209.13, 889.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 416.766 CPU sec, 32.706 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516992, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 832, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1128.64, 1024.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1215, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8551)
[0000][PE] mean and std.dev: (1933.56, 1432.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 424.962 CPU sec, 37.369 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517081, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 672, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (890.38, 746.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1183, 3140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7360)
[0000][PE] mean and std.dev: (1653.62, 1035.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 416.118 CPU sec, 34.400 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516970, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 713, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (897.24, 852.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1243, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1577.89, 1042.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 417.337 CPU sec, 34.428 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517167, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 718, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (999.33, 1015.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1482, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (1472.67, 787.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 421.665 CPU sec, 33.686 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517352, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 818, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1013.40, 991.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1338, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1616.07, 1091.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 428.103 CPU sec, 40.237 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517280, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 539, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (940.45, 860.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1463, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1527.70, 808.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 421.935 CPU sec, 38.128 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517466, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 348, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (714.00, 746.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.71, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1421, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 2969)
[0000][PE] mean and std.dev: (1470.20, 596.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 423.842 CPU sec, 38.580 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517192, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1282, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1362.80, 1017.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1497, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6287)
[0000][PE] mean and std.dev: (1924.78, 1509.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 425.473 CPU sec, 38.757 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517565, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 449, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (665.75, 585.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1515, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1551.61, 688.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 422.078 CPU sec, 32.113 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517208, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 542, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (606.97, 513.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1438, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1770.30, 1028.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 433.958 CPU sec, 34.568 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517148, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 641, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (823.29, 722.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1292, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (1422.38, 734.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 431.521 CPU sec, 36.625 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517028, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 489, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (784.91, 712.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1512, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5065)
[0000][PE] mean and std.dev: (1475.67, 699.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 432.198 CPU sec, 35.787 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517965, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1079, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1160.86, 874.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1103, 3653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9299)
[0000][PE] mean and std.dev: (2032.65, 1887.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 436.449 CPU sec, 47.404 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517306, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 983, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1229.53, 1089.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1371, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (1437.79, 613.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 423.852 CPU sec, 32.649 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516890, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 611, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (818.59, 605.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1958, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7019)
[0000][PE] mean and std.dev: (1813.94, 1025.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 442.798 CPU sec, 41.167 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517020, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 847, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1312.28, 1116.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1413, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (1425.61, 624.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 435.046 CPU sec, 38.429 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517284, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 846, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1135.66, 1028.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.71, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1300, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1647.80, 1150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 422.882 CPU sec, 33.622 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517628, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 364, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (626.39, 510.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1461, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1358.63, 580.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 431.070 CPU sec, 38.468 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517414, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 450, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (795.83, 763.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1129, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1372.05, 918.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 430.581 CPU sec, 34.591 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517208, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 764, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (860.55, 957.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1124, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1688.35, 1347.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 433.577 CPU sec, 38.841 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517262, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 528, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (622.42, 495.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1843, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (2042.76, 1114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 423.110 CPU sec, 37.973 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517347, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 454, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (665.00, 529.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1199, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (283, 2348)
[0000][PE] mean and std.dev: (1266.88, 344.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 427.967 CPU sec, 38.995 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517139, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 498, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (657.00, 517.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1440, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1496.59, 545.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 445.819 CPU sec, 46.145 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517032, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 631, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (658.31, 453.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1546, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1444.93, 747.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 426.381 CPU sec, 32.856 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516746, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1038, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1137.31, 934.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.53, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1443, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (1679.95, 938.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 436.504 CPU sec, 40.482 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516698, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 430, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (637.52, 548.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 1121, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1417.08, 1123.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 416.850 CPU sec, 32.735 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517412, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 474, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (684.68, 563.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 945, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (1092.38, 539.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 437.055 CPU sec, 35.633 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517031, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 718, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (1161.14, 1009.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1345, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1289.23, 460.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 445.249 CPU sec, 39.996 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 516916, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 581, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1035.61, 997.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1355, 1673, 3312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7226)
[0000][PE] mean and std.dev: (1937.22, 1378.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 443.367 CPU sec, 37.897 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517038, 2, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 807, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (923.67, 707.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1181, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1284.94, 770.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 423.007 CPU sec, 32.732 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517473, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 667, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (807.25, 716.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.51, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1253, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (1214.32, 491.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 428.617 CPU sec, 43.642 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516901, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 902, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (1073.45, 848.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1541, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1502.44, 630.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 435.383 CPU sec, 36.238 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517089, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 387, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (585.04, 495.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1617, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1793.53, 871.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 448.722 CPU sec, 40.517 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517457, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 654, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (756.41, 578.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1467, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1895.89, 1092.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 443.167 CPU sec, 37.956 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516764, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 890, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (959.03, 766.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1158, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1435.20, 1059.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 454.039 CPU sec, 38.538 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517268, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 482, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (711.38, 661.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.75, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1616, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1745.48, 869.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 442.948 CPU sec, 34.909 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516657, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 411, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (674.97, 646.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1658, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6015)
[0000][PE] mean and std.dev: (2010.29, 1319.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 440.597 CPU sec, 34.697 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517176, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 501, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (884.78, 836.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1081, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (1072.33, 479.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 430.304 CPU sec, 36.878 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517177, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 818, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1597.21, 1803.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1720, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1656.70, 856.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 419.730 CPU sec, 34.477 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516861, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 435, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (764.36, 701.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.51, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1719, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (1445.65, 618.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 432.162 CPU sec, 31.617 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517609, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 532, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (663.44, 547.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1652, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7693)
[0000][PE] mean and std.dev: (1778.10, 1256.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 442.358 CPU sec, 41.208 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517418, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 669, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (797.96, 546.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1335, 1562, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1643.47, 659.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 425.319 CPU sec, 43.090 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517339, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1006, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (971.55, 854.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1304, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1317.12, 585.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 430.070 CPU sec, 34.432 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516756, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1320, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1175.43, 958.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1146, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1458.17, 904.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 442.767 CPU sec, 38.480 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517193, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 476, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (687.76, 531.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1223, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (1422.92, 693.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 433.967 CPU sec, 39.089 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516531, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 430, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (689.08, 685.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.93, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1385, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (1478.88, 693.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 425.313 CPU sec, 38.151 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517123, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 890, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (909.43, 723.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1125, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1238.18, 459.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 432.133 CPU sec, 39.553 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516938, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 504, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (633.51, 477.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1388, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1642.82, 854.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 443.687 CPU sec, 41.083 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517269, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 389, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (558.16, 561.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1376, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1432.62, 643.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 438.767 CPU sec, 39.590 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517658, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (570, 1072, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1275.83, 962.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1160, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1351.88, 758.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 419.850 CPU sec, 39.116 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517013, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 926, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (822.62, 672.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1338, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6619)
[0000][PE] mean and std.dev: (1515.00, 1071.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 429.603 CPU sec, 35.727 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517430, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 681, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (995.50, 896.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1383, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (1370.21, 723.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 439.234 CPU sec, 39.270 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516868, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 472, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (813.13, 756.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1565, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1397.22, 644.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 428.232 CPU sec, 39.601 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516978, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 960, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (927.48, 683.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1947, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1890.72, 1021.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 429.605 CPU sec, 36.360 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517234, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 551, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (833.43, 722.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1360, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1425.19, 601.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 436.837 CPU sec, 43.792 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517115, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 436, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (688.79, 510.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1125, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (1215.36, 657.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 427.607 CPU sec, 36.529 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517462, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 702, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (962.39, 959.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1325, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 2637)
[0000][PE] mean and std.dev: (1343.87, 500.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 428.218 CPU sec, 35.712 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517039, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 1137, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1241.81, 945.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1443, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1715.86, 1044.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 432.133 CPU sec, 34.654 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517236, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 481, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (808.03, 766.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1019, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6867)
[0000][PE] mean and std.dev: (1899.11, 1759.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 425.134 CPU sec, 31.828 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516948, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 378, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (578.28, 479.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1279, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1358.82, 608.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 416.800 CPU sec, 29.908 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516975, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 535, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (770.00, 685.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1323, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1287.05, 738.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 429.375 CPU sec, 35.698 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517419, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 650, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1102.69, 1097.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 115.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1243, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (1545.08, 1016.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 424.970 CPU sec, 34.709 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516996, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 483, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (704.12, 568.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1373, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (146, 2566)
[0000][PE] mean and std.dev: (1359.85, 442.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 423.400 CPU sec, 31.241 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517161, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1134, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1187.80, 1131.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1332, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1459.73, 779.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 423.444 CPU sec, 34.515 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517036, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 854, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (732.66, 576.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1485, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1383.27, 776.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 438.856 CPU sec, 38.249 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516591, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 365, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1911)
[0000][PE] mean and std.dev: (392.89, 287.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1358, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (1657.77, 1171.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 440.473 CPU sec, 41.824 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517226, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 933, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1136.56, 1249.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1637, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1424.56, 673.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 421.590 CPU sec, 34.194 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516746, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 716, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (800.16, 551.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1548, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1840.38, 1244.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 431.281 CPU sec, 37.764 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516716, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1141, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1085.15, 871.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.22, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1226, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (1415.65, 789.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 438.013 CPU sec, 39.616 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517432, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 1052, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1176.35, 888.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1353, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1350.59, 638.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 423.857 CPU sec, 33.897 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517353, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 868, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1045.81, 811.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1386, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1319.09, 764.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 428.205 CPU sec, 39.466 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517250, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 767, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1101.63, 1107.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1177, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1420.95, 967.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 428.565 CPU sec, 39.395 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517232, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1127, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (1072.23, 740.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1625, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (1590.88, 662.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 426.508 CPU sec, 31.098 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516847, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 674, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (845.78, 666.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 115.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1266, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1341.05, 502.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 435.249 CPU sec, 39.366 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517078, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1327, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1262.08, 1024.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1631, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1731.16, 945.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 425.016 CPU sec, 37.931 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517376, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 619, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (870.78, 881.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.69, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1254, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1335.96, 736.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 435.653 CPU sec, 40.091 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516603, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 730, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (898.31, 824.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1657, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1629.53, 654.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 439.328 CPU sec, 44.448 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517062, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 685, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (820.45, 778.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.25, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1606, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 2912)
[0000][PE] mean and std.dev: (1537.12, 486.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 428.189 CPU sec, 37.686 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517291, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 368, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (895.97, 1005.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1304, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1425.48, 915.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 438.145 CPU sec, 40.735 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517377, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 718, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (850.69, 751.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1475, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1410.64, 635.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 422.729 CPU sec, 36.323 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516710, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 412, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (771.13, 739.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1233, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1176.61, 543.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 440.649 CPU sec, 42.293 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517021, 10, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 803, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (976.88, 897.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (328, 3620, 4597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13135)
[0000][PE] mean and std.dev: (2731.20, 2384.68)
[0000][PE] low and high boundaries for proper pairs: (1, 17404)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1394, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (1239.21, 540.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 438.153 CPU sec, 37.326 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516806, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 537, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (791.92, 791.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1660, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1728.65, 927.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 448.098 CPU sec, 38.216 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517318, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 420, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (664.62, 592.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1387, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1474.67, 642.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 450.081 CPU sec, 42.513 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517183, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 592, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (704.04, 541.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1333, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1203.54, 646.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 437.080 CPU sec, 34.036 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517277, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 446, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (683.70, 675.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.27, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1452, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1434.82, 636.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 433.226 CPU sec, 38.738 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517413, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1152, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1234.39, 1003.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1036, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1204.75, 796.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 428.298 CPU sec, 41.403 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517363, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 672, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (779.33, 567.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1580, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1352.97, 594.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 433.042 CPU sec, 36.537 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517011, 0, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 437, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (538.29, 442.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1500, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1387.77, 695.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 435.791 CPU sec, 39.765 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517302, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 526, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (833.34, 730.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1195, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1598.71, 1208.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 431.944 CPU sec, 37.862 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516919, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 500, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (983.15, 912.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.06, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1560, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1287.76, 732.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 427.019 CPU sec, 37.990 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517463, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 543, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1027.63, 955.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1166, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (1182.00, 678.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 428.608 CPU sec, 34.408 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516623, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 682, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (838.97, 639.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1485, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (1384.00, 625.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 434.081 CPU sec, 35.816 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516516, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 782, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (878.38, 728.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1214, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (1306.00, 701.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 438.450 CPU sec, 41.995 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517292, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 698, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2552)
[0000][PE] mean and std.dev: (605.87, 400.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1372, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1666.33, 924.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 418.704 CPU sec, 33.429 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517232, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 421, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (555.33, 440.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1165, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5769)
[0000][PE] mean and std.dev: (1670.40, 1306.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 432.803 CPU sec, 42.085 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517355, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 825, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (1053.81, 1040.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1579, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1683.57, 896.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 428.498 CPU sec, 37.799 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516898, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 408, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (553.12, 566.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1409, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1563.14, 809.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 428.027 CPU sec, 33.152 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517612, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 590, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (709.93, 550.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1130, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (920.38, 333.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 423.565 CPU sec, 39.957 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516560, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 811, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1307.61, 1317.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1410, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1592.04, 997.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 435.336 CPU sec, 35.919 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517012, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (898, 1266, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1512.82, 1090.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1182, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1678.00, 1123.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 432.426 CPU sec, 31.569 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517171, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 947, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1009.11, 825.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1124, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1630.36, 1256.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 449.795 CPU sec, 37.655 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517238, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 689, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (768.23, 678.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.96, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1628, 3513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8649)
[0000][PE] mean and std.dev: (1987.19, 1651.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 439.341 CPU sec, 41.427 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517510, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 451, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (455.86, 244.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1360, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (1488.59, 965.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 416.745 CPU sec, 30.872 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516819, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 551, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (812.69, 676.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.79, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1417, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1517.52, 865.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 433.951 CPU sec, 36.127 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517330, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 443, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (706.50, 583.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1084, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4583)
[0000][PE] mean and std.dev: (1200.37, 758.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 429.152 CPU sec, 33.554 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517460, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 635, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (640.86, 400.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1488, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (1397.95, 620.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 442.857 CPU sec, 37.158 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517002, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 409, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (823.21, 782.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.76, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1586, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1509.68, 554.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 439.860 CPU sec, 36.205 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517227, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 934, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1079.33, 924.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.31, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1437, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (1387.60, 599.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 424.326 CPU sec, 32.314 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516983, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 683, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1295.31, 1175.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.02, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1519, 3275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8031)
[0000][PE] mean and std.dev: (2333.15, 1982.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 433.349 CPU sec, 41.486 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516786, 0, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 732, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (824.06, 648.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1342, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1360.92, 614.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 437.671 CPU sec, 39.146 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517030, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 390, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (555.97, 501.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1308, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (1442.64, 685.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 443.859 CPU sec, 36.191 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517239, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 480, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (801.45, 774.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1327, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1717.80, 1305.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 439.035 CPU sec, 36.768 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517205, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 430, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (597.50, 440.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1392, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1404.30, 788.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 436.705 CPU sec, 39.808 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516610, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 533, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (777.33, 674.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1238, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1209.73, 624.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 422.716 CPU sec, 31.496 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517288, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 516, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (723.15, 567.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1721, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (2049.75, 1091.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 429.803 CPU sec, 32.622 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517423, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 589, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (824.80, 899.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1331, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (1261.28, 522.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 423.043 CPU sec, 35.995 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516827, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 861, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (933.46, 839.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1242, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1075.50, 479.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 432.988 CPU sec, 33.863 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517340, 9, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 941, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (980.25, 883.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1280, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1440.42, 824.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 435.710 CPU sec, 37.107 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517202, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 390, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (657.43, 594.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1505, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1352.44, 583.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 438.783 CPU sec, 37.138 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517113, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 717, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (682.94, 507.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1453, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1535.76, 774.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 436.970 CPU sec, 36.428 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516712, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 766, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (898.93, 742.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1674, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1771.72, 1207.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 449.268 CPU sec, 44.116 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517254, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 583, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (722.23, 611.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 115.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1219, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1271.64, 740.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 444.593 CPU sec, 37.960 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517371, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 840, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1074.48, 945.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (546, 1554, 3094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8190)
[0000][PE] mean and std.dev: (2135.18, 2051.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10738)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1439, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (1551.70, 957.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 428.820 CPU sec, 34.569 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517410, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 322, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (684.19, 672.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1612, 2069, 6121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15139)
[0000][PE] mean and std.dev: (3168.91, 2648.34)
[0000][PE] low and high boundaries for proper pairs: (1, 19648)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1198, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (1139.12, 512.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 424.572 CPU sec, 39.551 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517312, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 925, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1137.90, 931.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1140, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1471.95, 1019.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 426.747 CPU sec, 39.304 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516626, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 434, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (656.31, 556.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1156, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1615.15, 1106.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 428.028 CPU sec, 34.844 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517164, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 902, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1028.66, 914.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 745, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7333)
[0000][PE] mean and std.dev: (1364.50, 1427.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9720)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1336, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1653.84, 1064.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 429.015 CPU sec, 36.577 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517269, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 641, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (929.04, 659.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1269, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (1346.36, 471.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 424.926 CPU sec, 36.381 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516843, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 392, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (725.54, 642.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1483, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1426.39, 736.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 429.400 CPU sec, 30.668 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517229, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 785, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (911.52, 779.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1328, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (1431.86, 672.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 441.117 CPU sec, 39.826 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517412, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 682, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (775.89, 623.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1474, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 2656)
[0000][PE] mean and std.dev: (1234.00, 407.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 447.325 CPU sec, 43.659 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517152, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 418, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (632.28, 435.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1550, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (1637.59, 974.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 431.740 CPU sec, 34.265 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516875, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1125, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1211.37, 859.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.62, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1436, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1763.58, 1155.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 418.409 CPU sec, 30.026 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516626, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 781, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (846.78, 650.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1125, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1498.81, 806.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 439.540 CPU sec, 43.944 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516587, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 997, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1193.71, 824.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1328, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1284.70, 673.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 434.435 CPU sec, 41.032 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517342, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 779, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1067.94, 868.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1310, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1485.14, 564.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 432.766 CPU sec, 38.003 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517176, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 437, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (621.91, 603.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1293, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (1286.39, 574.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 426.786 CPU sec, 43.446 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516851, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 530, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (891.00, 916.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1425, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1317.57, 665.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 427.690 CPU sec, 35.632 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516877, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 468, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (712.74, 595.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1371, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1528.09, 968.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 438.068 CPU sec, 38.442 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517447, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 697, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1784.69, 2057.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1305, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1400.60, 574.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 426.225 CPU sec, 34.105 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517030, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 606, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (849.82, 768.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.91, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1316, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1552.45, 859.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 430.478 CPU sec, 42.934 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517353, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 807, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1017.72, 964.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 2036, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (2050.63, 1073.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 428.973 CPU sec, 36.935 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516760, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 659, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (773.75, 498.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1104, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (1200.52, 455.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 419.304 CPU sec, 30.941 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517337, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 759, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (933.28, 761.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.77, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1463, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1382.67, 758.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 424.244 CPU sec, 34.738 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517266, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1006, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (992.00, 688.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1257, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1312.81, 633.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 430.193 CPU sec, 37.212 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517205, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 746, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (864.27, 778.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1320, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1339.45, 627.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 427.583 CPU sec, 32.487 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517227, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 391, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (666.85, 629.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1311, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1359.43, 665.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 432.601 CPU sec, 38.468 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517329, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 868, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (892.00, 694.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1644, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (1587.70, 577.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 421.582 CPU sec, 39.297 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516766, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 559, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5361)
[0000][PE] mean and std.dev: (1116.38, 957.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1291, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1272.57, 750.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 430.612 CPU sec, 32.048 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516963, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 580, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (848.42, 730.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1344, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (156, 2736)
[0000][PE] mean and std.dev: (1193.73, 372.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 433.149 CPU sec, 38.034 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517038, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 794, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (981.70, 947.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1400, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1495.17, 661.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 419.386 CPU sec, 36.202 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516904, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 457, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (1039.42, 1057.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.20, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1144, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1202.43, 556.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 425.091 CPU sec, 32.098 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517128, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 481, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (774.08, 857.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1118, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 2307)
[0000][PE] mean and std.dev: (994.87, 327.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 433.556 CPU sec, 37.539 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516751, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 796, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1075.30, 1049.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1357, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (1338.64, 576.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 432.762 CPU sec, 32.473 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517154, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 617, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (778.74, 736.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1955, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7063)
[0000][PE] mean and std.dev: (1970.00, 986.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 435.844 CPU sec, 39.374 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516689, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 522, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (810.11, 662.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1253, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1340.47, 966.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 423.999 CPU sec, 38.467 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516773, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 310, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (720.28, 907.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.19, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1092, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1534.32, 1009.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 427.444 CPU sec, 29.960 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517406, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 795, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (858.23, 657.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.90, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1146, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1279.00, 698.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 439.992 CPU sec, 41.641 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517605, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 555, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (898.19, 799.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1212, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (1228.11, 696.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 438.590 CPU sec, 35.393 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517271, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 490, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (569.86, 385.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1166, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1351.22, 805.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 437.301 CPU sec, 36.529 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517321, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 797, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (829.00, 616.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1612, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1561.17, 752.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 436.157 CPU sec, 42.283 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516948, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 513, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (605.38, 480.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1118, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (1200.00, 558.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 413.831 CPU sec, 34.001 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517065, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 711, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (838.31, 574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1195, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (1205.29, 399.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 431.625 CPU sec, 40.533 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517254, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 590, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (767.05, 676.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.31, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1612, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5741)
[0000][PE] mean and std.dev: (1716.12, 997.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 429.459 CPU sec, 33.180 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516964, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1427, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7128)
[0000][PE] mean and std.dev: (1650.46, 1465.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1474, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (1459.44, 583.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 432.848 CPU sec, 36.255 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517307, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 467, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (985.83, 1009.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.59, 115.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1533, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1731.37, 816.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 431.280 CPU sec, 38.049 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517375, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 545, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (535.68, 407.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1854, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6149)
[0000][PE] mean and std.dev: (2158.38, 1558.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 428.884 CPU sec, 43.449 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517414, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 338, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (870.19, 1008.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1204, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (1248.40, 517.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 431.100 CPU sec, 35.660 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517284, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 467, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2323)
[0000][PE] mean and std.dev: (502.88, 415.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1221, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (1255.00, 497.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 429.832 CPU sec, 36.579 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517283, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 596, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2371)
[0000][PE] mean and std.dev: (691.46, 484.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1715, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1770.55, 925.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 422.623 CPU sec, 33.344 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516782, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 410, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (553.65, 406.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1227, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (1149.86, 673.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 432.869 CPU sec, 38.991 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517207, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 325, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (435.32, 319.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1264, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (1282.28, 516.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 433.284 CPU sec, 37.313 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517165, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 692, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (806.81, 747.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1287, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1488.07, 790.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 427.302 CPU sec, 35.066 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517150, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 818, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (769.50, 596.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1262, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1391.40, 755.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 433.267 CPU sec, 40.521 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516818, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 682, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (888.66, 829.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1448, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1555.36, 1027.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 438.724 CPU sec, 41.647 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517137, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 546, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (709.16, 545.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1156, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (1089.81, 542.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 439.353 CPU sec, 38.981 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517001, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 579, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (745.94, 705.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.86, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1726, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6048)
[0000][PE] mean and std.dev: (1949.58, 1345.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 438.657 CPU sec, 35.181 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517116, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 412, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (495.74, 332.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 115.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1523, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1356.19, 648.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 432.166 CPU sec, 37.821 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517067, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 875, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (976.69, 718.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1390, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1313.24, 435.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 429.792 CPU sec, 40.766 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517192, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1099, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1050.62, 916.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1504, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1619.22, 882.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 433.953 CPU sec, 36.686 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517046, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 476, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (571.27, 424.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.44, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1226, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1520.95, 811.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 447.380 CPU sec, 45.869 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517347, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 496, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2130)
[0000][PE] mean and std.dev: (519.72, 324.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1564, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1563.65, 830.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 434.992 CPU sec, 39.249 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517236, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 647, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (770.32, 670.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1966, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (2006.52, 1102.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 440.530 CPU sec, 35.909 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517285, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 652, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (829.82, 655.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1248, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1275.85, 704.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 436.316 CPU sec, 42.516 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517020, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1167, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1049.62, 773.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1528, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1548.14, 830.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 431.710 CPU sec, 38.569 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517298, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 345, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3004)
[0000][PE] mean and std.dev: (727.71, 703.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1429, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1331.53, 551.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 425.325 CPU sec, 36.774 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517412, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 572, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (967.03, 857.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1688, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1533.32, 474.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 433.942 CPU sec, 37.588 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517258, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1071, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1042.46, 845.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1189, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1306.23, 723.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 439.208 CPU sec, 43.725 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517252, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 869, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (1122.44, 1082.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1232, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6291)
[0000][PE] mean and std.dev: (1644.64, 1129.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 424.325 CPU sec, 37.489 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516932, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 408, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (724.08, 629.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1435, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (1296.00, 641.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 432.136 CPU sec, 35.537 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517185, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 684, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (974.23, 915.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1501, 4296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10658)
[0000][PE] mean and std.dev: (2597.47, 2027.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 435.061 CPU sec, 33.803 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517432, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 735, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (980.26, 794.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1826, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (1533.81, 756.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 432.599 CPU sec, 36.109 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517480, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 384, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2236)
[0000][PE] mean and std.dev: (577.44, 492.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1523, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1731.76, 672.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 428.154 CPU sec, 42.144 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516964, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 602, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (820.81, 767.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1246, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (1206.12, 528.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 431.549 CPU sec, 32.618 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517466, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 938, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (998.16, 767.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.19, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1112, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1253.16, 938.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 434.833 CPU sec, 38.485 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517279, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 982, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1196.74, 1094.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1242, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (1224.68, 494.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 440.372 CPU sec, 40.517 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516995, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 556, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (702.07, 498.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1341, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (1321.50, 655.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 431.815 CPU sec, 32.155 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516927, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 723, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1077.00, 963.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.51, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1425, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1543.29, 881.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 430.775 CPU sec, 35.089 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517050, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 980, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (955.60, 684.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (520, 1191, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1372.61, 1142.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 426.873 CPU sec, 35.501 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517003, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 606, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (860.15, 657.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.76, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1438, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (1359.42, 430.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 433.708 CPU sec, 42.310 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517471, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 584, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (641.90, 538.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.70, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1518, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1585.44, 643.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 431.525 CPU sec, 35.594 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517720, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 379, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (758.00, 758.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.91, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1702, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1696.67, 813.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 442.418 CPU sec, 44.457 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517181, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 415, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1025.21, 1049.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1185, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1125.05, 458.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 426.741 CPU sec, 38.655 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517531, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 394, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2042)
[0000][PE] mean and std.dev: (534.45, 410.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1231, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1347.12, 626.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 421.599 CPU sec, 31.965 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517064, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 365, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1054.43, 1119.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1297, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (1346.48, 681.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 430.298 CPU sec, 37.262 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517240, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 807, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1097.31, 916.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1611, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5625)
[0000][PE] mean and std.dev: (1909.10, 1176.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 445.824 CPU sec, 43.863 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517247, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 454, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (691.74, 702.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1280, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 2374)
[0000][PE] mean and std.dev: (1124.42, 323.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 435.372 CPU sec, 40.924 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516779, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 970, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1138.71, 895.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 988, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (898.71, 412.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 426.186 CPU sec, 39.176 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517251, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 484, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (980.68, 1048.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1463, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5988)
[0000][PE] mean and std.dev: (1933.41, 1312.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 444.124 CPU sec, 43.083 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517073, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 563, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (983.04, 885.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1357, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (1258.35, 558.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 437.036 CPU sec, 42.165 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516785, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 526, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1112.76, 1229.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1208, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (1676.09, 1114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 434.311 CPU sec, 35.128 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516904, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 474, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (625.35, 447.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1207, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (1127.58, 519.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 435.727 CPU sec, 38.697 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517023, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 333, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1699)
[0000][PE] mean and std.dev: (421.50, 302.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1296, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (1471.30, 908.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 417.830 CPU sec, 29.554 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517523, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 368, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (521.55, 471.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.75, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1470, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1329.79, 751.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 426.106 CPU sec, 38.546 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516991, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 594, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (907.79, 711.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.93, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1499, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (1532.00, 691.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 415.821 CPU sec, 31.063 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517644, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 624, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (991.23, 819.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1421, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (1391.92, 789.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 423.838 CPU sec, 36.797 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517020, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 609, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (944.76, 983.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1301, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1527.89, 870.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 417.164 CPU sec, 29.173 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517327, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 405, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (396.07, 238.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1906, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7445)
[0000][PE] mean and std.dev: (2033.92, 1203.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 422.758 CPU sec, 35.269 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516867, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 476, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (980.73, 1081.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1525, 1632, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1935.39, 755.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 416.583 CPU sec, 29.270 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517568, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 337, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (598.03, 581.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1243, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1445.07, 803.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 411.969 CPU sec, 31.725 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517112, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 611, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (980.28, 915.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.45, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1206, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1054.00, 617.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 418.633 CPU sec, 33.346 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517244, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 853, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (930.87, 853.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.94, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1513, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1697.89, 1092.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 422.875 CPU sec, 30.745 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516851, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 536, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (840.12, 639.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1401, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6106)
[0000][PE] mean and std.dev: (1479.88, 931.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 422.331 CPU sec, 36.213 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517065, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 695, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (808.42, 696.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1084, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1434.06, 1124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 431.637 CPU sec, 44.725 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517676, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 380, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (828.28, 726.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1338, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1333.63, 418.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 423.330 CPU sec, 35.841 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516952, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 621, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (750.06, 714.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1779, 2873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (1978.92, 1241.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 416.123 CPU sec, 29.617 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517402, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 835, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (867.87, 699.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.23, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1175, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (1072.62, 456.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 424.049 CPU sec, 38.104 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517142, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 732, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (759.84, 548.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1962, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8554)
[0000][PE] mean and std.dev: (2186.00, 1333.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 421.201 CPU sec, 35.832 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517428, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 404, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (694.37, 709.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1177, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1308.76, 714.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 424.464 CPU sec, 41.888 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517096, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 777, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (948.18, 816.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1580, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (1532.59, 623.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 415.055 CPU sec, 29.608 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517249, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 701, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (992.69, 905.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1281, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1337.56, 493.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 417.500 CPU sec, 30.998 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517045, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 478, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (779.28, 617.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1411, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1470.90, 1023.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 419.674 CPU sec, 35.741 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517179, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 506, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (871.43, 931.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1445, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7898)
[0000][PE] mean and std.dev: (1760.93, 1276.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 419.251 CPU sec, 31.133 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517263, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 682, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3048)
[0000][PE] mean and std.dev: (783.48, 523.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1657, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1642.84, 716.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 423.099 CPU sec, 38.622 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517378, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 785, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (667.60, 379.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1600, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1725.57, 777.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 414.946 CPU sec, 30.365 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517164, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1009, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1213.59, 1134.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1341, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1763.86, 1044.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 425.711 CPU sec, 37.165 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516843, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 957, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (952.05, 787.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1509, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1530.43, 936.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 423.382 CPU sec, 39.524 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516849, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 534, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (811.87, 752.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.95, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1315, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (1296.50, 423.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 419.006 CPU sec, 32.935 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517051, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 393, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (714.42, 583.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1517, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1880.15, 919.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 420.968 CPU sec, 34.214 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517039, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 888, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (985.55, 706.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1422, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1659.43, 957.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 423.650 CPU sec, 37.074 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516855, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 549, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1011.79, 1112.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1554, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1498.85, 729.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 419.651 CPU sec, 35.978 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516865, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 569, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (727.64, 639.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1298, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (1291.70, 545.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 424.558 CPU sec, 33.682 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516782, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 606, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (925.02, 914.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1679, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7024)
[0000][PE] mean and std.dev: (1786.95, 1119.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 418.806 CPU sec, 34.958 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516999, 11, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 358, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2309)
[0000][PE] mean and std.dev: (545.03, 469.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (516, 1420, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1396.90, 1195.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7668)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1571, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1580.61, 713.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 414.312 CPU sec, 30.705 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516935, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 880, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (924.60, 702.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.26, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1745, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5923)
[0000][PE] mean and std.dev: (1955.67, 1434.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 425.336 CPU sec, 37.852 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517219, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 778, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (989.59, 948.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1200, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1765.67, 1018.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 418.783 CPU sec, 34.122 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517183, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 534, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (694.83, 609.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1232, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1284.38, 666.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 420.957 CPU sec, 33.715 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517416, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 480, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (938.81, 878.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1332, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1338.35, 502.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 427.647 CPU sec, 41.644 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516773, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 368, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (977.36, 1059.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1220, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1412.55, 719.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 434.514 CPU sec, 39.587 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517154, 4, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 703, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (869.79, 765.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1363, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1668.09, 898.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 423.580 CPU sec, 33.652 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517536, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 533, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (879.44, 852.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1108, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (1314.33, 478.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 424.730 CPU sec, 33.689 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516726, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 824, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1101.67, 968.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1355, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (1393.57, 593.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 436.380 CPU sec, 40.509 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517518, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 443, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (744.54, 681.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1367, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1890.05, 1354.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 424.531 CPU sec, 33.959 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517035, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 704, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (855.52, 596.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1265, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1269.35, 589.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 427.060 CPU sec, 37.399 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517010, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 404, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (878.72, 996.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1766, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (2053.44, 1175.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 426.925 CPU sec, 42.827 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517471, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 377, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (588.16, 588.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1263, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1406.37, 774.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 420.445 CPU sec, 29.860 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517557, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 649, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1112.03, 1117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1276, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (1352.04, 466.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 430.885 CPU sec, 42.332 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517152, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 853, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (973.76, 787.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1705, 3454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8010)
[0000][PE] mean and std.dev: (2227.96, 1611.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 417.508 CPU sec, 31.606 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517106, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 874, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (769.57, 643.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1582, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1496.91, 701.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 425.622 CPU sec, 34.968 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516332, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 744, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (886.50, 703.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1025, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 2159)
[0000][PE] mean and std.dev: (920.75, 336.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 441.741 CPU sec, 37.304 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517284, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 418, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (740.45, 676.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.00, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1116, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1210.30, 477.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 446.733 CPU sec, 37.743 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517503, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 916, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (1103.42, 909.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1340, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1718.17, 1239.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 446.699 CPU sec, 43.125 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517658, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 508, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (678.62, 507.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1734, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (2074.22, 1133.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 435.436 CPU sec, 32.026 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516874, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 784, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (729.52, 490.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1436, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1531.24, 883.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 440.564 CPU sec, 41.579 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516852, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 694, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (941.90, 814.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1145, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (1185.85, 563.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 430.007 CPU sec, 33.827 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516835, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 793, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1017.90, 947.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1338, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1407.29, 1029.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 435.692 CPU sec, 43.817 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517056, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 684, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (927.73, 781.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1390, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1530.33, 791.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 423.507 CPU sec, 33.235 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517278, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 394, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (813.12, 912.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1485, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (1530.00, 863.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 430.481 CPU sec, 32.431 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517270, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 705, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (857.66, 660.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.49, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1261, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1621.57, 843.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 432.690 CPU sec, 39.690 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517089, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 531, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (664.85, 426.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1430, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4728)
[0000][PE] mean and std.dev: (1589.92, 981.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 435.541 CPU sec, 36.802 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516935, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 385, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (827.51, 892.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1301, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1542.62, 975.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 423.446 CPU sec, 39.892 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516757, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 546, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (1195.44, 1401.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.76, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1243, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (1409.33, 620.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 441.867 CPU sec, 43.568 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516743, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 392, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (840.31, 834.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1350, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (1246.55, 456.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 435.542 CPU sec, 33.268 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517522, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (650, 943, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1665.32, 1710.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1542, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1563.42, 945.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 435.328 CPU sec, 38.973 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516920, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 488, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (780.18, 712.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1462, 3260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7568)
[0000][PE] mean and std.dev: (1951.91, 1337.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 425.047 CPU sec, 37.473 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516889, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 837, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (1205.00, 1142.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1391, 1826, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7058)
[0000][PE] mean and std.dev: (2088.81, 1312.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 423.035 CPU sec, 32.916 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517056, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 704, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (957.57, 876.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1539, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1486.23, 950.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 435.352 CPU sec, 40.296 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517184, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 468, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (565.77, 423.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1313, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6364)
[0000][PE] mean and std.dev: (1835.24, 1199.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 433.693 CPU sec, 36.252 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517326, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 810, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (968.68, 714.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1729, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1854.90, 1025.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 426.491 CPU sec, 30.557 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516963, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 747, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (942.54, 793.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1034, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1324.69, 742.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 420.642 CPU sec, 34.002 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516908, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 515, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (607.16, 403.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1662, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1345.16, 697.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 428.094 CPU sec, 31.920 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516919, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 534, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (818.60, 703.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1075, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1289.73, 854.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 421.253 CPU sec, 32.952 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517542, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 494, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (787.03, 713.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1415, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1599.70, 1027.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 425.798 CPU sec, 30.499 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517091, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 751, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6570)
[0000][PE] mean and std.dev: (1181.08, 1444.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 1974, 4039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11167)
[0000][PE] mean and std.dev: (2175.36, 1917.04)
[0000][PE] low and high boundaries for proper pairs: (1, 14731)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1762, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1597.28, 506.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 423.795 CPU sec, 32.463 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517166, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 735, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1048.73, 987.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1374, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6661)
[0000][PE] mean and std.dev: (1583.63, 1074.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 432.659 CPU sec, 36.342 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516881, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1128, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1132.11, 983.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.89, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1644, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1672.00, 1004.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 454.197 CPU sec, 38.205 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516940, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 439, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (761.41, 694.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.49, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1442, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1501.74, 716.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 441.881 CPU sec, 37.531 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517168, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 845, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (927.47, 689.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1338, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (1318.72, 448.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 436.680 CPU sec, 34.633 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517055, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 812, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (810.88, 630.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1669, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1783.29, 1010.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 444.684 CPU sec, 40.845 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517080, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 387, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (693.46, 646.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1345, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (1407.75, 734.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 434.849 CPU sec, 32.570 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517102, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 964, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1027.29, 783.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.95, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1102, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (1254.33, 535.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 423.066 CPU sec, 31.311 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517579, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (550, 1447, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1678.61, 1439.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1332, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (1659.81, 1052.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 417.359 CPU sec, 34.015 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517400, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 408, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (627.05, 534.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1683, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (1534.88, 524.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 432.608 CPU sec, 34.890 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517140, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 787, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (966.08, 601.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1281, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (1226.60, 495.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 444.100 CPU sec, 41.309 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517150, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 548, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (1120.42, 1215.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1464, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1674.85, 845.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 442.117 CPU sec, 33.809 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517473, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 530, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (780.97, 604.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1207, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1601.60, 1072.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 432.039 CPU sec, 37.008 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517072, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 982, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (1195.50, 1195.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1352, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (1344.59, 696.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 430.513 CPU sec, 33.572 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516944, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 881, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1022.67, 886.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.90, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 971, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (1142.05, 810.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 425.645 CPU sec, 32.296 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516937, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 779, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (667.04, 477.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1160, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1179.14, 625.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 428.403 CPU sec, 37.659 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517667, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 632, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (894.52, 854.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1517, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1633.45, 972.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 433.703 CPU sec, 44.654 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517342, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 551, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (749.00, 662.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1711, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1761.71, 1076.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 425.365 CPU sec, 32.038 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516984, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 817, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (844.21, 658.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1232, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (1389.88, 746.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 422.336 CPU sec, 30.707 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517093, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1106, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1156.96, 838.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1673, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1770.22, 916.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 435.756 CPU sec, 39.978 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517005, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 611, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (863.07, 675.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.93, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1241, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1414.62, 607.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 429.558 CPU sec, 35.456 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517053, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 708, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1320.73, 1334.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1154, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (1139.34, 525.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 434.092 CPU sec, 39.275 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517112, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 718, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (866.59, 612.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1067, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (1324.12, 718.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 433.145 CPU sec, 42.096 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517315, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 786, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1010.66, 896.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1638, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1749.08, 1016.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 426.604 CPU sec, 34.302 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517122, 10, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 530, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (733.50, 627.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2445, 3388, 5669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12117)
[0000][PE] mean and std.dev: (3696.10, 2160.56)
[0000][PE] low and high boundaries for proper pairs: (1, 15341)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1361, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1715.00, 1014.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 431.940 CPU sec, 33.244 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517264, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 575, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (749.00, 657.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1611, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1775.00, 1102.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 420.155 CPU sec, 31.574 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516886, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 793, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1095.77, 785.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1579, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1737.65, 904.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 429.045 CPU sec, 30.149 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517132, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 716, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1139.74, 1297.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1166, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (1103.33, 482.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 437.902 CPU sec, 32.712 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516717, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 1065, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1308.65, 1195.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1181, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (1235.41, 563.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 441.239 CPU sec, 34.457 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517419, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 826, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1155.37, 1231.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.71, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1063, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1053.64, 579.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 440.039 CPU sec, 34.530 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517102, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 656, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (886.56, 839.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1240, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1673.20, 1363.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 437.768 CPU sec, 35.498 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516901, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 499, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (629.00, 483.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.48, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1421, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1562.14, 991.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 437.684 CPU sec, 36.594 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517093, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 785, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (911.97, 770.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.25, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1485, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (1474.79, 485.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 429.785 CPU sec, 31.289 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517363, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 396, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1944)
[0000][PE] mean and std.dev: (490.44, 322.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1621, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1635.33, 975.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 426.255 CPU sec, 35.994 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517053, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 957, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (1003.72, 909.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1397, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1477.64, 764.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 424.871 CPU sec, 31.322 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517141, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (520, 1300, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6718)
[0000][PE] mean and std.dev: (1493.87, 1365.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1208, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1711.18, 1255.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 430.994 CPU sec, 33.686 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517427, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 525, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (804.41, 918.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1654, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1747.64, 1104.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 432.724 CPU sec, 41.366 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517472, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 455, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (786.04, 746.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1343, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6083)
[0000][PE] mean and std.dev: (1883.39, 1236.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 418.261 CPU sec, 33.164 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517090, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 877, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (1093.41, 1047.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1724, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1668.82, 789.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 426.720 CPU sec, 34.286 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517280, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 448, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1973)
[0000][PE] mean and std.dev: (460.07, 425.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 115.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1479, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (1310.45, 508.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 426.323 CPU sec, 32.874 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517331, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 797, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1108.48, 1114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1430, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1490.50, 725.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 430.786 CPU sec, 34.374 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517071, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 900, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1011.83, 786.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1528, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1292.95, 414.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 428.981 CPU sec, 34.629 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517094, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 618, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (861.80, 732.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1208, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1447.10, 856.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 421.760 CPU sec, 32.641 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516568, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 439, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (676.74, 558.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1328, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1514.65, 624.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 440.494 CPU sec, 39.606 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517143, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 477, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (682.49, 630.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1569, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1619.25, 768.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 431.995 CPU sec, 37.204 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517516, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 625, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2673)
[0000][PE] mean and std.dev: (698.56, 592.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1213, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (1516.52, 924.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 425.262 CPU sec, 38.558 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517144, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 429, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (886.05, 911.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1629, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1766.00, 654.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 433.678 CPU sec, 38.274 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516869, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1082, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1331.59, 1172.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1349, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1539.80, 647.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 435.773 CPU sec, 39.506 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517133, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 905, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1045.00, 1022.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1672, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1755.84, 991.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 429.518 CPU sec, 33.825 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517543, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 412, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1731)
[0000][PE] mean and std.dev: (456.86, 335.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.62, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1166, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (1164.91, 680.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 432.213 CPU sec, 37.734 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517140, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 640, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (805.61, 661.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1434, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (1441.19, 714.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 421.567 CPU sec, 34.597 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516721, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 802, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (817.54, 593.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1877, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1904.65, 660.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 441.800 CPU sec, 39.995 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517692, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 631, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (779.80, 656.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1739, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1688.94, 723.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 427.169 CPU sec, 35.545 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517207, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 717, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (782.00, 642.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1464, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1567.26, 826.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 429.843 CPU sec, 31.113 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516487, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 531, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1058.87, 1029.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1199, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1608.88, 905.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 428.755 CPU sec, 36.575 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517023, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 777, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1000.88, 888.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (478, 3389, 4228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11728)
[0000][PE] mean and std.dev: (2795.70, 2151.34)
[0000][PE] low and high boundaries for proper pairs: (1, 15478)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1555, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6255)
[0000][PE] mean and std.dev: (1730.19, 1519.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 430.797 CPU sec, 35.948 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517259, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 417, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (817.71, 766.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.69, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1924, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1759.65, 1014.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 429.737 CPU sec, 32.131 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517114, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 581, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (703.70, 549.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.59, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1234, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1381.92, 710.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 431.828 CPU sec, 35.373 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516950, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 597, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (879.31, 812.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1678, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1520.94, 647.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 420.294 CPU sec, 31.094 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516683, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1207, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5581)
[0000][PE] mean and std.dev: (1129.83, 882.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1690, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1530.88, 750.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 437.406 CPU sec, 34.877 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517064, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 443, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (590.33, 544.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.72, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 2292, 3580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8084)
[0000][PE] mean and std.dev: (2505.42, 1555.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 439.566 CPU sec, 43.601 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516751, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 505, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (791.00, 639.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.70, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1387, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1282.52, 694.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 434.917 CPU sec, 32.535 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516620, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1105, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (1011.86, 801.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.54, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1524, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1538.44, 772.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 423.790 CPU sec, 36.146 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517392, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 457, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (789.43, 653.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.89, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1430, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5279)
[0000][PE] mean and std.dev: (1659.57, 784.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 431.621 CPU sec, 39.222 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517364, 1, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 545, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (851.80, 686.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1558, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1764.57, 987.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 434.494 CPU sec, 35.570 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517622, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 733, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1103.64, 1250.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1513, 3463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8383)
[0000][PE] mean and std.dev: (2168.28, 1899.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 431.146 CPU sec, 39.609 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516965, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1029, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (1232.73, 1050.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.98, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1303, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1376.04, 546.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 422.595 CPU sec, 34.825 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517067, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 860, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (897.03, 706.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1549, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6462)
[0000][PE] mean and std.dev: (1738.62, 1028.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 422.029 CPU sec, 29.960 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517114, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 770, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (870.50, 672.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.31, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (161, 384, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (634.78, 645.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1909, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6452)
[0000][PE] mean and std.dev: (2231.00, 1405.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 433.232 CPU sec, 34.206 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516993, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 461, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (844.30, 755.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1383, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (1524.23, 609.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 436.026 CPU sec, 31.940 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517054, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 730, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1060.79, 955.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1407, 1927, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1919.63, 888.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 450.681 CPU sec, 38.875 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517187, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 701, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (796.18, 562.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1311, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1576.90, 889.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 445.876 CPU sec, 43.688 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516509, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 452, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (667.97, 613.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.91, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1126, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1109.53, 477.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 442.237 CPU sec, 39.024 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517396, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 991, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1074.60, 906.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1297, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (1374.56, 534.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 429.343 CPU sec, 33.593 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516898, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 435, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1233.08, 1512.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1142, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1295.00, 655.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 428.421 CPU sec, 34.314 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516947, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 305, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (664.91, 676.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1773, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1798.73, 797.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 433.375 CPU sec, 36.438 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517443, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1233, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1320.55, 1177.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1282, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1447.07, 911.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 436.570 CPU sec, 40.977 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516942, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 872, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (831.14, 662.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1320, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (1277.47, 397.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 430.523 CPU sec, 36.290 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516861, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 544, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (802.58, 725.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1255, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1529.12, 801.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 436.430 CPU sec, 36.543 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517447, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1014, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1044.17, 827.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1345, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (1361.21, 569.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 427.309 CPU sec, 37.954 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517446, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 832, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1160.35, 1064.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1604, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1681.00, 852.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 434.306 CPU sec, 36.926 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516602, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 735, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (828.29, 700.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1394, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1530.05, 756.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 432.544 CPU sec, 38.874 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517118, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 818, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (810.09, 637.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1470, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (1931.80, 1309.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 419.710 CPU sec, 31.238 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517317, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 518, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (847.19, 726.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.90, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1258, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1410.37, 708.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 428.454 CPU sec, 35.071 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517337, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 910, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (1003.66, 780.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1405, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (1433.18, 577.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 432.631 CPU sec, 34.029 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517195, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 729, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (971.94, 837.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1275, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1335.65, 625.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 437.395 CPU sec, 38.751 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517026, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 348, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (515.37, 444.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1384, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (1474.35, 683.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 421.943 CPU sec, 35.211 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517112, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 489, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (745.19, 663.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1268, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1561.93, 870.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 428.229 CPU sec, 33.083 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206128
	[0000][ M::kt_pipeline] read 1206128 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517262, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 857, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (1494.04, 1507.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1928, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7010)
[0000][PE] mean and std.dev: (1922.25, 1123.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 443.733 CPU sec, 43.906 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517261, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 641, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1003.89, 885.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1440, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (1703.32, 877.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206128 reads in 433.310 CPU sec, 32.995 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517095, 8, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 419, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (685.72, 564.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1232, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (1194.37, 451.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 442.765 CPU sec, 41.204 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516992, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 555, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (723.50, 532.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1376, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1472.96, 872.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 431.630 CPU sec, 39.867 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517141, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 779, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (951.48, 725.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (401, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 857)
[0000][PE] mean and std.dev: (480.13, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1692, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1455.83, 751.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 426.294 CPU sec, 37.207 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517550, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 535, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (754.51, 615.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 1232, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1111.09, 656.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 432.337 CPU sec, 37.658 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516826, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 479, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2078)
[0000][PE] mean and std.dev: (646.39, 518.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1249, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1298.18, 433.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 438.008 CPU sec, 38.714 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517379, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (617, 916, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1017.97, 758.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1483, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7148)
[0000][PE] mean and std.dev: (2028.24, 1441.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 434.118 CPU sec, 33.016 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517469, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 573, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (806.29, 698.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1399, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5176)
[0000][PE] mean and std.dev: (1678.04, 1164.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 426.055 CPU sec, 35.939 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517026, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 732, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (779.40, 592.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1487, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1650.64, 894.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 430.405 CPU sec, 39.673 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517459, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 715, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1030.44, 1067.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.89, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1159, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (1316.42, 838.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 423.926 CPU sec, 35.026 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516884, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 347, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (657.10, 619.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1304, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (448, 2123)
[0000][PE] mean and std.dev: (1185.95, 333.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 426.029 CPU sec, 30.778 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516987, 10, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 894, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1003.03, 828.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1140, 1576, 3965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9615)
[0000][PE] mean and std.dev: (2655.60, 2568.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12928)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1214, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1176.74, 590.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 429.191 CPU sec, 34.541 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516924, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 974, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5298)
[0000][PE] mean and std.dev: (1236.85, 1137.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1270, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1353.71, 769.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 442.238 CPU sec, 36.779 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517595, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 942, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (1080.34, 792.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1304, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5043)
[0000][PE] mean and std.dev: (1490.09, 641.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 427.739 CPU sec, 40.678 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517423, 6, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 687, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (830.94, 729.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1459, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1799.49, 1105.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 429.492 CPU sec, 34.122 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516919, 5, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 790, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2057)
[0000][PE] mean and std.dev: (634.79, 277.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1395, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6118)
[0000][PE] mean and std.dev: (1818.31, 1323.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 437.461 CPU sec, 37.163 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517288, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 415, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (717.12, 734.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1559, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1673.00, 838.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 427.637 CPU sec, 36.662 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517201, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 485, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (742.75, 568.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.27, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1218, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1384.65, 748.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 420.669 CPU sec, 35.629 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517153, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 587, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (841.41, 791.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1314, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7709)
[0000][PE] mean and std.dev: (1701.82, 1137.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 441.433 CPU sec, 41.212 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517604, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 897, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1196.74, 1075.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1627, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1772.23, 918.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 432.537 CPU sec, 39.782 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517417, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 507, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (783.48, 614.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.59, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1166, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1250.10, 573.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 434.643 CPU sec, 40.904 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517421, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 593, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (928.47, 762.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1382, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1299.72, 581.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 425.356 CPU sec, 35.377 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516651, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 483, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (859.97, 753.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.89, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1600, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1527.52, 758.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 432.986 CPU sec, 31.115 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517725, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 811, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (979.50, 862.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 115.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1223, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (1149.62, 357.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 432.118 CPU sec, 35.057 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517300, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 644, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (940.37, 863.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1757, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1431.90, 613.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 438.146 CPU sec, 40.415 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517147, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 832, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1253.96, 1212.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.00, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1316, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1462.43, 844.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 433.879 CPU sec, 32.584 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517235, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 720, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1012.42, 772.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1713, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1686.44, 848.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 425.985 CPU sec, 29.937 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517045, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 559, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2214)
[0000][PE] mean and std.dev: (613.84, 454.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1590, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7513)
[0000][PE] mean and std.dev: (1962.42, 1311.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 426.972 CPU sec, 37.835 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517432, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 595, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (963.33, 1026.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1523, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (1739.92, 1248.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 429.512 CPU sec, 37.748 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517469, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 832, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (910.63, 677.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1795, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1760.29, 867.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 428.104 CPU sec, 33.850 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517442, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 633, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1138.59, 1052.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1609, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1583.44, 714.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 431.183 CPU sec, 38.383 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516860, 0, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1082, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1036.74, 792.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1332, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1323.59, 584.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 419.922 CPU sec, 29.796 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517102, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 495, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (823.45, 761.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1239, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1329.50, 762.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 441.121 CPU sec, 44.583 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517412, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1095, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1264.38, 1066.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1418, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1599.50, 649.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 433.970 CPU sec, 34.384 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516810, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 898, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (946.57, 724.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1282, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1338.25, 735.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 434.272 CPU sec, 33.271 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517084, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1197, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1238.78, 1000.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1412, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1415.25, 724.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 422.899 CPU sec, 30.463 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517160, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 733, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1044.62, 1098.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1341, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1485.81, 857.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 425.174 CPU sec, 35.619 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516819, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 919, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (889.52, 665.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 1616, 3642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8342)
[0000][PE] mean and std.dev: (2528.84, 2032.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 429.490 CPU sec, 30.079 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517854, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 468, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (676.30, 503.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1358, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1314.04, 630.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 435.425 CPU sec, 41.222 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517268, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 452, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (795.56, 820.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1410, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1712.22, 950.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 427.140 CPU sec, 34.837 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517056, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1292, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (1395.54, 1241.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 1840, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (1788.31, 682.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 430.607 CPU sec, 37.796 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517380, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1088, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1042.75, 881.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1249, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (1330.43, 598.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 436.612 CPU sec, 41.991 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517540, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 573, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (875.73, 717.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1489, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1440.56, 668.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 440.246 CPU sec, 50.452 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516959, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 329, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2135)
[0000][PE] mean and std.dev: (503.78, 427.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1187, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (1112.63, 516.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 439.162 CPU sec, 46.751 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517011, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 401, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (658.81, 716.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1566, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (1609.93, 801.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 436.942 CPU sec, 50.701 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517613, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 417, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (964.14, 937.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1264, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1213.83, 457.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 422.528 CPU sec, 44.822 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516893, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 716, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (786.58, 620.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1479, 3290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8616)
[0000][PE] mean and std.dev: (2091.04, 1928.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 429.228 CPU sec, 44.950 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517225, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 338, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (822.22, 827.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 115.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1596, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5387)
[0000][PE] mean and std.dev: (1643.96, 1022.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 442.276 CPU sec, 56.840 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517010, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 449, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (808.66, 728.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1147, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (1031.17, 391.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 437.998 CPU sec, 53.999 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517207, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 459, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (688.83, 709.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.18, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1515, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7275)
[0000][PE] mean and std.dev: (1852.60, 1498.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 444.801 CPU sec, 62.780 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517366, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 474, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (787.22, 580.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 115.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1087, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (1168.38, 644.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 434.152 CPU sec, 54.918 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517351, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 448, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (894.53, 820.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (480.94, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1284, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (1369.82, 653.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 437.877 CPU sec, 55.003 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516503, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 783, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5852)
[0000][PE] mean and std.dev: (1188.25, 1161.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1260, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (1269.00, 490.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 429.799 CPU sec, 49.614 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517239, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 909, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (865.70, 656.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1270, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (1319.41, 477.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 435.669 CPU sec, 47.941 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517559, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 435, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (944.02, 886.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1653, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (2040.26, 1179.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 439.915 CPU sec, 47.512 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516640, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 737, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1090.16, 1160.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 2597, 4142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12026)
[0000][PE] mean and std.dev: (2321.00, 2161.15)
[0000][PE] low and high boundaries for proper pairs: (1, 15968)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1299, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1339.67, 747.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 438.924 CPU sec, 47.651 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517096, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 477, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (873.19, 692.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1328, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1406.50, 785.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 427.051 CPU sec, 46.789 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516784, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 461, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (654.29, 515.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1527, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1525.10, 712.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 431.854 CPU sec, 46.921 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516921, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 722, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (843.67, 547.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1168, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1389.53, 910.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 432.063 CPU sec, 41.365 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517007, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 757, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (962.76, 781.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1128, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1240.71, 564.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 425.524 CPU sec, 39.717 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517198, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 930, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1067.80, 869.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.74, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1700, 2657, 5072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11816)
[0000][PE] mean and std.dev: (3084.64, 2194.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15188)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1493, 3621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8765)
[0000][PE] mean and std.dev: (2045.13, 1237.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 430.444 CPU sec, 42.174 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517075, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 489, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (613.81, 479.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1268, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1436.21, 609.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 437.227 CPU sec, 47.708 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517479, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 434, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (715.46, 709.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1381, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1434.20, 631.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 430.620 CPU sec, 40.960 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517363, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 655, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (835.92, 726.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1637, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1583.31, 756.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 443.826 CPU sec, 47.446 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517010, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 910, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1038.37, 919.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1277, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (1442.24, 911.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 442.821 CPU sec, 48.866 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517696, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 706, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (910.50, 882.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1171, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1315.12, 631.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 436.738 CPU sec, 58.186 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517230, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1337, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6512)
[0000][PE] mean and std.dev: (1445.00, 1314.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1214, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (1071.50, 497.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 422.182 CPU sec, 39.549 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517583, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 608, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (781.59, 607.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1055, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1207.70, 666.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 437.833 CPU sec, 43.227 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517559, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 495, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2658)
[0000][PE] mean and std.dev: (684.39, 612.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1271, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1582.72, 898.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 433.901 CPU sec, 48.001 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517188, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 575, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (653.26, 524.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1471, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1613.16, 831.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 450.065 CPU sec, 45.230 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516830, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 746, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (912.47, 686.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 115.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1766, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6621)
[0000][PE] mean and std.dev: (2042.08, 1393.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 445.059 CPU sec, 51.619 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516460, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 376, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1668)
[0000][PE] mean and std.dev: (371.59, 243.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.62, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1465, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6603)
[0000][PE] mean and std.dev: (2013.92, 1245.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 451.376 CPU sec, 50.963 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516953, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 343, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (583.36, 622.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1336, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1794.93, 1286.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 446.383 CPU sec, 45.794 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517317, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 451, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (613.65, 434.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 2068, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7536)
[0000][PE] mean and std.dev: (2032.38, 1072.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 440.253 CPU sec, 53.808 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517300, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 644, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1182.46, 1185.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1352, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (1416.68, 557.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 435.707 CPU sec, 43.310 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516981, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 638, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (929.78, 907.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1343, 1853, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1836.12, 977.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 450.248 CPU sec, 59.971 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517263, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 875, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (941.86, 800.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1663, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1856.11, 947.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 431.725 CPU sec, 42.970 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516885, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 438, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (468.56, 360.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.26, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 537, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8447)
[0000][PE] mean and std.dev: (1171.33, 1360.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11203)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 971, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (870.78, 413.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 449.777 CPU sec, 46.699 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517110, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 740, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (951.64, 836.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1161, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (1192.64, 481.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 446.462 CPU sec, 50.341 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517255, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 440, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (738.61, 731.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (685, 2316, 3701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9733)
[0000][PE] mean and std.dev: (2251.90, 1641.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12749)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1269, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6557)
[0000][PE] mean and std.dev: (1530.72, 1353.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 443.293 CPU sec, 52.479 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517036, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 543, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (836.92, 780.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1651, 3964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9436)
[0000][PE] mean and std.dev: (2310.72, 1500.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 433.068 CPU sec, 43.138 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517291, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 941, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (854.70, 682.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1356, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7060)
[0000][PE] mean and std.dev: (1942.92, 1205.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 439.520 CPU sec, 52.059 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517055, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 822, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (702.18, 480.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.75, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1607, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1667.55, 908.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 435.946 CPU sec, 49.112 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517334, 4, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 865, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1076.43, 1124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1450, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6461)
[0000][PE] mean and std.dev: (1845.91, 1417.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 439.079 CPU sec, 43.858 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517082, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 933, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1143.03, 941.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1132, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (1034.77, 402.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 441.384 CPU sec, 48.283 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516637, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1301, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1342.78, 977.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1561, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (1278.71, 521.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 440.812 CPU sec, 54.011 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517131, 9, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 822, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (845.38, 516.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1303, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (1340.29, 763.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 445.100 CPU sec, 60.283 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517323, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 399, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (533.70, 441.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.59, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1327, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1453.62, 632.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 440.216 CPU sec, 56.730 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517315, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 632, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1112.24, 829.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1590, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1569.75, 794.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 429.672 CPU sec, 51.888 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 517147, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 956, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (1010.50, 693.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 984, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1190.75, 603.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 428.341 CPU sec, 46.480 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517342, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 853, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (969.58, 703.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 2144, 3226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7414)
[0000][PE] mean and std.dev: (2451.15, 1977.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 449.155 CPU sec, 57.239 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517055, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 447, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (851.95, 748.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1176, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1284.07, 676.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 427.708 CPU sec, 64.282 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516955, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 898, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (800.39, 586.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1221, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1304.00, 507.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 428.582 CPU sec, 55.258 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517395, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 457, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6698)
[0000][PE] mean and std.dev: (1314.17, 1425.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.95, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1302, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (1194.53, 283.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 443.537 CPU sec, 57.113 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517338, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 777, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (909.04, 820.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1454, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1621.29, 779.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 442.169 CPU sec, 64.844 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517250, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 297, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (522.35, 477.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1042, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1232.10, 855.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 424.003 CPU sec, 51.271 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517204, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 955, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1244.46, 1240.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1354, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1373.00, 731.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 425.957 CPU sec, 54.453 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516660, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 512, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (802.63, 674.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1347, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1248.93, 587.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 440.670 CPU sec, 59.029 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517019, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 894, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1015.90, 808.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1275, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1405.97, 761.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 435.564 CPU sec, 60.746 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517188, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 434, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (704.94, 714.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1195, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1444.06, 830.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 433.966 CPU sec, 57.347 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516730, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 444, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (522.85, 392.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1602, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1555.07, 714.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 425.318 CPU sec, 47.912 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517159, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 458, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (705.20, 585.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1197, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1219.00, 468.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 438.214 CPU sec, 59.925 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516883, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 719, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (898.70, 803.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (921, 2256, 6367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17259)
[0000][PE] mean and std.dev: (3302.82, 3133.00)
[0000][PE] low and high boundaries for proper pairs: (1, 22705)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1135, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1328.78, 733.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 437.256 CPU sec, 65.889 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517476, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 501, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (682.34, 518.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1532, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1723.82, 981.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 418.024 CPU sec, 38.164 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517026, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 480, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1300.29, 1366.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1926, 2894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6660)
[0000][PE] mean and std.dev: (1872.88, 935.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 422.493 CPU sec, 48.508 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516760, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 738, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (844.53, 868.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.70, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1447, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1572.70, 681.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 444.137 CPU sec, 57.941 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517041, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 418, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (693.50, 672.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1585, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1648.29, 761.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 440.606 CPU sec, 56.637 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516992, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 882, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1108.29, 815.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1347, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1342.68, 597.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 439.078 CPU sec, 59.176 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517366, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 480, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (694.57, 518.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1221, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (1254.17, 544.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 423.264 CPU sec, 49.376 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516917, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 668, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6828)
[0000][PE] mean and std.dev: (1367.34, 1437.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1342, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1570.13, 1017.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 429.812 CPU sec, 60.601 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517329, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 584, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (836.61, 725.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1603, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1581.70, 769.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 420.690 CPU sec, 52.408 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517314, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 434, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (809.77, 774.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1387, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1437.95, 669.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 437.946 CPU sec, 72.146 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517064, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 494, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (637.46, 513.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1463, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1594.41, 945.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 442.297 CPU sec, 69.080 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517269, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 520, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (848.69, 852.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.62, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1522, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (1278.00, 620.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 428.005 CPU sec, 48.359 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517122, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 730, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (770.52, 661.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1165, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1382.00, 888.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 429.479 CPU sec, 56.165 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517550, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 487, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (684.14, 591.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 1603, 4152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11788)
[0000][PE] mean and std.dev: (1929.00, 1665.88)
[0000][PE] low and high boundaries for proper pairs: (1, 15606)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1436, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7403)
[0000][PE] mean and std.dev: (2071.32, 1195.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 426.339 CPU sec, 52.556 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517053, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 925, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (936.23, 661.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1124, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2956)
[0000][PE] mean and std.dev: (1149.46, 598.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 438.015 CPU sec, 67.425 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517274, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 564, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (813.66, 723.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1210, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1712.75, 1235.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 429.979 CPU sec, 55.719 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516878, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 679, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (953.00, 897.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1289, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1120.27, 501.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 425.931 CPU sec, 56.996 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517748, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 400, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (691.62, 628.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1519, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1674.53, 1083.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 420.832 CPU sec, 42.981 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516962, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 503, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (706.27, 566.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 2173, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8890)
[0000][PE] mean and std.dev: (2794.76, 1857.70)
[0000][PE] low and high boundaries for proper pairs: (1, 11440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 426.070 CPU sec, 47.856 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516671, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 531, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (653.51, 509.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1152, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (1233.29, 655.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 443.734 CPU sec, 61.059 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516943, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 365, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (558.70, 527.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1666, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1626.80, 771.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 442.281 CPU sec, 59.194 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517106, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 340, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (473.35, 468.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1341, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1649.39, 1002.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 434.153 CPU sec, 63.908 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517356, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 589, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (626.61, 519.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1351, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1267.00, 487.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 428.139 CPU sec, 56.887 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516780, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 596, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1084.19, 1185.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1424, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6333)
[0000][PE] mean and std.dev: (1778.42, 1291.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 429.070 CPU sec, 58.459 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517412, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 879, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (738.72, 401.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1547, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (1480.69, 741.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 427.711 CPU sec, 55.000 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517663, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 638, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (926.18, 818.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1536, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1339.24, 666.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 427.101 CPU sec, 58.388 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516981, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 557, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (683.74, 506.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1617, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1593.79, 850.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 428.620 CPU sec, 49.554 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516775, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 642, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (763.95, 662.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1692, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6469)
[0000][PE] mean and std.dev: (1877.52, 1080.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 448.465 CPU sec, 64.909 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516973, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 962, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (847.73, 709.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1471, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1493.07, 619.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 433.789 CPU sec, 53.512 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517055, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 450, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (582.00, 459.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1421, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1353.28, 535.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 427.078 CPU sec, 54.079 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516523, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 952, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1104.46, 1041.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1179, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (1004.17, 360.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 430.261 CPU sec, 56.085 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516833, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 644, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1094.04, 1109.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.14, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1680, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (1466.13, 853.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 427.961 CPU sec, 49.946 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517381, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 853, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (845.50, 639.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1423, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1613.16, 778.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 432.624 CPU sec, 65.300 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517307, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 887, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (972.43, 906.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1633, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1679.24, 746.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 443.381 CPU sec, 60.238 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517523, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 697, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (730.91, 477.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1443, 4029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10169)
[0000][PE] mean and std.dev: (2488.17, 2295.52)
[0000][PE] low and high boundaries for proper pairs: (1, 13239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 437.598 CPU sec, 57.287 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516998, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 449, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (695.03, 599.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1402, 3499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8365)
[0000][PE] mean and std.dev: (2005.62, 1339.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 433.763 CPU sec, 51.523 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517154, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 526, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (935.64, 937.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1580, 3328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7932)
[0000][PE] mean and std.dev: (1803.76, 1096.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 430.797 CPU sec, 58.266 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517157, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 558, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1062.18, 1062.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1679, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (1739.30, 978.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 428.163 CPU sec, 45.645 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517339, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 737, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1074.77, 917.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1308, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (1457.50, 996.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 431.029 CPU sec, 52.199 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517046, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 469, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (724.19, 721.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1408, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7862)
[0000][PE] mean and std.dev: (2059.79, 1307.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 434.632 CPU sec, 50.957 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517578, 6, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 373, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (635.67, 640.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1443, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1928.91, 1342.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 432.128 CPU sec, 54.347 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517321, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1014, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (931.64, 589.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1396, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1399.70, 745.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 425.177 CPU sec, 52.720 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517178, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 676, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (976.19, 844.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1215, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1445.22, 635.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 424.183 CPU sec, 46.458 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517458, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 514, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (758.63, 605.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1538, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1530.83, 673.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 424.312 CPU sec, 44.428 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517037, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 602, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1025.41, 1052.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1144, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1198.53, 771.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 429.870 CPU sec, 52.222 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517104, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 429, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (776.91, 806.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1603, 3047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6755)
[0000][PE] mean and std.dev: (1750.91, 1048.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 431.840 CPU sec, 56.468 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517243, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 715, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (938.18, 799.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1419, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1479.05, 629.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 434.303 CPU sec, 52.446 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516913, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 786, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (821.57, 595.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1197, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (1138.74, 439.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 422.191 CPU sec, 43.136 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517330, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 508, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (626.71, 498.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1468, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (1348.07, 466.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 426.898 CPU sec, 47.008 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516968, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1006, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1104.82, 913.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1491, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1524.12, 788.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 425.998 CPU sec, 52.397 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517084, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 859, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (925.44, 723.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1234, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1393.53, 689.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 430.679 CPU sec, 48.723 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517186, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 851, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (853.33, 655.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1292, 5366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14028)
[0000][PE] mean and std.dev: (2567.46, 2502.34)
[0000][PE] low and high boundaries for proper pairs: (1, 18359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 432.467 CPU sec, 46.812 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517118, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 679, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (955.50, 866.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1409, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1414.35, 658.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 430.356 CPU sec, 48.098 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516980, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 378, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (669.55, 627.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1596, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1626.38, 883.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 438.902 CPU sec, 61.698 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516814, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 625, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (695.32, 550.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1483, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (1384.21, 612.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 434.604 CPU sec, 55.804 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517028, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 824, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (999.64, 732.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1440, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (1376.50, 556.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 429.454 CPU sec, 49.182 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516910, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 640, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (955.24, 842.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1283, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (1239.70, 537.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 427.650 CPU sec, 52.617 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517333, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 426, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (581.46, 533.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 115.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1199, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (1239.91, 468.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 424.401 CPU sec, 48.545 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517182, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 978, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1024.74, 731.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1273, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1373.37, 874.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 423.449 CPU sec, 53.545 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517057, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 600, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (770.19, 617.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1426, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (1749.67, 1350.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 432.146 CPU sec, 50.061 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517330, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 642, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1180.76, 1085.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1239, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (1221.10, 525.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 427.375 CPU sec, 58.309 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517261, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 443, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (657.80, 565.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1258, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1437.62, 601.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 419.732 CPU sec, 50.242 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517215, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 673, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (763.41, 695.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1237, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1320.86, 573.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 436.401 CPU sec, 53.743 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516904, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 529, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (738.09, 580.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1360, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1179.22, 697.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 430.904 CPU sec, 53.686 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517257, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 479, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (748.54, 640.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1314, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (1662.75, 984.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 430.948 CPU sec, 62.270 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517342, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 551, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (908.08, 912.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.80, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1643, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1694.65, 1067.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 420.198 CPU sec, 46.629 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516799, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 331, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (615.83, 594.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1349, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1782.76, 974.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 424.123 CPU sec, 47.803 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517622, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1008, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (986.86, 727.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1595, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (1594.53, 660.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 424.230 CPU sec, 54.692 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517205, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 610, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (783.47, 607.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1342, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1462.83, 702.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 421.052 CPU sec, 49.984 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517382, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 440, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (727.18, 648.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1416, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1700.57, 1072.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 411.231 CPU sec, 37.387 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517086, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 491, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (658.83, 491.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.76, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1340, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1454.82, 637.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 433.019 CPU sec, 52.431 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517212, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 522, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (670.90, 575.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.17, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1379, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1299.86, 707.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 421.553 CPU sec, 47.463 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517574, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 555, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (872.95, 818.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1348, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1414.65, 784.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 438.605 CPU sec, 58.203 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516906, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 897, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (944.14, 615.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1468, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1258.96, 475.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 420.409 CPU sec, 42.056 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516879, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 628, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (900.76, 699.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1404, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6446)
[0000][PE] mean and std.dev: (1761.28, 995.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 432.148 CPU sec, 55.309 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517645, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 497, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (936.18, 920.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1213, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (1335.70, 690.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 413.129 CPU sec, 40.796 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517513, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 908, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1005.06, 800.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1251, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1280.69, 600.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 430.399 CPU sec, 46.186 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517171, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 751, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (892.33, 873.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.77, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1483, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1630.84, 1049.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 428.561 CPU sec, 50.440 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517336, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1145, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1017.54, 866.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1050, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (1049.52, 547.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 421.064 CPU sec, 47.474 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516749, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (631, 1081, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1219.52, 919.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1438, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1297.50, 569.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 427.880 CPU sec, 48.175 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516811, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 642, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (651.04, 474.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1501, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1598.26, 794.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 422.760 CPU sec, 49.389 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517053, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 652, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (876.67, 694.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1430, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5298)
[0000][PE] mean and std.dev: (1579.35, 1067.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 418.608 CPU sec, 44.479 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517401, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 747, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (972.54, 825.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1710, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5525)
[0000][PE] mean and std.dev: (1914.20, 1218.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 425.635 CPU sec, 54.034 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517418, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 706, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (755.32, 509.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1601, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1502.61, 763.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 427.330 CPU sec, 52.450 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517198, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1139, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1223.60, 939.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1500, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5535)
[0000][PE] mean and std.dev: (1794.00, 1273.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 435.518 CPU sec, 55.637 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517155, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 433, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (657.47, 537.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1286, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1468.50, 834.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 422.813 CPU sec, 48.498 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516978, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 400, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (711.22, 642.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1679, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5065)
[0000][PE] mean and std.dev: (1744.35, 855.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 419.351 CPU sec, 49.529 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517124, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 739, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (924.61, 810.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1325, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1402.92, 836.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 420.239 CPU sec, 42.807 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517176, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 326, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (664.29, 634.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1114, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1269.52, 595.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 421.228 CPU sec, 51.163 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516894, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 701, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (740.00, 580.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1420, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6968)
[0000][PE] mean and std.dev: (1748.52, 1054.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 434.016 CPU sec, 57.363 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516452, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 652, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (1063.47, 1131.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1455, 2297, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6864)
[0000][PE] mean and std.dev: (1960.00, 1218.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1246, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1643.81, 1192.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 426.492 CPU sec, 47.566 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517583, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 612, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (744.32, 536.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1199, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1362.96, 822.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 422.391 CPU sec, 43.961 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516835, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1229, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (1157.54, 976.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.86, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1407, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1332.85, 539.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 423.071 CPU sec, 50.838 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517312, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 500, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (835.97, 798.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1239, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1345.26, 882.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 423.629 CPU sec, 45.785 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517338, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 441, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (693.89, 697.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1182, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1545.16, 854.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 418.961 CPU sec, 45.568 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517177, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 818, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (963.84, 877.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1457, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1585.78, 1055.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 419.120 CPU sec, 46.325 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517467, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 878, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1022.36, 827.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1448, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (67, 2822)
[0000][PE] mean and std.dev: (1444.63, 469.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 420.102 CPU sec, 46.473 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517270, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 554, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1035.15, 1014.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1124, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (1185.14, 568.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 423.067 CPU sec, 51.505 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517635, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 408, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (847.54, 980.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1688, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1593.22, 1068.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 422.343 CPU sec, 45.584 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516889, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 386, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (683.71, 590.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 2840, 4196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11760)
[0000][PE] mean and std.dev: (2367.60, 1896.40)
[0000][PE] low and high boundaries for proper pairs: (1, 15542)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1336, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (1332.44, 627.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 433.877 CPU sec, 55.822 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517129, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 322, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (773.97, 723.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1311, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (1374.62, 557.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 418.293 CPU sec, 40.146 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517110, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 398, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (831.64, 890.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1400, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1486.50, 809.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 420.887 CPU sec, 42.931 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517158, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1112, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1120.61, 950.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1361, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (1496.47, 926.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 445.803 CPU sec, 52.383 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517360, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 383, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (606.61, 663.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1658, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (1773.28, 960.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 438.729 CPU sec, 49.073 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517747, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 325, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (560.39, 569.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1361, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1315.29, 788.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 435.232 CPU sec, 51.549 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516908, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 776, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (1021.52, 822.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1443, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5960)
[0000][PE] mean and std.dev: (1598.52, 1111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 439.288 CPU sec, 56.444 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517062, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 687, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1005.04, 979.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1139, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (1296.47, 632.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 427.495 CPU sec, 44.136 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517283, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1005, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1238.96, 1107.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1475, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (1729.60, 987.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 421.644 CPU sec, 37.553 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516311, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 521, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (937.24, 873.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1668, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1602.70, 782.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 425.996 CPU sec, 44.319 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517413, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 705, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (944.31, 957.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1728, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1799.00, 971.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 424.260 CPU sec, 42.349 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517239, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 435, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (694.26, 562.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1485, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1234.90, 570.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 423.600 CPU sec, 39.478 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517257, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1099, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1235.91, 963.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1208, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1213.94, 620.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 424.029 CPU sec, 43.444 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517266, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 433, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (698.90, 578.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1465, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (1341.91, 485.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 424.611 CPU sec, 38.759 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516591, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 399, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (705.76, 673.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1445, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1606.17, 775.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 436.340 CPU sec, 44.177 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517034, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 388, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (677.18, 475.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1570, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1592.53, 1127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 424.261 CPU sec, 38.431 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517734, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 419, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (580.48, 507.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1140, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (1087.90, 625.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 424.777 CPU sec, 37.379 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517178, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1139, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1178.74, 1102.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1387, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (1298.84, 674.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 425.085 CPU sec, 40.241 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517324, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 379, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (593.52, 540.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1035, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1308.95, 627.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 416.970 CPU sec, 33.587 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516983, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 876, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1157.94, 1067.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1477, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1720.94, 980.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 426.025 CPU sec, 36.229 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517010, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 390, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (589.97, 501.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.98, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1368, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (1492.55, 560.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 440.587 CPU sec, 52.219 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516940, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 608, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (560.55, 332.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1592, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (1547.45, 464.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 426.686 CPU sec, 39.769 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516886, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 913, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1122.36, 1074.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1306, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1445.04, 674.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 453.276 CPU sec, 47.617 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517281, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 405, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (626.77, 535.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 115.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1562, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6323)
[0000][PE] mean and std.dev: (1618.24, 1265.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 435.333 CPU sec, 48.553 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516887, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1041, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5865)
[0000][PE] mean and std.dev: (1421.63, 1387.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1354, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5240)
[0000][PE] mean and std.dev: (1521.96, 1046.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 428.162 CPU sec, 34.139 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517159, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 1103, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1421.29, 1277.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.48, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1432, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1198.75, 529.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 433.030 CPU sec, 42.597 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517313, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1043, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1168.11, 979.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1019, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (270, 1760)
[0000][PE] mean and std.dev: (975.56, 151.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 438.286 CPU sec, 45.786 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517540, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 610, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (657.56, 532.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1136, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (1271.21, 510.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 421.490 CPU sec, 28.586 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517463, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 436, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (972.69, 973.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1092, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (1241.96, 650.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 441.332 CPU sec, 35.114 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517008, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 460, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (863.92, 909.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1284, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1443.21, 777.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 441.037 CPU sec, 33.204 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517277, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 357, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2146)
[0000][PE] mean and std.dev: (574.65, 419.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.19, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1434, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1331.26, 641.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 454.129 CPU sec, 38.869 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517139, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1116, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5803)
[0000][PE] mean and std.dev: (1275.55, 935.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1201, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (1251.65, 456.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 461.715 CPU sec, 44.584 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517287, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 492, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (790.45, 629.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1391, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1394.88, 818.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 451.271 CPU sec, 42.460 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517023, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 652, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (962.68, 797.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1140, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (82, 2542)
[0000][PE] mean and std.dev: (1173.06, 500.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 453.674 CPU sec, 41.022 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 517387, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 639, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (901.59, 789.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1456, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1421.29, 653.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 459.514 CPU sec, 36.938 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517214, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 467, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (779.33, 771.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.14, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1827, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5307)
[0000][PE] mean and std.dev: (1873.14, 1023.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 455.523 CPU sec, 39.972 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517163, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 490, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (898.87, 845.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.96, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1302, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1488.34, 851.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 450.987 CPU sec, 34.036 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517066, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 874, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1130.61, 1136.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1461, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1471.69, 514.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 471.440 CPU sec, 47.810 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516672, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 607, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (702.94, 561.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (401, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 857)
[0000][PE] mean and std.dev: (480.29, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1188, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1583.90, 1084.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 465.402 CPU sec, 46.816 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517264, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 837, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (941.31, 807.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.31, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1582, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1594.65, 869.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 456.802 CPU sec, 34.062 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517392, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 819, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1134.96, 1104.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1379, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1329.71, 735.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 454.503 CPU sec, 40.087 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516864, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 759, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (805.55, 682.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1796, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6536)
[0000][PE] mean and std.dev: (1770.84, 960.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 459.609 CPU sec, 35.741 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517074, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 841, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (970.19, 1034.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.55, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1333, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1475.14, 994.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 464.734 CPU sec, 49.034 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516798, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 644, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (676.82, 528.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1227, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1404.12, 910.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 459.008 CPU sec, 36.767 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517275, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1261, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1209.03, 1013.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.20, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1294, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1612.40, 988.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 456.349 CPU sec, 37.431 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517268, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 480, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (580.32, 449.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1281, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (1149.32, 432.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 453.860 CPU sec, 39.493 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517532, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 816, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1063.09, 940.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1194, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1407.89, 726.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 471.854 CPU sec, 41.982 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517461, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 664, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (810.68, 592.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.94, 115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1385, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (1214.50, 448.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 459.932 CPU sec, 40.096 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517404, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 892, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (929.61, 656.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.72, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1332, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (1318.06, 522.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 451.285 CPU sec, 34.606 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517397, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 694, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (806.33, 716.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1167, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1188.83, 677.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 465.602 CPU sec, 40.651 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517180, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 376, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (609.45, 576.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1575, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1609.18, 934.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 463.954 CPU sec, 42.524 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517125, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1273, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6300)
[0000][PE] mean and std.dev: (1441.60, 1510.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1298, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7637)
[0000][PE] mean and std.dev: (2217.69, 1793.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 457.713 CPU sec, 38.187 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517096, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 670, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (900.23, 742.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1355, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1414.70, 725.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 465.951 CPU sec, 47.884 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517115, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 488, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (792.03, 684.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1485, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1683.03, 1006.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 422.482 CPU sec, 33.773 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517143, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 918, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1234.18, 1039.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1556, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6659)
[0000][PE] mean and std.dev: (1843.62, 1275.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 429.564 CPU sec, 37.013 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516725, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 345, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (712.84, 726.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1164, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (1185.29, 622.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 427.355 CPU sec, 35.720 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516973, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 952, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1136.72, 900.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1315, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1622.54, 1290.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 438.552 CPU sec, 44.896 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516755, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 922, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (896.95, 564.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1751, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1669.73, 727.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 428.648 CPU sec, 35.826 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516973, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 751, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (951.31, 825.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1554, 2894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6684)
[0000][PE] mean and std.dev: (1845.47, 1376.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 421.330 CPU sec, 31.654 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516876, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 390, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (633.33, 510.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1227, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (1145.61, 364.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 437.919 CPU sec, 45.004 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517058, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 707, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (509.11, 304.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1284, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1630.39, 1100.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 427.227 CPU sec, 39.209 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516492, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 419, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (579.50, 600.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1853, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6276)
[0000][PE] mean and std.dev: (1723.19, 873.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 424.821 CPU sec, 34.409 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517431, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 984, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (1228.43, 1139.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.96, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1548, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (1738.10, 1051.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 440.827 CPU sec, 45.304 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517062, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 644, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (899.45, 783.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1394, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1604.21, 850.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 434.970 CPU sec, 40.143 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517119, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 551, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1063.90, 1024.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1819, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1507.78, 964.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 430.229 CPU sec, 39.935 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517076, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1094, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1407.15, 1288.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1261, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (1204.96, 462.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 426.147 CPU sec, 42.185 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516763, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 777, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (761.68, 616.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1249, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (1105.48, 502.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 453.430 CPU sec, 55.034 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516856, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 364, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (707.26, 580.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1259, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (1510.16, 833.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 452.272 CPU sec, 53.149 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517302, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 501, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (880.21, 794.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1311, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1316.83, 799.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 427.192 CPU sec, 44.650 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517219, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 622, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (882.85, 947.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1341, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1442.15, 959.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 431.074 CPU sec, 45.398 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517203, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1028, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1135.00, 946.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2058, 4479, 5404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12096)
[0000][PE] mean and std.dev: (3851.09, 2559.60)
[0000][PE] low and high boundaries for proper pairs: (1, 15442)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1511, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1440.18, 528.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 429.445 CPU sec, 44.911 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517508, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 628, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (918.19, 773.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1298, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1557.06, 979.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 429.230 CPU sec, 38.221 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517217, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 472, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (783.04, 722.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1424, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1362.00, 682.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 434.546 CPU sec, 47.093 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516831, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 538, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (873.41, 791.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1279, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (1244.07, 485.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 427.166 CPU sec, 41.281 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517063, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 604, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (658.94, 512.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1192, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1326.09, 732.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 433.591 CPU sec, 43.293 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517207, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 889, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6583)
[0000][PE] mean and std.dev: (1345.73, 1193.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1251, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (1331.79, 628.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 427.196 CPU sec, 37.741 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517324, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 434, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (712.54, 728.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1337, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1415.29, 705.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 418.791 CPU sec, 35.500 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517269, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 611, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (933.50, 892.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (481.05, 115.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1590, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1351.45, 556.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 443.448 CPU sec, 44.264 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517097, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 618, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (742.76, 550.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1529, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1819.71, 1291.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 437.108 CPU sec, 45.652 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517464, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 435, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (914.23, 1007.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1228, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (1267.04, 575.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 430.084 CPU sec, 46.954 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517013, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1006, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1260.85, 1194.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1505, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (1604.31, 806.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 445.568 CPU sec, 53.520 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516579, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 553, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (749.81, 663.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1351, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1504.31, 732.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 448.031 CPU sec, 52.108 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517147, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 813, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (1020.42, 890.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1929, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1680.58, 828.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 430.319 CPU sec, 38.195 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517164, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 720, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (930.28, 867.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1074, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1286.70, 714.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 431.322 CPU sec, 35.808 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516874, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 676, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (999.48, 843.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1277, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1743.19, 1220.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 429.218 CPU sec, 40.060 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517184, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 606, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1084.64, 1194.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.21, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1374, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1693.11, 923.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 436.319 CPU sec, 44.042 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516720, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 789, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (775.75, 694.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1388, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1733.42, 1123.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 437.282 CPU sec, 46.450 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517326, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 512, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (578.21, 411.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1759, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1737.24, 761.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 428.376 CPU sec, 42.639 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516851, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 986, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1236.85, 1141.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1483, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (1417.75, 598.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 423.845 CPU sec, 35.093 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517384, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1213, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1323.03, 1067.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1359, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1342.26, 882.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 440.279 CPU sec, 45.779 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517301, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 342, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (517.77, 462.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.98, 115.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1417, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1547.64, 686.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 426.406 CPU sec, 40.835 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517469, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 699, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (1000.43, 976.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1492, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (1459.35, 643.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 434.074 CPU sec, 39.216 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517006, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 526, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (911.68, 808.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1344, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (1266.30, 484.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 434.460 CPU sec, 41.725 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517344, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 699, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1058.10, 1099.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1308, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1199.82, 557.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 424.763 CPU sec, 35.552 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517452, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 523, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (709.10, 569.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1513, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1451.50, 588.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 423.100 CPU sec, 37.174 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517022, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 425, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (1063.21, 1044.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1436, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (161, 2906)
[0000][PE] mean and std.dev: (1431.45, 444.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 420.091 CPU sec, 39.822 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517094, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 847, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (957.96, 830.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.53, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1297, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (143, 2783)
[0000][PE] mean and std.dev: (1374.24, 461.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 418.758 CPU sec, 34.687 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517059, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 468, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (693.88, 675.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1346, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1900.74, 1276.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 424.885 CPU sec, 38.998 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516996, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 848, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1091.81, 832.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1131, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1256.05, 867.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 422.582 CPU sec, 45.582 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516825, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 529, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (738.21, 535.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1125, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (1032.00, 365.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 425.468 CPU sec, 41.476 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516904, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 896, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (919.10, 740.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1541, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1676.84, 784.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 419.493 CPU sec, 36.145 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516880, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1006, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1341.32, 1234.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.84, 115.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1365, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1444.00, 777.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 431.034 CPU sec, 40.998 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517241, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 487, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (923.35, 834.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1449, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (1608.62, 746.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 418.597 CPU sec, 37.289 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516771, 9, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 557, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1078.13, 962.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1275, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1378.94, 613.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 421.975 CPU sec, 39.495 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517233, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 325, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (536.11, 444.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1449, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (1339.00, 650.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 422.627 CPU sec, 37.883 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516896, 0, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 799, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (1223.23, 1233.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1134, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1675.15, 1244.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 429.815 CPU sec, 44.670 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516775, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1009, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (1304.80, 1255.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1639, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1857.85, 992.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 432.495 CPU sec, 48.319 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517031, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 746, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (986.22, 832.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1112, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1310.82, 789.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 424.124 CPU sec, 44.100 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516546, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 860, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (749.59, 477.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.63, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1574, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1728.58, 798.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 419.530 CPU sec, 40.996 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516873, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 841, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (876.33, 776.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1525, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1721.55, 768.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 416.769 CPU sec, 36.681 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516774, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1042, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (973.14, 819.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1327, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1561.71, 1152.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 417.769 CPU sec, 36.570 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517778, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 428, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (697.88, 618.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1091, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (9, 2479)
[0000][PE] mean and std.dev: (1114.77, 307.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 414.481 CPU sec, 32.408 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517091, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 394, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (799.74, 849.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1620, 2262, 3925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8535)
[0000][PE] mean and std.dev: (3081.30, 2469.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12961)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 1722, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (1888.54, 987.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 419.758 CPU sec, 44.550 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517318, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 783, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (902.60, 743.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.62, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1143, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1405.62, 840.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 430.412 CPU sec, 42.385 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516751, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 848, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (898.52, 787.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1390, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1646.00, 1101.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 416.898 CPU sec, 39.277 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516867, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 993, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1050.62, 827.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1482, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1427.67, 732.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 416.787 CPU sec, 31.490 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517172, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 515, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (782.42, 802.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1411, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1453.88, 835.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 422.693 CPU sec, 45.367 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516928, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 645, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1187.10, 1114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1195, 3054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6838)
[0000][PE] mean and std.dev: (1935.00, 1249.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 421.809 CPU sec, 38.809 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517363, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 793, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1275.81, 1185.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1562, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (1432.52, 518.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 422.005 CPU sec, 37.812 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517053, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 814, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (925.89, 918.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1316, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1655.35, 1240.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 419.944 CPU sec, 36.558 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517154, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 500, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (824.38, 763.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1293, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1243.16, 659.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 423.968 CPU sec, 38.402 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517220, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 750, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (839.64, 698.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1356, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1400.69, 676.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 425.989 CPU sec, 41.782 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517418, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1161, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1081.89, 807.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1001, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (973.43, 403.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 422.141 CPU sec, 38.186 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516887, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 481, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (634.69, 613.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1670, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1640.35, 921.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 430.683 CPU sec, 50.425 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 517459, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 941, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (898.50, 638.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1443, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6661)
[0000][PE] mean and std.dev: (1802.30, 1009.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 420.209 CPU sec, 41.383 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517123, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 998, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1378.47, 1343.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1376, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1098.12, 515.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 419.348 CPU sec, 36.716 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517612, 1, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 446, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (849.17, 809.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1448, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (1470.79, 581.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 428.760 CPU sec, 44.980 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517002, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 831, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (732.74, 524.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1314, 1595, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (1605.06, 450.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 427.640 CPU sec, 48.313 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517319, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 939, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1229.00, 1230.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1439, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1549.86, 808.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 412.532 CPU sec, 34.750 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516691, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 570, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (711.39, 509.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1061, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1270.26, 934.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 421.473 CPU sec, 38.817 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517823, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 864, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (1107.97, 919.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1052, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (1024.21, 658.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 417.923 CPU sec, 33.278 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517206, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 611, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (820.21, 707.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1554, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (1397.00, 548.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 422.232 CPU sec, 35.858 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517612, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 421, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (811.93, 853.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1061, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (1175.67, 695.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 437.620 CPU sec, 43.999 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516949, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 784, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1130.83, 1173.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1640, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1807.48, 1057.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 428.185 CPU sec, 33.143 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516908, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 428, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2242)
[0000][PE] mean and std.dev: (586.32, 414.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.93, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (380, 1570, 4842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13766)
[0000][PE] mean and std.dev: (2192.00, 2138.07)
[0000][PE] low and high boundaries for proper pairs: (1, 18228)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1392, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1468.77, 689.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 444.586 CPU sec, 37.624 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517124, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 795, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (965.38, 892.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1248, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1408.95, 719.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 439.943 CPU sec, 32.578 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517499, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 587, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (875.53, 771.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 2002, 4110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10368)
[0000][PE] mean and std.dev: (2707.65, 2179.52)
[0000][PE] low and high boundaries for proper pairs: (1, 13497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 428.457 CPU sec, 34.630 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517210, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 301, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1646)
[0000][PE] mean and std.dev: (415.97, 358.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1816, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1641.42, 695.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 428.298 CPU sec, 33.139 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517147, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 495, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (723.73, 567.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.18, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1431, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1757.64, 1259.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 439.239 CPU sec, 35.939 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517422, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 540, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (772.03, 703.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1644, 2005, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1869.47, 537.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 423.235 CPU sec, 32.614 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517506, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 678, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (724.24, 465.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1478, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (1511.50, 570.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 436.694 CPU sec, 31.251 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516432, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 368, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (768.19, 641.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1449, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1766.00, 1186.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 432.322 CPU sec, 30.257 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517159, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 578, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (651.43, 496.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1238, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 2437)
[0000][PE] mean and std.dev: (1187.71, 362.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 427.378 CPU sec, 29.220 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517043, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 903, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (906.63, 833.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.46, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1680, 3690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8614)
[0000][PE] mean and std.dev: (2273.95, 1455.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 431.539 CPU sec, 28.872 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517324, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 802, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (1019.69, 841.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.49, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1357, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1399.89, 578.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 440.891 CPU sec, 31.723 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517362, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 678, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (984.16, 847.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 3869, 4956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14102)
[0000][PE] mean and std.dev: (2912.30, 2277.22)
[0000][PE] low and high boundaries for proper pairs: (1, 18675)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1802, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1885.42, 1146.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 431.705 CPU sec, 28.279 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517579, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 865, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1403.52, 1319.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1340, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1350.59, 847.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 439.943 CPU sec, 36.958 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517353, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 931, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (1011.41, 742.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.70, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1111, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1270.48, 694.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 442.893 CPU sec, 30.816 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517114, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 420, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (485.76, 345.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1552, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6423)
[0000][PE] mean and std.dev: (1831.33, 1274.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 434.525 CPU sec, 34.715 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517071, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 761, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1113.97, 974.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1072, 2827, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6805)
[0000][PE] mean and std.dev: (2397.30, 1351.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1775, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1726.62, 1065.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 444.684 CPU sec, 38.472 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517203, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (528, 849, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (943.95, 652.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1277, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1502.15, 1061.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 443.406 CPU sec, 33.259 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516983, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 595, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (699.39, 633.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1057, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (1231.42, 682.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 451.248 CPU sec, 39.252 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517125, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 574, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (882.84, 766.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1352, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1512.29, 907.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 454.600 CPU sec, 47.354 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516759, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 382, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (771.43, 877.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.19, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1622, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4335)
[0000][PE] mean and std.dev: (1733.36, 638.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 442.870 CPU sec, 48.377 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517175, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 874, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (737.07, 474.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 2398, 3128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7250)
[0000][PE] mean and std.dev: (2331.35, 1339.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 448.310 CPU sec, 59.545 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517220, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 427, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (542.50, 551.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1440, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1401.20, 637.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 452.489 CPU sec, 44.520 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516974, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 574, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2272)
[0000][PE] mean and std.dev: (689.44, 567.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1633, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1565.76, 680.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 445.026 CPU sec, 67.258 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517370, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 421, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (550.47, 426.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1338, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (1419.43, 623.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 447.002 CPU sec, 73.569 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516839, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 860, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1045.97, 815.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.63, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1072, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (1176.48, 628.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 462.930 CPU sec, 79.956 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517130, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 768, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (1285.67, 1278.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1332, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1597.38, 794.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 449.271 CPU sec, 75.360 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516886, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 542, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (652.47, 497.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1655, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1632.56, 870.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 447.752 CPU sec, 77.560 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517188, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 763, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (947.83, 727.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1447, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (1617.88, 975.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 454.511 CPU sec, 80.735 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517040, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 707, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (942.83, 936.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1464, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6286)
[0000][PE] mean and std.dev: (1786.80, 916.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 453.845 CPU sec, 83.102 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517321, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 840, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1049.81, 775.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.53, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1218, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (1288.24, 513.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 447.165 CPU sec, 66.972 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517032, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 784, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (820.76, 569.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1424, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1556.89, 700.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 454.147 CPU sec, 78.906 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517255, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 954, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1008.10, 754.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.66, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1151, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1414.77, 839.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 447.954 CPU sec, 72.268 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517174, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 683, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (691.22, 549.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.79, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1051, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (1109.53, 513.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 439.450 CPU sec, 59.423 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517546, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 443, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (875.77, 888.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1392, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1693.77, 1030.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 444.711 CPU sec, 81.550 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516964, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 584, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (944.05, 842.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1342, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (1514.48, 781.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 443.542 CPU sec, 63.799 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516746, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 984, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (863.32, 600.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1612, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1783.70, 809.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 440.489 CPU sec, 68.932 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517286, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 403, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (757.68, 701.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (795, 821, 5516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14958)
[0000][PE] mean and std.dev: (2673.45, 2626.32)
[0000][PE] low and high boundaries for proper pairs: (1, 19679)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1266, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1216.71, 664.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 445.845 CPU sec, 61.429 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517112, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 631, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1005.37, 1077.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1385, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1295.47, 808.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 448.887 CPU sec, 51.513 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517089, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 620, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (807.21, 664.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1489, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1675.04, 912.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 435.545 CPU sec, 39.843 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516954, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1390, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6325)
[0000][PE] mean and std.dev: (1476.79, 1121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1127, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1270.45, 1040.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 442.082 CPU sec, 35.530 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517197, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 433, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (716.46, 622.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1455, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (1492.08, 751.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 450.853 CPU sec, 39.062 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517018, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 764, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5029)
[0000][PE] mean and std.dev: (1153.26, 1183.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1200, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1268.58, 667.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 453.053 CPU sec, 43.141 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517258, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 861, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (977.55, 691.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1587, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1729.38, 843.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 437.499 CPU sec, 45.818 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517506, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 578, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (841.67, 671.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.89, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1488, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1503.80, 683.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 434.221 CPU sec, 36.312 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516851, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 624, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1015.37, 997.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1211, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (1304.75, 626.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 444.242 CPU sec, 45.772 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516928, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 548, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1227.22, 1223.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1396, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1502.71, 728.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 435.819 CPU sec, 39.542 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517188, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 468, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (743.32, 668.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.27, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1507, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1676.71, 1020.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 446.612 CPU sec, 36.726 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517236, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 534, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1027.43, 1003.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1350, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1307.24, 610.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 439.930 CPU sec, 43.240 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517116, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 453, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (696.50, 559.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1430, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1508.62, 708.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 436.869 CPU sec, 40.027 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517411, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 503, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (738.08, 684.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1290, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1634.18, 1011.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 429.941 CPU sec, 31.413 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517149, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 748, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (964.06, 808.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1417, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6421)
[0000][PE] mean and std.dev: (1584.32, 1167.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 436.813 CPU sec, 38.850 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517153, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 564, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (734.65, 677.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1486, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1377.50, 494.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 424.706 CPU sec, 31.214 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516959, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 730, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (990.77, 837.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1204, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (1265.40, 661.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 430.353 CPU sec, 36.328 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516841, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 518, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (692.75, 600.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1270, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (1376.15, 696.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 431.379 CPU sec, 34.419 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517429, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 908, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6649)
[0000][PE] mean and std.dev: (1427.56, 1590.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1116, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (1177.86, 547.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 424.842 CPU sec, 32.590 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516795, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1108, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5829)
[0000][PE] mean and std.dev: (1489.73, 1272.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 115.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1202, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1367.42, 604.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 425.316 CPU sec, 29.396 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516773, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 467, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (878.22, 869.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1473, 1673, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (25, 3645)
[0000][PE] mean and std.dev: (1806.00, 374.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 432.108 CPU sec, 28.788 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516954, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 856, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (953.08, 869.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.34, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1592, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1563.56, 810.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 427.644 CPU sec, 30.014 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517040, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 385, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (546.78, 420.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1305, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (1419.56, 652.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 433.726 CPU sec, 31.280 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516582, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 615, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (691.69, 548.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1475, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (1522.00, 704.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 434.873 CPU sec, 31.564 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517131, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 346, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (818.03, 869.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1252, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6633)
[0000][PE] mean and std.dev: (1534.70, 955.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 426.143 CPU sec, 29.270 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517484, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 422, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (575.30, 463.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1376, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1367.64, 678.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 420.898 CPU sec, 30.306 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517200, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (531, 817, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1046.58, 764.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.28, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1599, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4745)
[0000][PE] mean and std.dev: (1623.40, 705.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 432.984 CPU sec, 35.157 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517033, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 470, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (701.07, 623.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1075, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1093.79, 484.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 431.803 CPU sec, 39.866 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517161, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 964, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7280)
[0000][PE] mean and std.dev: (1421.19, 1479.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1540, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6199)
[0000][PE] mean and std.dev: (1904.50, 1399.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 430.063 CPU sec, 43.364 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516794, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 698, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1115.89, 1117.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1451, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1568.76, 637.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 430.934 CPU sec, 32.005 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516972, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 315, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1555)
[0000][PE] mean and std.dev: (384.96, 248.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.64, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1198, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1366.32, 798.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 431.996 CPU sec, 35.753 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516314, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 801, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (852.16, 748.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.91, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1197, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6291)
[0000][PE] mean and std.dev: (1705.18, 1479.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 431.392 CPU sec, 33.780 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517378, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 704, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (965.82, 835.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1912, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (2242.89, 1516.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 423.792 CPU sec, 31.183 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517648, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 738, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (776.66, 725.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1579, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (1623.38, 948.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 428.238 CPU sec, 32.696 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517139, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 394, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1023.57, 1090.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1536, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1518.48, 733.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 418.005 CPU sec, 32.626 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516937, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 986, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1270.88, 1163.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1246, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1708.00, 1197.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 422.598 CPU sec, 29.648 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516828, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 657, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (865.00, 628.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1123, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (1314.23, 802.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 423.994 CPU sec, 31.240 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517272, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 919, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (989.38, 822.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1315, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (1271.74, 508.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 432.722 CPU sec, 31.748 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517185, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 401, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (578.11, 491.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1475, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1474.52, 808.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 428.101 CPU sec, 28.622 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517005, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1000, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1032.02, 883.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 1593, 3778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11142)
[0000][PE] mean and std.dev: (1868.70, 1688.13)
[0000][PE] low and high boundaries for proper pairs: (1, 14824)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1191, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (1320.30, 683.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 429.672 CPU sec, 29.737 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517503, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 606, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (769.62, 632.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1218, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (1440.37, 588.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 438.123 CPU sec, 30.542 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516566, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 485, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (825.04, 642.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1477, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (1747.26, 1071.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 429.378 CPU sec, 27.871 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516831, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 875, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1118.95, 889.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1849, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6575)
[0000][PE] mean and std.dev: (2207.44, 1488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 430.094 CPU sec, 29.006 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516937, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 768, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (852.30, 747.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1206, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (1235.60, 571.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 425.079 CPU sec, 28.535 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517392, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 640, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6259)
[0000][PE] mean and std.dev: (1167.11, 1190.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1354, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1346.50, 670.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 423.174 CPU sec, 28.518 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517059, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1048, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6306)
[0000][PE] mean and std.dev: (1205.83, 1025.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1766, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1880.94, 1079.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 440.513 CPU sec, 30.207 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516930, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1062, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1335.59, 1066.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1349, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1477.82, 725.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 421.516 CPU sec, 27.414 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516737, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 758, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (900.56, 771.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1123, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1261.96, 605.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 430.611 CPU sec, 28.865 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517641, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 490, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (896.50, 900.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1152, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1412.39, 774.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 433.005 CPU sec, 31.846 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517495, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 580, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (826.50, 808.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1555, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1607.57, 782.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 431.778 CPU sec, 27.819 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517017, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 383, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (696.62, 690.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1548, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1663.74, 996.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 429.938 CPU sec, 31.160 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517189, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 531, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (804.39, 675.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1239, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1409.12, 834.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 431.291 CPU sec, 28.714 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517358, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 503, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (799.03, 761.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1367, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (1276.82, 478.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 432.916 CPU sec, 29.102 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516815, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 627, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (929.26, 798.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.46, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1599, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6289)
[0000][PE] mean and std.dev: (1903.28, 1186.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 430.854 CPU sec, 28.842 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517549, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 430, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (772.62, 672.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1710, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (1839.48, 1023.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 429.964 CPU sec, 27.876 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517310, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 425, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (550.74, 398.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1323, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (1376.48, 568.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 418.422 CPU sec, 25.724 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517339, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 752, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2757)
[0000][PE] mean and std.dev: (830.69, 625.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1372, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1555.26, 894.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 480.218 CPU sec, 40.498 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517388, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 846, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (913.92, 941.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1267, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1317.83, 729.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 442.482 CPU sec, 47.379 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206112
	[0000][ M::kt_pipeline] read 1206112 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516743, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 762, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (874.36, 697.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1324, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1228.90, 616.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 441.907 CPU sec, 39.467 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517263, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 793, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (823.48, 788.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.72, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1349, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (1499.54, 738.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206112 reads in 444.278 CPU sec, 33.595 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517234, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 731, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (863.75, 797.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.29, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1240, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1470.90, 831.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 449.786 CPU sec, 46.371 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517487, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 922, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (965.70, 798.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1259, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (1342.09, 596.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 443.018 CPU sec, 43.576 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517573, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 669, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (801.86, 611.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1301, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (1317.40, 499.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 445.998 CPU sec, 44.215 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517045, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 827, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5503)
[0000][PE] mean and std.dev: (959.92, 764.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.35, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1361, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1418.11, 629.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 443.393 CPU sec, 38.148 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517456, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 824, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (1136.71, 1009.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1486, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6965)
[0000][PE] mean and std.dev: (1900.81, 1258.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 441.913 CPU sec, 35.527 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517265, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 518, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (720.00, 587.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.90, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1629, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1592.30, 624.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 448.792 CPU sec, 43.699 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517418, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (573, 1027, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1330.96, 1120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1621, 1897, 4386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9916)
[0000][PE] mean and std.dev: (2733.40, 1804.35)
[0000][PE] low and high boundaries for proper pairs: (1, 12681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 435.021 CPU sec, 34.594 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517107, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 771, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1280.86, 1265.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1225, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (1235.96, 617.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 441.112 CPU sec, 36.960 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517560, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 466, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (709.00, 649.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1190, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1361.39, 1010.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 440.119 CPU sec, 41.690 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516904, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 826, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (819.70, 660.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1270, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1236.35, 572.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 443.448 CPU sec, 35.732 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517374, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 474, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (631.22, 495.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1404, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1346.89, 520.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 440.343 CPU sec, 32.056 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517268, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 348, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2065)
[0000][PE] mean and std.dev: (541.68, 476.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 855, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (1083.78, 587.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 446.559 CPU sec, 38.934 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517484, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 466, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (546.09, 376.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1404, 1757, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1811.41, 901.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 435.787 CPU sec, 34.191 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517228, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 789, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (970.14, 825.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1334, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1279.70, 605.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 450.359 CPU sec, 32.843 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517053, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 940, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1081.29, 899.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1522, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5322)
[0000][PE] mean and std.dev: (1726.48, 952.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 440.693 CPU sec, 30.443 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517054, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 683, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1138.10, 1145.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1399, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1563.78, 700.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 436.490 CPU sec, 28.959 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517262, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 608, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (696.86, 537.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1453, 3675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8639)
[0000][PE] mean and std.dev: (2107.47, 1280.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 441.605 CPU sec, 30.647 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517114, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 561, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (1032.44, 1092.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1242, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (1433.86, 611.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 441.937 CPU sec, 32.819 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516977, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 956, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1110.88, 902.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1188, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (1244.12, 484.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 443.419 CPU sec, 30.730 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516990, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 723, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (782.28, 568.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1197, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1328.58, 834.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 439.879 CPU sec, 30.955 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516943, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 459, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (850.17, 730.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1411, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (1399.80, 683.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 442.833 CPU sec, 31.790 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516988, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 404, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (705.88, 749.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1357, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (1329.67, 671.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 440.361 CPU sec, 29.670 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516928, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 922, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (1138.47, 1070.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.36, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1191, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (1416.59, 930.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 437.927 CPU sec, 30.273 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516810, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 593, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (821.60, 619.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.30, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1451, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (1534.00, 674.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 439.333 CPU sec, 29.697 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517486, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 894, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1177.75, 1166.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1314, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1747.05, 1007.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 440.227 CPU sec, 31.551 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517293, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 443, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (724.30, 626.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1288, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1342.86, 689.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 436.262 CPU sec, 30.562 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517010, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 949, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (960.93, 674.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 1013, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1192.70, 820.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 442.537 CPU sec, 28.193 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516955, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 556, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (923.47, 850.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1385, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1561.50, 1180.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 437.476 CPU sec, 31.030 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517109, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 723, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (777.67, 656.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1490, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (1410.64, 764.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 446.580 CPU sec, 32.379 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517469, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 839, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1031.00, 799.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1272, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1494.86, 828.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 436.130 CPU sec, 29.694 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517214, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 562, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2001)
[0000][PE] mean and std.dev: (546.64, 352.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1222, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (206, 2201)
[0000][PE] mean and std.dev: (1154.78, 424.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 437.755 CPU sec, 33.037 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517476, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 614, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (811.67, 753.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1061, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1200.22, 760.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 430.322 CPU sec, 30.596 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517630, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 866, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5737)
[0000][PE] mean and std.dev: (1335.70, 1413.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1415, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (1413.62, 528.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 431.922 CPU sec, 30.586 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516973, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 840, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (911.64, 778.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1102, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (1039.38, 528.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 426.220 CPU sec, 31.414 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516723, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 376, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (627.23, 687.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.25, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1054, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1150.20, 671.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 436.002 CPU sec, 35.331 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517056, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 947, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (971.79, 837.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.75, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1329, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (174, 2499)
[0000][PE] mean and std.dev: (1320.19, 434.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 434.997 CPU sec, 29.736 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516995, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 412, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (554.10, 416.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1617, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1648.47, 900.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 432.429 CPU sec, 31.226 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517373, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 596, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (724.07, 710.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1393, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (1484.04, 703.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 426.616 CPU sec, 33.272 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516913, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 792, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (678.93, 528.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1220, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1454.21, 768.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 433.744 CPU sec, 34.859 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517502, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 879, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (928.72, 681.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.61, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1424, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1476.56, 798.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 437.364 CPU sec, 35.040 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516571, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 496, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (1012.27, 1104.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1005, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (1086.68, 696.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 432.472 CPU sec, 34.707 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517405, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 687, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (880.57, 745.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.49, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1606, 3108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7318)
[0000][PE] mean and std.dev: (2170.48, 1546.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 423.929 CPU sec, 31.372 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517248, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 519, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (808.65, 732.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1560, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1616.75, 760.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 418.147 CPU sec, 27.439 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516763, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 486, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (821.17, 687.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1239, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1418.48, 766.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 415.413 CPU sec, 25.770 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516907, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 546, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (717.82, 619.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.48, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1563, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5418)
[0000][PE] mean and std.dev: (1487.28, 876.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 429.520 CPU sec, 31.111 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517068, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 463, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (940.71, 913.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1040, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6145)
[0000][PE] mean and std.dev: (1532.76, 966.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 420.499 CPU sec, 25.347 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517582, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1068, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1303.61, 1153.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1213, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (1074.74, 298.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 421.478 CPU sec, 27.192 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516899, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 622, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (864.59, 695.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.25, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1328, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (340, 2265)
[0000][PE] mean and std.dev: (1293.33, 337.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 433.662 CPU sec, 32.116 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517417, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 443, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (762.72, 787.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.57, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1409, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (1450.61, 714.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 448.378 CPU sec, 30.082 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517089, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 373, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (531.75, 490.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1567, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1601.27, 870.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 438.607 CPU sec, 31.239 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517026, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 513, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (889.40, 761.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 1703, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1732.13, 785.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 432.175 CPU sec, 29.290 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517067, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 806, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (799.95, 655.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1158, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1393.09, 780.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 441.839 CPU sec, 35.839 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517058, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 379, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (912.39, 972.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1296, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (1441.59, 718.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 436.249 CPU sec, 34.036 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517203, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 497, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (873.16, 741.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1377, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1611.40, 1127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 435.352 CPU sec, 30.537 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516767, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1094, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1222.00, 967.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1427, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1743.05, 956.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 442.134 CPU sec, 35.249 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517273, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 365, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (818.72, 863.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1377, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1422.50, 520.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 433.084 CPU sec, 32.273 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517419, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 472, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (617.48, 445.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1254, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (1333.32, 676.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 438.133 CPU sec, 32.081 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517004, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 467, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (752.06, 665.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (401, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 857)
[0000][PE] mean and std.dev: (480.33, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1271, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1233.36, 533.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 431.689 CPU sec, 31.676 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516979, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 403, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1511)
[0000][PE] mean and std.dev: (485.50, 342.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1386, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (79, 2474)
[0000][PE] mean and std.dev: (1213.00, 417.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 436.564 CPU sec, 32.174 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516975, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1150, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1338.55, 1226.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.38, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1437, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1549.78, 1272.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 435.078 CPU sec, 33.542 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516963, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 596, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (881.29, 796.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1588, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (2059.67, 1514.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 440.369 CPU sec, 43.314 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517127, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 591, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (672.32, 498.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1178, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1137.00, 503.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 441.831 CPU sec, 39.243 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517132, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 632, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (758.96, 633.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.76, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1326, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1499.64, 833.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 431.925 CPU sec, 42.686 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517485, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 560, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (811.06, 892.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.37, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1392, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1412.85, 909.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 434.432 CPU sec, 40.317 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516334, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 723, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1101.17, 1102.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1392, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1437.64, 678.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 440.830 CPU sec, 48.254 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517624, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1172, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1022.58, 846.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.71, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1141, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (1205.28, 610.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 427.153 CPU sec, 38.139 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517137, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 685, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (817.70, 660.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.73, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1253, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1458.04, 886.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 437.798 CPU sec, 49.990 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516910, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 833, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (966.74, 634.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.44, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1894, 5558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13824)
[0000][PE] mean and std.dev: (3021.20, 2658.75)
[0000][PE] low and high boundaries for proper pairs: (1, 17957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 437.423 CPU sec, 42.949 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517156, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 696, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1090.53, 957.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1544, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6641)
[0000][PE] mean and std.dev: (1675.30, 949.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 448.014 CPU sec, 52.920 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516985, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 754, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (812.73, 567.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1443, 2951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6839)
[0000][PE] mean and std.dev: (1837.12, 1324.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 439.542 CPU sec, 50.415 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517201, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 685, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (861.97, 693.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.65, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1531, 1932, 3911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8671)
[0000][PE] mean and std.dev: (2339.71, 1359.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 441.175 CPU sec, 48.839 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517321, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 562, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (633.62, 426.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 999, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1405.58, 890.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 451.004 CPU sec, 53.841 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517014, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (748, 830, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (924.22, 609.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.60, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1382, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1619.58, 675.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 448.109 CPU sec, 58.756 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517270, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 534, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (711.24, 573.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.65, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1435, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1788.50, 980.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 437.846 CPU sec, 47.582 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517542, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 502, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (675.73, 555.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.10, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1410, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1513.18, 1104.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 433.314 CPU sec, 46.961 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516377, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 1171, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1138.31, 1044.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.45, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1604, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1785.07, 1115.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 435.029 CPU sec, 45.221 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517013, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 476, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (773.64, 803.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1299, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (1331.75, 827.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 442.251 CPU sec, 43.827 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517005, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 795, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1050.73, 995.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.69, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1316, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (1170.75, 359.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 436.002 CPU sec, 45.746 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517334, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 430, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (759.91, 762.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.68, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1485, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (1358.71, 504.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 433.321 CPU sec, 45.433 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516651, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 459, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (996.58, 1006.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1355, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (1353.87, 556.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 434.671 CPU sec, 41.120 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516670, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 736, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (773.27, 657.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1239, 3594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8970)
[0000][PE] mean and std.dev: (1995.81, 1790.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 430.087 CPU sec, 39.256 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517438, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 462, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (703.58, 536.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.52, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1422, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1616.58, 1047.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 428.595 CPU sec, 42.207 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517108, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 566, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (756.58, 635.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1204, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1552.93, 1021.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 430.378 CPU sec, 41.250 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517076, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 412, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (448.86, 358.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1491, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1382.58, 637.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 427.685 CPU sec, 37.772 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517599, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 508, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (848.57, 750.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1733, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5960)
[0000][PE] mean and std.dev: (1785.33, 985.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 428.749 CPU sec, 38.278 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516848, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 983, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1268.33, 1342.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.78, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1252, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (1259.29, 600.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 433.085 CPU sec, 41.667 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516597, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 426, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (512.27, 358.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1390, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1356.60, 590.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 427.645 CPU sec, 35.271 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517111, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 903, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (1038.08, 867.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.23, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1461, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1550.73, 801.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 431.547 CPU sec, 44.624 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516848, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1164, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1208.08, 882.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 115.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1190, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (1332.10, 681.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 441.624 CPU sec, 50.853 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516975, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 525, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (949.43, 1024.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1440, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1628.52, 1002.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 427.604 CPU sec, 43.147 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516907, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 917, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1076.72, 1066.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1494, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1612.60, 838.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 437.415 CPU sec, 36.543 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517179, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 636, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (907.89, 778.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1370, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (1421.76, 603.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 431.452 CPU sec, 36.659 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516813, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 864, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (863.00, 608.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1428, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1463.00, 872.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 433.444 CPU sec, 35.001 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517214, 6, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 429, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (743.97, 696.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1398, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1517.81, 793.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 435.176 CPU sec, 48.619 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516656, 6, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 642, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (732.09, 586.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.22, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1357, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (1474.18, 618.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 431.996 CPU sec, 42.862 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517408, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 859, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1023.90, 769.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1224, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1350.82, 572.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 434.513 CPU sec, 44.509 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517070, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 381, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (535.30, 384.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1521, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5494)
[0000][PE] mean and std.dev: (1798.41, 1402.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 431.397 CPU sec, 37.072 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517325, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 926, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (832.90, 525.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1496, 1893, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (2048.67, 974.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 432.454 CPU sec, 39.489 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517150, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 528, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (819.42, 639.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 847, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (807.07, 467.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 436.604 CPU sec, 38.342 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517371, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 897, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (969.18, 885.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1800, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1570.88, 748.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 445.905 CPU sec, 43.275 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517431, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 506, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (643.24, 456.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1159, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (1292.05, 631.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 439.811 CPU sec, 38.749 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517357, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 842, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (804.33, 455.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.47, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1182, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1187.04, 491.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 446.064 CPU sec, 49.288 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517010, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 817, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1034.63, 820.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1386, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1460.38, 623.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 446.556 CPU sec, 54.638 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517310, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 696, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (960.00, 752.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1163, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (1187.09, 886.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 447.238 CPU sec, 59.302 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517287, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 639, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1117.54, 995.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.72, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1454, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1741.09, 1155.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 442.656 CPU sec, 52.596 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517135, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 650, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (840.03, 671.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.44, 115.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1344, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1471.32, 908.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 440.821 CPU sec, 49.427 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517284, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 768, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (906.09, 744.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1273, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1305.38, 761.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 446.634 CPU sec, 46.142 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517559, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 416, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (726.45, 676.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1578, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1538.15, 731.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 446.586 CPU sec, 44.483 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517030, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 429, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2058)
[0000][PE] mean and std.dev: (514.47, 411.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.68, 114.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1301, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1554.41, 993.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 447.798 CPU sec, 40.496 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516852, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (556, 1129, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1498.52, 1099.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.69, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1908, 4102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9708)
[0000][PE] mean and std.dev: (2690.12, 2315.74)
[0000][PE] low and high boundaries for proper pairs: (1, 12511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 447.140 CPU sec, 32.305 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517269, 11, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 497, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (656.65, 466.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.67, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1397, 2305, 5127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12587)
[0000][PE] mean and std.dev: (2802.27, 1866.47)
[0000][PE] low and high boundaries for proper pairs: (1, 16317)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 2066, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6618)
[0000][PE] mean and std.dev: (2072.40, 1172.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 447.515 CPU sec, 34.521 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517176, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 812, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (861.00, 720.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1475, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1509.48, 500.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 448.805 CPU sec, 30.049 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206118
	[0000][ M::kt_pipeline] read 1206118 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517168, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1047, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (837.35, 660.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.83, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1369, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (1452.76, 632.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 441.399 CPU sec, 33.734 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517033, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 694, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (838.23, 741.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.74, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1375, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4992)
[0000][PE] mean and std.dev: (1487.00, 1063.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206118 reads in 439.109 CPU sec, 30.675 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517102, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 397, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (448.61, 308.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1316, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1562.76, 703.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 446.413 CPU sec, 40.264 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516503, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 786, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (905.50, 725.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.32, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1529, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1945.19, 1270.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 452.273 CPU sec, 34.622 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517119, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 651, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (841.48, 719.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1199, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (1068.29, 440.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 450.698 CPU sec, 46.977 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517115, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 871, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (884.72, 637.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1683, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (1454.26, 597.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 443.244 CPU sec, 50.404 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517255, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 373, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (853.69, 875.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1219, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1522.57, 704.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 444.590 CPU sec, 55.506 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517419, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 717, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (929.94, 806.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.67, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1189, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1276.24, 723.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 440.925 CPU sec, 40.072 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517133, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 611, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (801.79, 712.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.71, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1175, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (1289.62, 493.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 437.048 CPU sec, 38.911 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516950, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 836, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (984.94, 800.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.85, 114.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1493, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (1355.84, 685.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 446.923 CPU sec, 37.546 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517187, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 697, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (912.47, 785.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.86, 114.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1220, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (1325.18, 612.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 435.198 CPU sec, 35.676 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517420, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 1140, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1258.23, 916.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1244, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1497.05, 804.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 436.201 CPU sec, 34.093 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 516875, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 439, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (633.02, 624.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 115.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1427, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1555.72, 772.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 440.118 CPU sec, 35.032 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517442, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 659, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (692.59, 534.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1496, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1408.53, 690.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 436.285 CPU sec, 39.009 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517394, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 753, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (902.87, 625.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1100, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (1187.64, 427.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 435.041 CPU sec, 34.736 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517458, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 546, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (661.63, 515.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1193, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (1285.08, 561.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 443.423 CPU sec, 45.363 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516812, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 852, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1179.72, 1073.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1363, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1227.12, 527.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 446.975 CPU sec, 41.555 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517112, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 868, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1048.78, 848.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1247, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (1255.91, 401.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 432.018 CPU sec, 35.617 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517412, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 814, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (983.57, 951.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.22, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1081, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1504.91, 1237.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 438.360 CPU sec, 39.053 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517424, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1039, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1077.73, 824.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.66, 115.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1303, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (1173.69, 593.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 438.519 CPU sec, 41.381 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516674, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 767, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (928.58, 800.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1304, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1380.48, 814.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 434.957 CPU sec, 37.822 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516827, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 360, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (625.14, 527.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.42, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1333, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1486.46, 788.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 441.239 CPU sec, 46.133 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517042, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 693, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (819.00, 694.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.58, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1329, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1417.21, 769.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 434.826 CPU sec, 43.304 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516962, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 794, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6158)
[0000][PE] mean and std.dev: (1324.33, 1411.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.59, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1160, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (1314.32, 610.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 447.550 CPU sec, 47.145 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516940, 8, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 799, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (952.91, 701.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.58, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1602, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (1796.55, 1095.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 440.477 CPU sec, 53.801 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517138, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 474, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (701.79, 644.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1813, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1707.60, 987.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 447.430 CPU sec, 53.800 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517426, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 618, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1049.33, 1025.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.47, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1388, 1496, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (1743.32, 706.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 430.756 CPU sec, 46.231 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516898, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1001, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (788.52, 554.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.92, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1530, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6990)
[0000][PE] mean and std.dev: (2077.19, 1277.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 441.844 CPU sec, 54.513 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517237, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 751, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (855.72, 700.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1355, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1414.95, 687.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 442.066 CPU sec, 44.523 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517267, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 1124, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1200.76, 898.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.61, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1633, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1942.33, 1325.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 439.744 CPU sec, 48.097 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517223, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 641, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1094.96, 1200.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.39, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1268, 3374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8124)
[0000][PE] mean and std.dev: (1970.27, 1312.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 435.144 CPU sec, 35.178 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517300, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1090, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (1220.90, 914.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1515, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1472.80, 760.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 442.921 CPU sec, 44.874 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517435, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 724, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (886.73, 661.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1244, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (1095.31, 466.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 439.845 CPU sec, 41.008 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517216, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 474, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (803.00, 721.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.64, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1284, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1626.84, 958.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 436.771 CPU sec, 32.088 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517160, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 599, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (794.33, 694.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.50, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1449, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1478.00, 825.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 432.150 CPU sec, 35.029 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517417, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 555, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (841.93, 762.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 3602, 4030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11640)
[0000][PE] mean and std.dev: (2440.30, 1867.25)
[0000][PE] low and high boundaries for proper pairs: (1, 15445)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1302, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1380.17, 707.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 437.141 CPU sec, 30.483 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517278, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 580, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1066.06, 1015.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.54, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1574, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1794.40, 1056.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 427.222 CPU sec, 29.925 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517477, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 571, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (752.67, 576.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.82, 115.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1788, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (2023.65, 1252.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 425.301 CPU sec, 27.309 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517443, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 821, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1094.87, 992.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.57, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1269, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1372.46, 861.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 431.297 CPU sec, 32.293 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517377, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 522, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (655.83, 520.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.53, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1356, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1699.62, 1255.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 424.776 CPU sec, 29.243 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516990, 1, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 781, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1165.39, 1128.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.70, 114.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1613, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1711.60, 919.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 426.705 CPU sec, 29.742 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517135, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 442, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5703)
[0000][PE] mean and std.dev: (920.74, 949.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.73, 114.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1330, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1240.31, 790.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 426.722 CPU sec, 28.502 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516670, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 394, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (999.65, 1191.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.56, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1548, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5989)
[0000][PE] mean and std.dev: (1623.80, 1006.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 436.219 CPU sec, 32.323 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517226, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 898, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1186.52, 1084.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.41, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1312, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (1403.04, 744.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 426.376 CPU sec, 30.371 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517464, 11, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 452, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (895.14, 869.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (565, 1444, 3508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9394)
[0000][PE] mean and std.dev: (1956.36, 1766.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12337)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1390, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1441.82, 805.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 450.018 CPU sec, 34.148 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516934, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 705, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (985.00, 877.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.55, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1354, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1270.09, 645.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 435.149 CPU sec, 32.931 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517454, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 556, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (750.59, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.52, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1318, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (1185.22, 514.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 435.287 CPU sec, 34.361 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517080, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 464, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (733.50, 687.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.40, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1543, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1819.05, 1155.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 444.241 CPU sec, 37.356 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517363, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 442, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (730.03, 703.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.48, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1418, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5803)
[0000][PE] mean and std.dev: (1660.33, 1157.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 430.531 CPU sec, 33.146 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517166, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 948, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1023.38, 726.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.87, 114.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1252, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1489.75, 1043.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 433.666 CPU sec, 36.022 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517007, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 515, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (586.00, 554.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.33, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1226, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1380.38, 730.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 432.182 CPU sec, 40.215 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517076, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 736, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6667)
[0000][PE] mean and std.dev: (1356.38, 1284.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.60, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1231, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1315.50, 787.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 432.321 CPU sec, 45.757 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516951, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 687, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (841.22, 696.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.75, 114.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1509, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (2040.58, 1564.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 432.173 CPU sec, 44.751 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517128, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 435, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (949.09, 895.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.43, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1266, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1452.67, 589.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 435.552 CPU sec, 44.283 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517100, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 459, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (581.50, 484.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.51, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 2371, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8557)
[0000][PE] mean and std.dev: (2319.22, 1525.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 434.434 CPU sec, 36.631 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516934, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 601, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (819.50, 772.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.77, 114.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1347, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6731)
[0000][PE] mean and std.dev: (1897.05, 1515.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 426.968 CPU sec, 33.565 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517404, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 614, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (896.28, 810.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.56, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1242, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1274.04, 488.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 428.474 CPU sec, 31.836 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517556, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 753, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (946.35, 765.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.62, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1451, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (1454.81, 682.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 421.314 CPU sec, 33.404 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516919, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 582, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (982.22, 974.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 855)
[0000][PE] mean and std.dev: (480.24, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1329, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1397.10, 821.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 428.644 CPU sec, 29.061 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 17254658, nseq: 115578
	[0000][ M::kt_pipeline] read 115578 sequences (17254658 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517219, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 912, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5886)
[0000][PE] mean and std.dev: (1309.93, 1295.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 471, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.88, 114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1321, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (1205.93, 414.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 425.351 CPU sec, 30.279 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 115578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 49643, 0, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (402, 470, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 858)
[0000][PE] mean and std.dev: (480.81, 115.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 115578 reads in 47.358 CPU sec, 3.502 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.743320 MHz
Runtime profile:

	Time taken for main_mem function: 44541.76 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2230.33, (2230.33, 2230.33)
	Writing IO time (SAM) avg: 5526.19, (5526.19, 5526.19)
	Reading IO time (Reference Genome) avg: 11.54, (11.54, 11.54)
	Index read time avg: 12.24, (12.24, 12.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 44516.53
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 44510.70, (44510.70, 44510.70)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 15164.12, (15164.12, 15164.12)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 29210.78, (29210.78, 29210.78)
		SMEM compute avg: 11047.45, (11075.52, 11019.92)
		SAL compute avg: 5743.39, (5769.94, 5716.24)
				MEM_SA avg: 2683.30, (2705.32, 2669.89)

		BSW time, avg: 7738.74, (7748.90, 7719.96)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
